2015,The cuneiform tablets of 2015.,"We discuss the problem of running today's software decades, centuries, or even millennia into the future."
2012,Extracting Energy from the Turing Tarpit.,"Part of Turing's fame and inspiration came from showing how a simple computer can simulate every other computer, and so ""anything is possible"". The ""Turing Tarpit"" is getting caught by ""anything is possible but nothing is easy"". One way to get caught is to stay close to the underlying machine with our languages so that things seem comprehensible in the small but the code blows up into intractable millions of lines. What if we used ""anything is possible"" to make very different kinds of computers which require new learning but the code compactly fits the problem and stays small?"
2011,Worlds: Controlling the Scope of Side Effects.,"Abstract
The state of an imperative program—e.g., the values stored in global and local variables, arrays, and objects’ instance variables—changes as its statements are executed. These changes, or side effects, are visible globally: when one part of the program modifies an object, every other part that holds a reference to the same object (either directly or indirectly) is also affected. This paper introduces worlds, a language construct that reifies the notion of program state and enables programmers to control the scope of side effects. We investigate this idea by extending both JavaScript and Squeak Smalltalk with support for worlds, provide examples of some of the interesting idioms this construct makes possible, and formalize the semantics of property/field lookup in the presence of worlds. We also describe an efficient implementation strategy (used in our Squeak-based prototype), and illustrate the practical benefits of worlds with two case studies."
2006,3D Model Annotation from Multiple Viewpoints for Croquet.,"Abstract:
This paper explores ways by which multiple authors can annotate 3D models from multiple viewpoints in a 3D collaborative environment, with particular reference to the environment provided by Croquet. We deal with two types of viewpoint: the conceptual viewpoint and the physical viewpoint. Our approach is to exploit the portal, which is a notable feature of Croquet, in order to achieve our goal. We can assume that a physical viewpoint is expressed by the position and orientation of a portal. To provide a method for annotation based on the conceptual viewpoint, we developed a new portal called an ""interactor"". The design and our preliminary implementation are discussed"
2006,Scalability of Collaborative Environments.,"Abstract:
Collaborative environments range from the very primitive (IM) to a rich mixture of media, computation, and three-dimensional graphics. Critical to all such systems is scalability: how many users can a system support in a single session? How many simultaneous sessions can be supported? These questions ultimately reduce to bandwidth and computation consumption of the collaborative system; the values, in turn, depend upon the architectural choices made in the implementation. Should the system be client-server or peer-to-peer? Should data or computation be replicated? Are there tradeoffs? Does it depend on the nature of the collaboration? In this paper, we derive bounds on bandwidth and latency for consistent collaborative systems. A consistent system is one in which all participants agree on the order of events across all peers. We examine and calculate the bandwidth and latency bounds on various system architectures. We calculate a theoretical lower bound for computational and bandwidth complexity, and compare the architectural bounds to the lowest global bound"
2005,Filters and Tasks in Croquet.,"Abstract:
Croquet is a collaborative 3D platform that allows users to work together to create and share ideas. We are developing an architecture that incorporates the ideas of filters and controls for 3D to solve this problem. Our model uses the Croquet 2D portals as view filters that can modify the nature of the content displayed on the other side of the filter. Another problem is that this collaborative sharing of interfaces tends to be complex. A new approach to this, an extension of the model-view-controller approach pioneered in Smalltalk is described. This extension of MVC to collaborative 3D user interface design consists of interactors, tasks, and replicants. This architecture solves the collaboration UI problem in a way that makes it quite easy for the designer to create robust multi-user applications without having to manage the divergent states and goals of each user. The programmer can focus on the design of an extensible system as if he is dealing with a single user."
2004,A conversation with Alan Kay.,Big talk with the creator of smalltalk - and much more
2004,Croquet: A Menagerie of New User Interfaces.,"Abstract:
A new architecture like Croquet presents numerous opportunities and challenges to create useful interfaces to enable access to the underlying power of the system. In particular, our focus on an integrated 2D and 3D system ensures that we have a rich intellectual environment within which to explore. This experience is similar to the development of the original modern windowing user interface created by Alan Kay, his team at Xerox Pare, and his Squeak team (Ingalls et al., 2002; Kay, 1996). Just as those teams did, we also have an infrastructure that is rich enough to allow us to perform some deep exploration into the presentation and manipulation of rich media expressed in 3D, and in the negotiations through these rich media worlds. A number of key technologies will be discussed including dynamic movable portals, floating 3D windows, true 3D creation tools, live teleporting snapshots, and completely new concepts such as 3D portals."
2004,"""The computer revolution"", ""computer science"", and ""software engineering"" haven't happened yet.","If we compare with ""The Printing Revolution"", and ""Modern Science and Engineering in the Physical World"", then we have to conclude that the computer versions of these haven't happened yet. The printing revolution was not the hardware technology that allowed the automation of hand written texts such as bibles, but a much longer learning curve that brought about new ways to think and argue, culminating in the 17th century with new ways to understand the physical and political universes in which humans live. This created our modern world. By contrast we are still generally ""automating bibles"" with computers and the ""new ways to think and argue"" are still being invented and haven't reached most computer users. Similarly, if we compare the state of software building against modern engineering - such as the building of the Empire State Building in New York City from scratch in less than one year with less than 3000 coordinated workers - then we can hardly claim ""software engineering"" to be much past ancient Egyptian pyramid building: millions of lines of code-bricks piled on top of each other with little coordination or discernable architecture.A science is generally about finding better models about structures in the universe. As Simon pointed out, ours is a ""science of the artificial"" like a ""science of bridges"". We first have to make structures and then study them to create better theories. We might claim that McCarthy's LISP-in-itself as a kind of ""Maxwell's Equations"", but we still lack the equivalent ""Special Theory"" that includes the handling of time in a reasonable and useful way. The immense commercialization of computing that happened in the 80s and 90s disrupted much of the progress in each of these areas, especially in the US. It's now time to ask again what these three ideas should mean, and then get back to the real work of advancing our field and making the real computer revolution happen."
2003,Interview with Alan Kay.,"The legendary Alan Kay and Roy E. Disney have graciously appeared on camera for interviews and joined the ACM Computers in Entertainment magazine's editorial board. Alan and Roy are two of the nicest people to talk to and work with. Alan talked about soft fun versus hard fun, and his research on Squeak for enhancing and amplifying learning in children's education. Roy told us about educators versus entertainers, and his views on traditional and CGI animations. The video clips of the interviews are available at http://www.acm.org/pubs/cie/oct2003/index.htmlAlan Kay, HP Fellow and President of Viewpoints Research Institute, is best known for the idea of personal computing the conception of the intimate laptop computer, and the inventions of the now ubiquitous overlapping-window interface and modern object-oriented programming. His deep interests in children and education were the catalyst for these ideas, and they continue to be a major source of inspiration. In the past, Alan has been a Xerox Fellow, Chief Scientist of Atari, Apple Fellow, and Disney Fellow. More information is available at http://www.squeakland.org/community/biography/alanbio.html and http://www.viewpointsresearch.org/alan.html"
2003,Croquet - A Collaboration System Architecture.,"Abstract:
Croquet is a computer software architecture built from the ground up with a focus on deep collaboration between teams of users. It is a totally open, totally free, highly portable extension to the Squeak (Ingalls et al., 2002) programming system. Croquet is a complete development and delivery platform for doing real collaborative work. There is no distinction between the user environment and the development environment. Croquet is focused on interactions inside of a 3D shared space that is used for context based collaboration, where each user can see all of the others and what their current focus is. This allows for an extremely compelling shared experience. A new collaboration architecture/protocol called TeaTime has been developed to enable this functionality. The rendering architecture is built on top of OpenGL (Woo et al., 1999)."
2002,The Computer Revolution Hasn't Happened Yet.,n/a
2000,The computer revolution hasn't happened yet (keynote session).,"The printing press was invented in the middle of the 15th century, yet it took 100 years before a book was considered dangerous enough to be banned. 150 years before science was invented, almost 200 years before a new kind of political essay was invented, and more than 300 hundred years before a country with an invented political system (the US) could be argued into existence via the press and a citizenry that could understand the arguments. Schooling and general literacy were also fruits of the press, and also took many centuries to become established. The commercial computer is now about 50 years old and is still imitating the paper culture that came before it, just as the printing press did with the manuscript culture it gradually replaced. No media revolution can be said to have happened without a general establishment of “literacy”: fluent “reading” and “writing” at the highest level of ideas that the medium can represent. With computers, we are so far from that fluent literacy — or even understanding what that literacy should resemble — that we could claim that the computer revolution hasn't even started. This talk will try to put a shape to the real computer revolution to come."
1998,The Computer Revolution Hasn't Happened Yet (Abstract).,
1997,Back to the Future: The Story of Squeak - A Usable Smalltalk Written in Itself.,"Squeak is an open, highly-portable Smalltalk implementation whose virtual machine is written entirely in Smalltalk, making it easy to. debug, analyze, and change. To achieve practical performance, a translator produces an equivalent C program whose performance is comparable to commercial Smalltalks.Other noteworthy aspects of Squeak include: a compact object format that typically requires only a single word of overhead per object; a simple yet efficient incremental garbage collector for 32-bit direct pointers; efficient bulk-mutation of objects; extensions of BitBlt to handle color of any depth and anti-aliased image rotation and scaling; and real-time sound and music synthesis written entirely in Smalltalk."
1993,The Early History of Smalltalk.,"Most ideas come from previous ideas. The sixties, particularly in the ARPA community, gave rise to a host of notions about “human-computer symbiosis” through interactive time-shared computers, graphics screens and pointing devices. Advanced computer languages were invented to simulate complex systems such as oil refineries and semi-intelligent behavior. The soon to follow paradigm shift of modern personal computing, overlapping window interfaces, and object-oriented design came from seeing the work of the sixties as something more than a “better old thing”. That is, more than a better way: to do mainframe computing; for end-users to invoke functionality; to make data structures more abstract. Instead the promise of exponential growth in computing/$/volume demanded that the sixties be regarded as “almost a new thing” and to find out what the actual “new things” might be. For example, one would compute with a handheld “Dynabook” in a way that would not be possible on a shared mainframe; millions of potential users meant that the user interface would have to become a learning environment along the lines of Montessori and Bruner; and needs for large scope, reduction in complexity, and end-user literacy would require that data and control structures be done away with in favor of a more biological scheme of protected universal cells interacting only through messages that could mimic any desired behavior. Early Smalltalk was the first complete realization of these new points of view as parented by its many predecessors in hardware, language and user interface design. It became the exemplar of the new computing, in part, because we were actually trying for a qualitative shift in belief structures—a new Kuhnian paradigm in the same spirit as the invention of the printing press—and thus took highly extreme positions which almost forced these new styles to be invented."
1986,Keynote address (summary only).,"Alan Kay asked us to remember the words of Bob Barton, “good ideas don't often scale”, with respect to using the same window paradigm for everything from Macintoshes to ultra-high resolution large screens. He further suggested that good user interfaces should be useable by children under six years of age. Adults don't make good subjects because they have too much patience. “They've learned to suffer. That's what schools are for”. A videotape of a 22 month-old girl adroitly using MacPaint drove home his point. Kay promoted the idea of “agents”, computer-created creatures with personality and some ability to act on their own. As an experiment in using advanced technology to further this idea, Kay brought together a group of people including a Disney animator to spend a weekend with an E&S CT-6 real-time shaded graphics system. Out of this came some very interesting animation of a bouncing rabbit's-eye-view ramble through an infinite forest and a swim in a shallow sea in the company of a couple of realistically swimming sharks. We were exhorted to strive for impressionistic imagery such as that seen in the dance of the Sugar-Plum fairies in Disney's Fantasia, rather than spending teraflops trying to achieve the ever-receding goal of absolute realism. Kay closed by noting that while art imitates life, computer art/animation can imitate creation itself."
1985,The User Interface as a Theatrical Mirror.,n/a
1984,Soothsayers of the electronic age.,"Within our lifetimes, we have seen three generations of computers flourish and fade into the archives of technology. Today we are experiencing the fruits of the Fourth Generation. Our expectations of the Fifth Generation are the focus of this conference and, indeed, of the plans for our immediate future. From these expectations, we can extrapolate to the Sixth Generation. But what lies beyond? Three noted thinkers in the computer industry comprise this panel of soothsayers, examining the omens and auguries of this electronic age. Dr. Carl Hammer investigates the scenario beyond the data processing horizon. He explores processing by systems which are intelligent, expert, and capable of making complex decisions, human decisions. Dr. Kerry Joels predicts the Seventh Generation system, giving specifications, capabilities, and costs of a likely model. He maps the route for reaching the Seventh Generation and points out the landmarks on a journey we have already begun. Dr. Alan Kay foretells the future of small computers in an age of democratization of access and universal computer literacy. Each speaker will address the interaction between the demands of technology on society and the demands society will make of its technology. And each will forecast a future which could be possible, should we wish it to be."
1983,Artificial Intelligence: Its Impact on Human Occupations and Distribution of Income.,n/a
1980,User Interface Design in the Smalltalk Computing System (Abstract).,n/a
1978,Programming for children on a personal computer (Abstract of presentation).,n/a
1977,Personal Dynamic Media.,"Abstract:
The Learning Research Group at Xerox Palo Alto Research Center is concerned with all aspects of the communication and manipulation of knowledge. We design, build, and use dynamic media which can be used by human beings of all ages. Several years ago, we crystallized our dreams into a design idea for a personal dynamic medium the size of a notebook (the Dynabook) which could be owned by everyone and could have the power to handle virtually all of its owner's information-related needs. Towards this goal we have designed and built a communications system: the Smalltalk language, implemented on small computers we refer to as ""interim Dynabooks."" We are exploring the use of this system as a programming and problem solving tool; as an interactive memory for the storage and manipulation of data; as a text editor; and as a medium for expression through drawing, painting, animating pictures, and composing and generating music. (Figure 1 is a view of this interim Dynabook.)"
1971,"Computer structures: past, present and future (abstract).",Computer Design in the seventies will be delineated by a number of past ghosts and present spectres.
1971,A Laboratory for Hand-Eye Research.,n/a
1971,"The Use of Vision and Manipulation to Solve the ""Instant Insanity"" Puzzle.",n/a
