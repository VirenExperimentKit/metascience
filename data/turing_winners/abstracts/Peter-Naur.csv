2007,Computing versus human thinking.,n/a
2006,Computing versus human thinking.,n/a
1993,Understanding Turing's Universal Machine - Personal Style in Program Description.,"The study presents the results of an experiment on programmers' descriptions and understanding. The 12 participants, students of computing, have produced notes on Turing's description of his universal machine and, in a second experiment phase, have made mutual evaluations of their notes. The analysis of the resulting notes shows large individual differences of styles and evaluations with respect to all significant issues of the descriptions and understanding, including the evaluations of program descriptions having particularly full formal characteristics. The consequences of the observations for the teaching of programming and for programming methodologies are discussed. The Appendix gives an annotated version of Turing's description of the universal machine.
"
1986,Thinking and Turing's Test.,"Abstract
The questions raised by A. M. Turing in his paper on thought and machines are discussed. Human thought is considered in turn as a concept of normal language usage, as a basic concept of psychology, and as the basis of intellectual activity. It is concluded that neither of these notions of thought identifies something specific that a human being can or cannot do. The imitation game proposed by Turing for deciding whether a machine can think is found to result from an arbitrary empoverishment of the channel of communication between the interrogator and the item under investigation. Turing's notions of thinking are shown to lead to logical difficulties. An alternative view of consciousness, that would place it beyond the reach of any finite test, is finally discussed."
1985,Intuition in Software Development.,"Abstract
A characterization of the pervasiveness of intuition in human conscious life is given, followed by some remarks on successes and failures of intuition. Next the intuitive basis of common notions of scales, logic, correctness, texts, reasoning, and proofs, is described. On this basis the essential notions of data models of human activity and of software development, as built on human intuition, are discussed. This leads to a discussion of software development methods, viewed as means to overcoming the hazards of intuitive actions. It is concluded that programmers' experience and integrity are more important than their use of methods."
1982,Formalization in Program Development.,"Abstract
The concepts of specification and formalization, as relevant to the development of programs, are introduced and discussed. It is found that certain arguments given for using particular formal modes of expression in developing and proving programs correct are invalid. As illustration a formalized description of Algol 60 is discussed and found deficient. Emphasis on formalization is shown to have harmful effects on program development, such as neglect of informal precision and simple formalizations. A style of specifications using formalizations only to enhance intuitive understandability is recommended."
1980,Impressions of the Early Days of Programming.,"Abstract
The paper describes the author's experience of working with the Edsac, Cambridge, England, in 1951 and 1953. The author's background in astronomical calculations using hand methods and his plans for spending a year in Cambridge are first described. This is followed by impressions of the Mathematical Laboratory, Cambridge, its staff, the external characteristics of the Edsac, the library of subroutines, documentation for programmers, machine language, paper tape preparation equipment, and organization of the use of the Edsac. The second major part of the paper describes the steps leading to an Edsac-program for calculating the motion of a minor planet by step-by-step integration of the equations of motion, with special attention to the preparation and check of large amounts of input to the program."
1979,Critique of the ISO Data Processing Vocabulary.,n/a
1975,"Programming Languages, Natural Languages, and Mathematics.","Some social aspects of pro gramming are illuminated through analogies with similar aspects of mathematics and natural languages. The split between pure and applied mathematics is found similarly in programming. The development of natural languages toward flexionless, word-order based language types speaks for programming language design based on general, abstract constructs. By analogy with incidents of the history of artificial, auxiliary languages it is suggested that Fortran and Cobol will remain dominant for a long time to come. The most promising avenues for further work of wide influence are seen to be high quality program literature (i.e. programs) of general utility and studies of questions related to program style."
1975,"Programming Languages, Natural Languages, and Mathematics.","Some social aspects of programming are illuminated through analogies with similar aspects of mathematics and natural languages. The split between pure and applied mathematics is found similarly in programming. The development of natural languages toward flexionless, word-order based language types speaks for programming language design based on general, abstract constructs. By analogy with incidents of the history of artificial, auxiliary languages it is suggested that Fortran and Cobol will remain dominant for a long time to come. The most promising avenues for further work of wide influence is seen to be high quality program literature (i.e. programs) of general utility and studies of questions related to program style."
1974,Trends in Computer Science Education.,"Abstract
In these notes, what is meant by computer science is the discipline concerned with the hardware and software of computers, as well as with data, data representations, processes, algorithms, and programs, as directly inspired by the existence of computers. As education is regarded not merely such teaching and instruction that is given in the context of a curriculum called ‚Äúcomputer science‚Äù, ‚Äúinformatics‚Äù, ‚Äúdatalogy‚Äù, or a related name, but also more isolated activities of education as they take place both inside and outside the formal institutions of schooling and education."
1968,"'Datalogy', the science of data and data processes.",n/a
1966,Program translation viewed as a general data processing problem.,"Efficiency dictates that the overall effectiveness of a compiler be increased by all means available. For a compiler to have a substantial useful life it needs a clear logical structure, reliability and sound data processing techniques. A compiler must be based on fixed conventions to preserve efficiency and reliability; empty options and default conventions violate this dictum. Use of structure to associate various parts of a program and economy of features promote clarity and reliability."
1965,The performance of a system for automatic segmentation of programs within an ALGOL compiler (GIER ALGOL).,"The GIER ALGOL compiler makes use of an automatic system for handling the transfers of program segments from the drum store to the core store at program execution time. The logic of this system is described. The performance of the system is discussed, primarily on the basis of execution times related to two specific programs. The discussion concludes with an assessment of the potential gains of various ways of improving the system."
1964,Certification of algorithm 122: Tridiagonal matrix.,n/a
1964,Certification of algorithm 150: SYMINV2.,n/a
1964,Remarks on algorithm 91: Chebyshev curve fit.,n/a
1963,Revised report on the algorithm language ALGOL 60.,The report gives a complete defining description of the international algorithmic language Algol 60. This is a language suitable for expressing a large class of numerical processes in a form suitably concise for direct automatic translation into the language of programmed automatic computers.†
1963,Remarks on algorithm 42: invert.,n/a
1963,Remarks on and certification of algorithm 50: inverse of a finite segment of the Hilbert matrix.,n/a
1963,Remarks on and certification of algorithm 52: a set of test matrices.,n/a
1963,Certification of algorithm for calculating primes by means of GPS.,n/a
1963,Remark on algorithm 107: Gauss's method.,n/a
1963,Certification of algorithms 117 and 118 magic squares (even and odd orders).,n/a
1963,Certification of algorithms 120 and matrix inversion by Gauss-Jordan inversion II.,n/a
1963,Documentation problems: ALGOL 60.,In presenting the following notes I wish to make it clear that they express only my private views. Thus although these views naturally have been greatly influenced by the experience I have gained through my participation in the international ALGOL effort they do not represent the agreed opinion of any group and I alone should be held responsible for any misrepresentations.
1963,"Correction to earlier remarks on algorithm 42 invert, alg. 107 Gauss's method, alg 120 inversion II, and gjr.",n/a
1963,Additional remarks on algorithm 52: a set of test matrices.,n/a
1963,Certification of algorithm 85: Jacobi.,n/a
1963,Revised report on the algorithmic language ALGOL 60.,n/a
1963,GIER-A Danish Computer of Medium Size.,"Abstract:
This paper gives a brief review of the design of the machine GIER (42-bit words, 1-k core store, 12-k drum store, 50-microsecond fixed point, 100-microsecond floating, add time) and its programming systems. The principal subjects are: The order structure, the operating system, the ALGOL 60 system, an evaluation of the order structure, the hardware organization, and the latest hardware extensions, including a hybrid computer system."
1961,A storage allocation scheme for ALGOL 60.,A storage allocation scheme for a machine with a 2048-instruction core store and a magnetic drum is described. The use of the drum for storing program blocks and/or data must be directed by the programmer through auxiliary information in the ALGOL program. The administrative routines controlling the storage at run time are described in full. A detailed example is given.
