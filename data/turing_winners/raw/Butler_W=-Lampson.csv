2018,Verifying concurrent software using movers in CSPEC.
2015,Perspectives on protection and security.
2013,A Machine Learning Framework for Programming by Example.
2013,A colorful approach to text processing by example.
2012,"What Computers Do: Model, Connect and Engage."
2012,"What Computers Do: Model, Connect, Engage."
2012,Textual Features for Programming by Example.
2011,Making untrusted code useful: technical perspective.
2009,Privacy and security - Usable security: how to get it.
2008,Lazy and speculative execution in computer systems.
2006,Lazy and Speculative Execution in Computer Systems.
2006,"Gold and Fool's Gold: Successes, Failures, and Futures in Computer Systems Research."
2004,Computer Security in the Real World.
2003,A Trusted Open Platform.
2003,Getting computers to understand.
2001,The ABCD's of Paxos.
2000,Revisiting the PAXOS algorithm.
1999,NSF workshop on a software research program for the 21st century.
1999,IP lookups using multiway and multicolumn search.
1999,SPKI Certificate Theory.
1998,IP Lookups Using Multiway and Multicolumn Search.
1998,A Processor for a High-Performance Personal Computer.
1997,Revisiting the Paxos Algorithm.
1996,Virtual Infrastructure: Putting Information Infrastructure on the Technology Curve.
1996,Analysis and Caching of Dependencies.
1996,How to Build a Highly Available System Using Consensus.
1994,"Interconnecting Computers: Architecture, Technology, and Economics."
1993,Authentification and Delegation with Smart-Cards.
1993,A Calculus for Access Control in Distributed Systems.
1993,Correctness of At-Most-Once Message Delivery Protocols.
1993,Authentication in the Taos Operating System.
1993,A New Presumed Commit Optimization for Two Phase Commit.
1992,Authentication in Distributed Systems: Theory and Practice.
1992,On-Line Data Compression in a Log-Structured File System.
1992,At-Most-Once Message Delivery. A Case Study in Algorithm Verification.
1991,A Calculus for Access Control in Distributed Systems.
1991,Authentication in Distributed Systems: Theory and Practice.
1991,Authentication and Delegation with Smart-cards.
1988,"Pebble, a Kernel Language for Modules and Abstract Data Types."
1986,Designing a Global Name Service.
1986,Current work on authentication.
1986,A Global Authentication Service without Global Trust.
1984,Programming language issues for the 1980's: SIGPLAN '83: symposium on programming languages issues in software systems.
1984,Hints for Computer System Design.
1984,"Gene McDaniel, Severo M. Ornstein: An Instruction Fetch Unit for a High-Performance Personal Conmputer."
1984,A Kernel Language for Abstract Data Types and Modules.
1983,Organizing software in a distributed environment.
1983,Practical Use of a Polymorphic Applicative Language.
1983,Hints for Computer System Design.
1982,Fast Procedure Calls.
1981,The Memory System of a High-Performance Personal Computer.
1981,"Distributed Systems - Architecture and Implementation, An Advanced Course."
1980,Experience with Processes and Monitors in Mesa.
1980,Atomic Transactions.
1980,Applications and Protocols.
1980,"Ethernet, Pup and Violet."
1980,A Processor for a High-Performance Personal Computer.
1979,Experience with Processes and Monitors in Mesa (Summary).
1979,An Open Operating System for a Single-User Machine.
1978,Proof Rules for the Programming Language Euclid.
1978,Proof Rules for the Programming Language Euclid.
1977,A Terminal-Oriented Communication System.
1977,Notes on the Design of Euclid.
1976,Reflections on an Operating System Design.
1975,Synchronization: Introduction by the session chairman.
1974,Protection.
1974,Redundancy and Robustness in Memory Protection.
1974,An open operating system for a single-user machine.
1974,On the transfer of control between contexts.
1973,A Note on the Confinement Problem.
1972,"Proceedings of the Third Symposium on Operating System Principles, SOSP 1971, Stanford University, Palo Alto, California, USA, October 18-20, 1971."
1969,Dynamic protection structures.
1968,A scheduling philosophy for multiprocessing systems.
1967,An online editor.
