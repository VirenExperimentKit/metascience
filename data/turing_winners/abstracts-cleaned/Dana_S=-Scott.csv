2016,automating free logic isabelle/hol,present interactive automated theorem prover free higher-order logic implementation top isabelle/hol framework utilizes semantic embedding free logic classical higher-order logic capability tool demonstrated first experiment category theory
2014,stochastic lambda-calculi extended abstract,shown operator graph model lambda-calculus  expanded allow random combinators result model new language random algorithm
2014,cartesian closed category separable scott domain,classify sub-cartesian closed category category separable scott domain classification employ notion coherence degree determined possible inconsistency pattern set finite element domain using classification determine sub-cartesian closed category category separable scott domain contain universal object separable scott domain model -calculus classified retraction coherence degree
2012,lambda calculus,fast development early following hilbert codification mathematical logic led incompleteness theorem computable function undecidability theorem general formulation recursive function theory so-called lambda calculus played key role history development traced much later place lambda calculus mathematics programming-language theory outlined
2009,semilattices domain computability invited talk,everyone know one popular notion scott domain defined bounded complete algebraic cpo closely related algebraic lattice  scott domain becomes algebraic lattice adjunction  top element  every non-empty scott-closed subset algebraic lattice scott domain moreover isolated  element algebraic lattice form semilattice  semilattice zero element provided top element isolated also unit element algebraic lattice may regarded ideal completion semilattice isolated element well known clear easy-to-construct domain countable semilattices giving isomorphic copy countably based domain approach seems advantage ``information system abstract lattice formulation make definition solution domain equation elementary justify ``domain domain also immediate computable structure
2008,reconsidering ordered pair,well known wiener-kuratowski explicit definition ordered pair set  = {{x} {xy}} work well many set theory fails class cannot member singleton aid axiom foundation propose recursive definition ordered pair address shortcoming also naturally generalizes ordered tuples greater length many advantage new definition allows uniform definition working equally well wide range model set theory zfc closely related theory rank ordered pair two infinite set new definition turn equal maximum rank set
2004,equilogical space,well known one build model full higher-order dependent-type theory  using partial equivalence relation  assembly partial combinatory algebra idea category pers er  applied structure well particular easily define category er equivalence-preserving continuous mapping standard category  topological t-spaces call space  equilogical space resulting category equ show categoryin contradistinction cartesian closed category direct proof outlined us equivalence category equ category pequ pers algebraic lattice  another paper carboni rosolini  abstract categorical generalization show many category cartesian closed category equ obviously contains  full subcategory naturally contains many well known subcategories particular show consequence work ershov berger others kleenekreisel hierarchy countable functionals finite type naturally constructed equ natural number object  repeated use equ exponentiation binary product also develop equ notion modest set  assembly explain model dependent type theory obtained make comparison model known model
2002,local realizability topos modal logic computability,work step toward development logic type computation includes usual space mathematics construction also space logic domain theory using realizability investigate configuration three topos regard describing notion relative computability attention focussed certain local map topos first study axiomatically deriving modal calculus internal logic resulting framework intended setting logical categorical study relative computability
2001,new category semantics,domain theory denotational semantics thirty year old many variation idea many interesting construct proposed many people realizing wide variety type domain generally effort create category domain cartesian closed  permit solution domain equation 
2000,effective version equilogical space,work step toward development logic type computation includes usual space mathematics construction also space logic domain theory using realizability investigate configuration three topos regard describing notion relative computability attention focussed certain local map topos first study axiomatically deriving modal calculus internal logic resulting framework intended setting logical categorical study relative computability
2000,powersets fixed point lambda calculus,knaster-tarski fixed-point theorem applies monotone self-maps powerset giving existence minimal maximal fixed point analogy category theory give  certain category certain functors  existence initial algebra final coalgebras interesting kind functors categorical construction reduced back powersets monotone function application include construction new lambda-calculus model based initial algebra final coalgebras
1998,type theory via exact category,partial equivalence relation  standard tool semantics type theory programming language since often provide cartesian closed category extended definability using theory exact category give category-theoretic explanation construction category partial equivalence relation often produce cartesian closed category show several familiar example category partial equivalence relation fit general framework
1996,symbolic computation teaching,since  author tried show possible put complete semester-long course machine-held form several example carried  paper report experience problem encountered suggestion future development
1996,hope achieve automated deduction abstract,fortunate capacity speed computer increased quickly last decade many research group around world able make new stronger implementation solve new problem many limitation still exist however field must decide design objective next period work give attention user interface make better connection computer algebra make strong effort construct large-scale knowledge base investigate non-standard non-classical logic concerned pedagogical application look application question - others - need answered survey possibility presented
1993,type-theoretical alternative iswim cuch owhy,paper  concern definition axiomatization application hereditarily monotone continuous functionals generated integer booleans  system formulated typed system combinators  recursion operator  proof rule contrasted certain extent untyped -calculus publication  new preface added many bibliographical reference comment footnote appended
1992,extensional pers,search conducted class pers  resulting full subcategory expected property good category cpos ccc  every endomorphism canonical fixed point moreover reflection functor  yield good notion partial map following topic discussed convention partial-map classifier expers expers domain reflectivity strict map multicorreflectivity strict map extensional natural number domain equation intrinsic description
1991,logician replaced machine,n/a
1989,domain logic extended abstract,author discovery domain domain-theoretic model lambda -calculus  discussed along research others working area time
1986,capturing concept data structure,n/a
1985,semantically based programming tool summary,one fundamental thesis major improvement software engineering practice come development use software development tool thesis based belief formal method ultimately far profound effect software engineering productivity management based method programming language design fast hardware also believe formal method nature suitable practical use mechanized system say everything automated point actual formal step must automated even guidance use come user kind observation prompted developer lcf introduce ml type structure protect notion “theorem” together formal deductive structure defines surrounding heuristic apparatus must expected heuristic continual development deductive system fragile change infrequently
1983,first step towards inferential programming,basic premise ability construct modify program improve without new comprehensive look entire programming process past theoretical research say logic program tended focus method reasoning individual program little done seems u develop sound understanding process programming  process program evolve concept practice present lack mean describe technique program construction improvement way properly link verification documentation adaptability
1982,domain denotational semantics,purpose theory domain give model space define computable function kind space needed denotational sematics involve space higher type  also space defined recursively  also required many special domain construct  order create desired structure several choice suitable category domain basic one simplest property one sometimes called consistently complete algebraic cpos category domain studied paper new hoped simpler point view incorporating approach many author unified presentation briefly domain element represented set theoretically aid structure called information system system familiar mathematical logic use seems accord well intuition many thing done previously axiomatically proved straightfoward way theorem present paper discus many example informal way serve introduction subject
1977,logic programming language,logic long interested whether answer certain question computable principle since outcome put bound possibility formalization recently precise comparison efficiency decision method become available development complexity theory however application logic big question whether method logic significance direction applied part computability theory programming language offer obvious opportunity syntactic formalization well advanced however semantical theory hardly said complete though many example still give wide-ranging mathematical answer query machine computable process  machine simulate process program naturally enter giving description process definition precise meaning program requires u explain object computation  transformed  far theory automaton net though interesting dynamic formalized portion field perhaps much concentration finite-state algebraic aspect would seem understanding higher-level program feature involves u infinite object force u pas several level explanation go conceptual idea final simulation real machine level made mathematically exact find right abstraction represent necessary structure experience many independent worker method data type lattice  information content ordering continuous mapping demonstrated flexibility approach providing definition proof clean without undue dependence implementation nevertheless much remains done showing abstract conceptualization  actualized say unified theory
1976,data type lattice,meaning many kind expression programming language taken element certain space partial object report space modeled one universal domain ${ p}  $ set subset integer domain render connection semantic theory ordinary theory number theoretic  function clear straightforwardread https//epubssiamorg/doi//
1975,combinators class,paper try answer question relation class abstraction λ-abstraction model λ-calculus
1975,philosophical issue concerning theory combinators,paper present informal way several conflicting viewpoint concerning concept theory model application λ-calculus combinators
1972,mathematical concept programming language semantics,mathematics century development semantical situation clean may surprising subject attracts people enjoy clarity generality neatness one hand concept mathematical object  various formal mean expression mathematical expression generated part regular manner every effort made supply expression denotation 
1967,definitional suggestion automaton theory,n/a
1967,proof independence continuum hypothesis,n/a
1959,finite automaton decision problem,finite automaton considered paper instrument classifying finite tape one-tape automaton defines set tape two-tape automaton defines set pair tape et cetera structure defined set studied various generalization notion automaton introduced relation classical automaton determined decision problem concerning automaton shown solvable effective algorithm others turn unsolvable algorithm
1958,foundational aspect theory measurement,n/a
1958,generalization lemma g f rose,n/a
