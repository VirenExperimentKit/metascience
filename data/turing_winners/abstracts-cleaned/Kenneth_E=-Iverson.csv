2007,notation tool thought,importance nomenclature notation language tool thought long recognized chemistry botany example establishment system nomenclature lavoisier linnaeus much stimulate channel later investigation concerning language george boole law thought  asserted language instrument human reason merely medium expression thought truth generally admitted
2007,dictionary apl,apl formal imperative language imperative sentence may called instruction may executed produce result illustration used instruction indented result execution shown following line without indentation
1999,programming notation system design,area design systematic design procedure necessarily based upon method precise formal description entity designed complex system commonly embrace element number disparate discipline  exists common terminology notation adequate description entire complex system hence adequate basis systematic “systems design”
1997,mathematical root j,n/a
1995,representation recursion,recursive definition important tool mathematics programming represented variety way paper examine relation translation using range example illustration example begin recursive definition expressed conventional mathematical notation sharp apl apl drawn published soukxs
1994,tag train agenda gerund,train agenda gerund available j time conflict apl system particular since noun train train j conflict strand apl paper review definition us train agenda gerund present new extension enhance utility
1991,personal view apl,essay portrays personal view development several influential dialect apl apl j discussion trace evolution treatment array function operator well function definition grammar terminology spelling
1991,tacit definition,n/a
1990,apl\,paper describes version apl based upon dictionary  significantly simplified enhanced directly usable machine provides ascii character also describes salient feature c implementation tested several machine available freeware four primary motivation work provide apl system use teaching mathematics related topic modern free transportable devise spelling scheme based ascii alphabet preserve major advantage one-letter word based special alphabet commonly used apl exploit advantage breaking strict conformance earlier apl normally obligatory commercial system explore unusual style c programming make heavy use pre-processing facility example use language variety topic provided appendix indebted number colleague advice help anthony howe david steinbrook bob bernecky mark czerwinski lj dickey jiri dvorak james hui eric iverson paul jackson roland pesch
1989,processing natural language syntactic semantic mechanism,paper describes simple approach language processing knowledge domain stored three row numeric matrix semantic net meaning individual word contained pointer word object environment relation object intersection pointer resolve ambiguity inherent multiple meaning word input string treated series triad result processing one triad passed argument next triad parsing required noun phrase verb phrase done semantic mean  word semantic pointer syntactic parser utilized
1989,phrasal form,n/a
1989,semantic processor natural language,problem extraction representation utilization meaning english text elusive semantic parsing permit effective relevant response complex question domain well defined semantic net used three-row numeric matrix column net represents assertion domain meaning word contained association  intersection pointer used define phrase ambiguity reduced necessary implementation common sense-limiting interpretation meaning may associated subject object verb multiply embedded clause processed passing result one clause argument next mean complex expression reduced single token<>
1987,apl87,first began developing formal language use teaching graduate program automatic data processing established professor howard aiken harvard  language known apl since passed several phase main one documented three publication  book programming language  apl manual  aplsv manual  last two co-authored ad falkoff specification language provided publication later supplemented philosophical study discussed design principle followed major design choice made include design apl  evolution apl  falkoff story ee mcdonnell  implementation produced various manufacturer attempt inject aspect language  many diverse line development pursued largely reported manual proceeding apl conference journal apl quote-quad  vector   began line development reported largely document internal ibm corp  ip sharp associate  also apl conference  work culminated dictionary apl scheduled appear early issue apl quote-quad  follows referred “the dictionary” present paper companion study manner  preview presented november last year internal ibm conference commemorated th anniversary initiation apl timesharing service within ibm major point discussed include terminology apl alphabet word formation parsing rule mixed function operator localization discussing decision made early day colleague apl group tj watson research center  use term usage meant imply agreement current thinking present colleague ip sharp associate presented dictionary although current implementation entire dictionary several implementation embody significant part application operator derived user-defined function production “mixed” array expression    abcd two implementation  particularly close dictionary latter used executed example paper
1979,operator,although operator apply function produce function prove useful mathematics absent programming language paper illustrates simplicity power term operator apl examines related construct programming language
1973,design apl,paper discus development apl emphasizing illustrating principle underlying design principle simplicity appears strongly minimization rule governing behavior apl object principle practicality served design process relies heavily experimentation paper give rationale many specific design choice including necessary adjunct system management
1964,formalism programming language,n/a
1964,method syntax specification,addition simple convention backus normal form specification language provides mode description compact easier prepare use either standard bnf description  corresponding syntactical chart 
1964,formal description system/360,paper present precise formal description complete computer system ibm system/ description functional describes behavior machine seen programmer irrespective particular physical implemention expressly specifies state every register facility accessible programmer every moment system operation information actually available
