1990,addition machine,possible compute gcd $$ efficiently $o$ addition subtraction three arithmetic register available two several function $x^y  z$ also efficiently computable small number register using addition subtraction comparison
1982,compilation regular expression integrated circuit,design integrated circuit implement arbitrary regular expression considered general regular expression n operand may converted nondeterministic finite automaton n state n transition instead converting nondeterministic device deterministic one two way implementing nondeterministic device directly proposed one apporach produce pla  approximate dimension n row n column representing state nondeterministic finite automaton directly column approach theoretically suboptimal make use carefully developed technology care pla implementation done may preferred technique many real situation another approach use hierarchical structure automaton produced regular expression mcnaughton-yamada algorithm guide hierarchical layout circuit method produce circuit side within constant factor best done general
1980,compilation regular expression integrated circuit extended abstract,consider design integrated circuit implement arbitrary regular expression general may use mcnaughton-yamada algorithm convert regular expression length n nondeterministic finite automaton n state n transition instead converting nondeterministic device deterministic one propose two way implementing nondeterministic device directly first could produce pla  approximate dimension n × n representing state directly column rather coding state binary approach theoretically suboptimal make use carefully developed technology care pla implementation done may preferred technique many real situation another approach use hierarchical structure automaton produced regular expression guide hierarchical layout circuit method produce circuit  side within constant factor best done general
1979,paradigm programming,today want talk paradigm programming affect success designer computer program taught embodied programming languagesthis article summarized morning paperan interesting/influential/important paper world c every weekday morning selected adrian colyer
1978,exact approximate membership tester,paper consider question much space needed represent set given finite universe u subset v  exact membership tester procedure element u determines v approximate membership tester allowed make mistake require membership tester correctly accepts every element v allow also accept small fraction element u - v
1975,expected time bound selection,new selection algorithm presented shown efficient average theoretically practically number comparison used select ith smallest n number n + min + lower bound within  percent formula also derived
1975,algorithm select - finding ith smallest n element m1 algorithm 489,select rearrange value array segment x x  contain -th smallest value l ≤ ≤ k imply x ≤ x k ≤ ≤ r imply x ≥ x significantly faster average due effective use sampling determine element partition x average time  trial required select find determine median n element found experimentally n     select  m  m  m  m find  m  m  m  m arbitrary constant    appearing algorithm minimize execution time particular machine used select shown run time asymptotically proportional n + min  n = l - r +  = k - l +  lower bound running time within  percent value also proved  site  proved select terminates
1975,exact time required perform generalized addition
1973,linear time two tape merge,n/a
1973,time bound selection,number comparison required select i-th smallest n number shown linear function n analysis new selection algorithm—pick specifically  n comparison ever required bound improved extreme value new lower bound requisite number comparison also proved
1972,interpretation-oriented theorem prover integer,special purpose theorem prover establishing validity expression integer variable developed part program verifier built around powerful system manipulating simplifying integer expression
1972,permuting information idealized two-level storage,assume computer  slow large memory consisting page capacity p record available operation manipulating information slow memory limited selecting two page forming subset size p union two page storing subset third page
1972,linear time bound median computation,new upper lower bound presented maximum number comparison f required select i-th largest n number upper bound found analysis new selection algorithm linear function n f ≤ n/ < n  ≤ ≤ n lower bound shown deductively f ≥ n+min +  −   ≤ ≤ n− case computing median fn ≥ n/ − 
1971,note avoiding go statement,n/a
1971,toward interactive design correct program,chapter describes imagined interaction computer programmer machine might made feasible within next decade focus intelligent assistant approach chapter also present earliest published description intelligent programming assistant describes imagined interaction computer programmer intelligent program verifier assistant system feasible within following decade programmer interactive console designing program first overall outline successive development detail computer course serving customary role syntactic analyzer code generator program executor prompter file handler addition computer continually checking program level specification consistency programmer stated intention
1970,interpretation oriented theorem prover integer,special purpose theorem prover establishing validity expression integer variable developed part program verifier built around powerful system manipulating simplifying integer expression
1967,nondeterministic algorithm,program solve combinatorial search problem may often simply written using multiple-valued function program although impossible execute directly conventional computer may converted mechanical way conventional backtracking program process illustrated algorithm find solution eight queen problem chessboard find simple cycle network
1964,bounded context syntactic analysis,certain phase structure grammar define language phrasehood structure substring sentence may determined consideration bounded context substring possible determine specified bound number contextual character considered whether given grammar bounded context grammar grammar free syntactic ambiguity syntactic analysis sentence bounded context language may performed standard process requires number operation proportional length sentence analyzed bounded context grammar form model language used computer programming many method syntactic analysis including analysis operator precedence special case bounded context analysis
1964,algorithm 245 treesort,n/a
1964,syntax programming languages-a survey,syntactic rule many programming language expressed formal grammar generally variant phrase-structure grammar syntactic analysis essential translation programming language done entirely mechanically language major problem remain rendering analyzer efficient use space time finding fully satisfactory formal grammar present future programming language
1963,syntactic analysis operator precedence,three increasingly restricted type formal grammar phrase structure grammar operator grammar precedence grammar precedence grammar form model mathematical algorithmic language may analyzed mechanically simple procedure based matrix representation precedence relation character pair
1962,algorithm 96 ancestor,n/a
1962,algorithm 97 shortest path,n/a
1962,algorithm 113 treesort,n/a
1962,nonexistence phrase structure grammar algol 60,algol  defined partly formal mechanism phrase structure grammar partly informally stated restriction shown formal mechanism type used sufficient define algol 
1962,ambiguity phrase structure language,n/a
1961,algorithm coding efficient arithmetic operation,existing formula translation scheme yield inefficient coding method described reduces number store fetch operation evaluates constant sub-expressions compilation recognizes many equivalent subexpressions
1961,note mathematical induction phrase structure grammar,two rule derivation exhibited shown yield valid metalinguistic theorem concerning phrase structure grammar 
1961,descriptive language symbol manipulation,n/a
1960,algorithm defining algol assignment statement,possible testing symbol pair  determine whether given symbol string consistent formation rule algol  example formula l l xi = j +  violates four distinct formation rule algol yet pair adjacent character may appear permissible formula algorithm described determine minor restriction whether particular symbol string permissible algol assignment statement believe technique may extended determine whether given symbol string permissible algol program program defined sequence permissible statement separated semicolon algorithm scan formula left right replacing certain character pair single character allowable transformation symbol string may reduced single character &sgr well-formed formula algol otherwise violates formation rule
1960,note amplification,n/a
