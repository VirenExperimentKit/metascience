2018,observation holographic algorithm,define notion diversity family finite function express limitation simple class holographic algorithm called elementary algorithm term limitation diversity show class elementary algorithm weak solve boolean circuit value problem boolean satisfiability permanent lower bound argument natural apparently novel combination counting algebraic dependence argument viable holographic framework go describe polynomial time holographic algorithm go beyond elementarity restriction two respect use exponential size field multiple oracle call form polynomial interpolation new algorithm use base three component compute parity following quantity degree three planar undirected graph number -colorings permutation color number connected vertex cover number induced forest feedback vertex set case parity also computed one slice problem particular coloring first color used certain number time connected vertex cover feedback set induced forest certain number node
2017,capacity neural network lifelong learning composable task,investigate neural circuit exacting setting  acquisition piece knowledge occur single interaction  result interaction rapidly evaluatable subcircuit  hundred thousand subcircuits acquired sequence without substantially degrading earlier one  recall form rapid evaluation composition subcircuits acquired arbitrary different earlier timeswe develop complexity theory term asymptotically matching upper lower bound capacity neural network executing setting following action call { association} action set subcircuit excitation chosen set neuron future cause excitation another chosen set b% model computation consider neuroidal model fully distributed model quantitative resource n neuron number number neuron neuron connected k inverse maximum synaptic strength accounted forum succession experience possibly lifetime  realization complex set subcircuits composability requirement constrains model ensure association realized subcircuit excitation triggering set neuron quantitatively similar triggered set b also unintended excitation rest system negligible requirement ensure chain association triggeredwe first analyze call basic mechanism us direct connection neuron triggering set target set b consider random network n neuron expected number connection show composable context capacity growth limited severe limitation network sparse
2013,complexity symmetric boolean parity holant problem,certain subclass np $$p #p characterized local constraint known exist problem within subclass polynomial time computable problem subclass np-complete $$p-complete #p-complete dichotomy  proved characterization constraint satisfaction problem directed undirected graph homomorphism problem often additional restriction give dichotomy result expressive framework holant problem example additionally allow expression matching problem pivotal role development complexity theory main result prove dichotomy theorem class $$p every set symmetric holant signature arity polynomial time computable $$p-complete result exploit special property class $$p characterizes four distinct tractable subclass within $$p leaf open corresponding question np $#$p $#_k$p $k $
2012,hippocampus stable memory allocator cortex,suggested mammalian hippocampus serf allocator neuron cortex memorizing new item construction shallow feedforward network biologically plausible parameter given posse characteristic needed allocator particular construction stabilizing input within range activity level spanning order magnitude output activity level differing little  also noise tolerant pair input pattern differ little generate output pattern differ little pair input differ much mapped output also differ sufficiently treated cortex distinct
2012,algorithmic view universe,year since alan turing following lead computer scientist advanced understanding computational phenomenon developing specialized original penetrating way rigorous thinking turn algorithmic way thinking applied productively study important phenomenon outside computation proper  development exquisite unintended consequence fact latent computation underlying phenomenon way science study
2011,bridging model multi-core computing,writing software one parallel system feasible though arduous task reusing substantial intellectual effort expended programming second system proved much challenging sequential computing algorithm textbook portable software resource enable software system written efficiently portable across changing hardware platform resource currently lacking area multi-core architecture programmer seeking high performance comparable opportunity build intellectual effort others order address problem propose bridging model aimed capturing basic resource parameter multi-core architecture suggest considerable intellectual effort needed designing efficient algorithm architecture may fruitfully expended designing portable algorithm bridging model portable algorithm would contain efficient design reasonable combination basic resource parameter input size would form basis implementation compilation particular machine multi-bsp model multi-level model explicit parameter processor number memory/cache size communication cost synchronization cost lowest level corresponds shared memory pram acknowledging relevance model whatever limitation memory processor number may efficacious emulate propose parameter-aware portable algorithm run efficiently relevant architecture number level combination parameter algorithm define parameter-free notion optimality show several fundamental problem including standard matrix multiplication fast fourier transform comparison sorting exist optimal portable algorithm sense combination machine parameter thus algorithmic generality elegance found many parameter setting
2011,complexity symmetric boolean parity holant problem - extended abstract,certain subclass np ⊕p #p characterized local constraint known exist problem polynomial time computable within subclass problem np- ⊕p- #p-complete dichotomy  proved characterization constraint satisfaction problem directed undirected graph homomorphism problem often additional restriction give dichotomy result expressive framework holant problem additionally allow expression matching problem pivotal role complexity theory main result prove dichotomy theorem class ⊕p every set boolean symmetric holant signature arity polynomial time computable ⊕p-complete result exploit special property class ⊕p characterizes four distinct tractable subclass within ⊕p leaf open corresponding question np #p # k p k ≠ 
2010,evolution drifting target,consider question stability evolutionary algorithm gradual change drift target concept define algorithm resistant drift inverse polynomial drift rate target function converges accuracy    polynomial resource stay within accuracy indefinitely except probability  one time show every evolution algorithm sense valiant  converted using correlational query technique feldman  drift resistant algorithm certain evolutionary algorithm boolean conjunction give bound rate drift resist develop new evolution algorithm resistant significant drift particular give algorithm evolving linear separator spherically symmetric distribution resistant drift rate another algorithm general product normal distribution resists smaller drift rate translation result also interpreted one robustness notion evolvability change definition second result direction show every evolution algorithm converted quasi-monotonic one evolve starting point without performance ever dipping significantly starting point permit somewhat unnatural feature arbitrary performance degradation removed several known robustness translation
2009,evolvability,living organism function accordance complex mechanism operate different way depending condition darwin theory evolution suggests mechanism evolved variation guided natural selection however existed theory would explain quantitatively mechanism evolve realistic population size within realistic time period complex article suggest theory treat darwinian evolution form computational learning example course learning influenced aggregate fitness hypothesis example otherwise specific example formulate notion evolvability distinguishes function class evolvable polynomially bounded resource show single stage evolution monotone boolean conjunction disjunction evolvable uniform distribution boolean parity function suggest mechanism underlies biological evolution overall “evolvable target pursuit” consists series evolutionary stage one inexorably pursuing evolvable target technical sense suggested target rendered evolvable serendipitous combination environment outcome previous evolutionary stage
2009,experience-induced neural circuit achieve high capacity,lifetime cortex performs vast number different cognitive action mostly dependent experience previously known capability reconciled even principle known resource constraint cortex low connectivity low average synaptic strength describe neural circuit associated algorithm respect brain basic resource constraint support execution high number cognitive action presented natural input circuit simultaneously support suite four basic kind task requiring circuit modification hierarchical memory formation pairwise association supervised memorization inductive learning threshold function capacity circuit established experiment sequence several thousand action simulated computer circuit created tested subsequent efficacy underlying theory apparently biologically plausible systems-level theory learning memory cortex demonstration performed argue general theory information processing brain considered viable without demonstration
2009,neural computation support long mixed sequence knowledge acquisition task,talk shall first give brief review quantitative approach understanding neural computation  target so-called random access task defined one instance task execution may need access arbitrary combination item memory task communication intensive therefore known severe constraint connectivity brain inform analysis
2008,holographic algorithm,complexity theory built fundamentally notion efficient reduction among computational problem classical reduction involve gadget map solution fragment one problem solution fragment another one-to-one possibly one-to-many fashion paper propose new kind reduction allows gadget many-to-many correspondence individual correspondence among solution fragment longer identified objective may viewed generating interference pattern among solution fragment conserve sum show holographic reduction provide method translating combinatorial problem finite system polynomial equation integer coefficient number solution combinatorial problem counted polynomial time one system solution complex number derive polynomial time algorithm way number problem exponential time algorithm known general question complexity class also formulated method applied #p-complete problem polynomial system obtained solvability would imply p$^{{{#p}}}$ = nc
2008,learning power evolution,n/a
2008,knowledge infusion pursuit robustness artificial intelligence,endowing computer ability apply commonsense knowledge human-level performance primary challenge computer science comparable importance past great challenge field science sequencing human genome right approach problem still debate shall discus attempt justify one approach { knowledge infusion} approach based view fundamental objective need achieved { robustness} following sense framework needed computer system represent piece knowledge world piece uncertainty interaction among piece even uncertainty system nevertheless reason piece uncertainty least controlled knowledge infusion rule learned world principled way subsequent reasoning using rule also principled subject error bounded term inverse effort invested learning process
2008,first experimental demonstration massive knowledge infusion,central goal artificial intelligence create system embody commonsense knowledge reliable enough form used reasoning novel situation knowledge infusion approach problem commonsense knowledge acquired learning paper report experiment corpus half million sentence natural language text test whether commonsense knowledge usefully acquired approach examine task predicting deleted word remainder sentence  target word baseline consider well task performed using learned rule based word within fixed distance target word part speech capture approach previously demonstrated highly successful variety natural language task go learn corpus rule embody commonsense knowledge additional knowledge used baseline case show chaining learned commonsense rule together lead measurable improvement prediction performance task compared baseline apparently first experimental demonstration commonsense knowledge learned natural input massive scale reliably enough chaining learned rule efficacious reasoning
2006,quantitative theory neural computation,show general quantitative theory neural computation used explain two recent experimental finding neuroscience first finding human medial temporal lobe exist neuron correspond identifiable concept particular actress even concept preselected experimenter neuron found paradoxical ease examining relatively neuron offer quantitative computational explanation phenomenon apparently none existed second locust olfactory system estimate four parameter neuron number synapse number synapse strength number neuron represent odor available show number related predicted general theory generally identify two useful regime neural computation distinct range quantitative parameter
2006,knowledge infusion,question machine endowed ability acquire robustly manipulate commonsense knowledge fundamental scientific problem formulate approach problem call knowledge infusion argue robust logic offer appropriate semantics endeavor support provably efficient algorithm basic set necessary learning reasoning task observe multiple concept learned simultaneously common data set data efficient manner also point preparation appropriate teaching material training system constructed according principle raise new challenge
2006,accidental algorithm,provide evidence proposition computational complexity individual problem whole complexity class hinge existence certain solvable polynomial system unlikely encountered systematic exploration consider minimalist version cook cnf problem namely monotone planar  cnf formula variable occurs twice show counting number solution modulo  oplusp-complete  counting modulo  polynomial time computable  also show similar dichotomy vertex cover problem derive completeness  use new holographic technique proving completeness  oplusp problem p example show way opluscnf parity problem cnf oplusp-complete derive efficient algorithm use computer algebra system find appropriate holographic gate order explore limit holographic technique define notion elementary matchgrid algorithm capture natural restricted use show np-complete general  cnf problem elementary matchgrid algorithm exist observe however remains open many natural #p-complete problem whether elementary matchgrid algorithm exist general cnf problem whether non-elementary matchgrid algorithm exist
2005,memorization association realistic neural model,central open question computational neuroscience identify data structure algorithm used mammalian cortex support successive act basic cognitive task memorization association letter address simultaneous challenge realizing two distinct task data structure respecting following four basic quantitative parameter cortex neuron number synapse number synapse strength switching time previous work succeeded reconciling opposing constraint low value synapse strength typically observed experimentally contributed particular obstacle article describe computational scheme support memory formation association feasible network model neuron respect widely observed value four quantitative parameter scheme allows disjoint shared representation algorithm simple one version memorization association require one step vicinal neighborly influence issue interference among different circuit established robustness noise stability hierarchical memorization process addressed calculus therefore implied analyzing capability particular neural system subsystem term basic numerical parameter
2005,completeness parity problem,talk shall review recent work holographic algorithm circuit work interpreted offering formulation question whether computation within complexity class np ⊕p bqp #p efficiently computed classically using linear algebra central part theory consideration gadget map simple combinatorial constraint gate assembly evaluated efficiently using linear algebra combinatorial constraint appear fruitful investigate simplest one correspond problem complete complexity class motivation shall note consider parity class ⊕p understanding complete problem particularly limited example among numerous search problem existence solution determined p counting problem known #p-complete #p-completeness proof generally translate ⊕p-completeness proof observe one case enumerate several natural problem complexity parity currently unresolved go consider two example np-complete problem ⊕p-completeness proved immediate hamiltonian circuit planar degree three graph satisfiability read-twice boolean formula
2005,holographic circuit,holographic circuit defined circuit information represented linear superposition holographic circuit suitably formulated emulated classical computer polynomial time question investigate characterizing complexity class computation expressed holographic circuit
2004,holographic algorithm extended abstract,introduce new notion efficient reduction among computational problem classical reduction involve gadget map local solution one problem local solution another one-to-one possibly many-to-one one-to-many fashion proposed reduction allow gadget many-to-many correspondence objective preserve sum local solution reduction provide method translating combinatorial problem family finite system polynomial equation integer coefficient number solution combinatorial problem counted polynomial time system family solution complex number derive polynomial time algorithm way ten problem exponential time algorithm known general question complexity class also formulated method applied #p-complete problem obtain family polynomial system solvability one member would imply p/sup #p/ = nc
2003,three problem computer science,n/a
2002,quantum circuit simulated classically polynomial time,model quantum computation based unitary matrix operation introduced feynman deutsch asked whether power model exceeds classical turing machine show significant class quantum computation simulated classically polynomial time particular show two-bit operation characterized    matrix sixteen entry obey set five polynomial relation composed according certain rule yield class circuit simulated classically polynomial time contrast known universality two-bit operation demonstrates efficient quantum computation restricted class reconcilable polynomial time turing hypothesis therefore possible technique introduced bring quantum computational model within realm algebraic complexity theory manner consistent one view quantum physic wave function simulated deterministically randomization arises course making measurement  generalize quantum model require matrix unitary different direction technique also yield deterministic polynomial time algorithm decision parity problem certain class read-twice boolean formula  based use gate defined term graph matching property
2002,expressiveness matchgates,matchgates used simulate classically polynomial time assembly quantum gate paper shown every matchgate -input -output function obey certain set five polynomial identity also shown matchgate realize nontrivial control gate number input hand proved classical boolean formula expressed matchcircuits polynomial size
2001,quantum computer simulated classically polynomial time,model quantum computation based unitary matrix operation introduced feynman deutsch asked whether power model exceeds classical turing machine show significant class quantum computation simulated classically polynomial time particular show two-bit operation characterized    matrix sixteen entry obey set five polynomial relation composed according certain rule yield class circuit simulated classically polynomial time contrast known universality two-bit operation demonstrates efficient quantum computation restricted class reconcilable polynomial time turing hypothesis word possible quantum phenomenon used scalable fashion make computer superpolynomial speedup compared turing machine problem technique introduced bring quantum computational model within realm algebraic complexity theory manner consistent one view quantum physic wave function simulated deterministically randomization arises course making measurement  generalize quantum model require matrix unitary different direction technique also yield deterministic polynomial time algorithm decision parity problem certain class read-twice boolean formula  based use gate defined term graph matching property
2000,robust logic,suppose wish learn example counter-examples criterion recognizing whether assembly wooden block constitutes arch suppose also preprogrammed recognizers various relationship eg on-top-of etc believe possibly complex expression term base relationship suffice approximate desired notion arch formulate relational learning problem exploit benefit demonstrably available propositional learning attribute-efficient learning linear separator error-resilient learningwe believe learning general setting allows multiple object relation way fundamental key resolving following dilemma arises design intelligent system mathematical logic attractive language description clear semantics sound proof procedure however basis large programmed system lead brittleness practice consistent usage various predicate name throughout system cannot guaranteed except application area mathematics viability axiomatic method demonstrated independentlyin paper develop following approach circumventing dilemma suggest brittleness overcome using new kind logic statement learnable allowing system learn rule empirically environment relative particular program may recognizing base predicate enable system acquire set statement approximately consistent world without need globally knowledgeable consistent programmerwe illustrate approach describing simple logic sound efficient proof procedure reasoning instance rendered robust rule learnable complexity accuracy learning deduction provably polynomial bounded
2000,neuroidal architecture cognitive computation,architecture described designing system acquire nipulate large amount unsystematized so-called commonsense knowledge aim exploit full aspect computational learning known offer powerful solution acquisition maintenance robust knowledge base architecture make explicit requirement basic computational task performed designed make computationally tractable even large database main claim  basic learning deduction task provably tractable  tractable learning offer viable approach range issue previously identified problematic artificial intelligence system programmed among issue learning offer resolve robustness inconsistency robustness incomplete information resolving among alternative attribute-efficient learning algorithm allow learning example large dimensional system fundamental approach underpinning overall architecture new principled approach manipulating relation learning system approach independently quantified argument allows propositional learning algorithm applied systematically learning relational concept polynomial time modular fashion
1999,projection learning,method combining learning algorithm described preserve attribute-efficiency yield learning algorithm require number example polynomial number relevant variable logarithmic number irrelevant one algorithm simple implement realizable network number node linear total number variable include generalization littlestones winnow algorithm therefore good candidate experimentation domain large number attribute nonlinear hypothesis sought
1999,relational learning nlp using linear threshold element,describe coherent view learning reasoning relational representation context natural language processing particular discus neuroidal architecture inductive logic programming snow system explaining relationship among thereby offer explanation theoretical basis snow system suggest extension system along line suggested theory may provide new level scalability functionality
1996,managing complexity neurodial circuit,n/a
1995,rationality,n/a
1995,cognitive computation extended abstract,cognitive computation discussed discipline link together neurobiology cognitive psychology artificial intelligence
1995,bulk synchronous parallel computing-a paradigm transportable software,necessary condition establishment substantial basis parallel software industry would appear availability technology generating transportable software ie architecture independent software delivers scalable performance wide variety application wide range multiprocessor computer paper describes h-bsp-a general purpose parallel computing environment developing transportable algorithm h-bsp based bulk synchronous parallel model  computation involves number supersteps several parallel computational thread synchronize end superstep bsp model deal explicitly notion communication among computational thread introduces parameter g l quantify ratio communication throughput computation throughput synchronization period respectively two parameter together number processor problem size used quantify performance therefore transportability given class algorithm across machine different value parameter paper describes role unbundled compiler technology facilitating development parallel computer environment< >
1994,cryptographic limitation learning boolean formula finite automaton,paper prove intractability learning several class boolean function distribution-free model  learning example  representation independent hold regardless syntactic form learner chooses represent hypothesis method reduce problem cracking number well-known public-key cryptosystems learning problem prove polynomial-time learning algorithm boolean formula deterministic finite automaton constant-depth threshold circuit would dramatic consequence cryptography number theory particular algorithm could used break rsa cryptosystem factor blum integer  detect quadratic residue  hold even learning algorithm required obtain slight advantage prediction random guessing technique used demonstrate interesting duality learning cryptography also apply  obtain strong intractability  approximating generalization graph coloring
1994,learning boolean formula,efficient distribution-free learning boolean formula positive negative example considered shown class formula efficiently learnable positive example negative example certain closure property new substitution technique used show distribution-free case learning dnf  harder learning monotone dnf prove monomials cannot efficiently learned negative example alone even negative example uniformly distributed also shown example drawn uniform distribution class dnf variable occurs efficiently weakly learnable  show equivalence notion weak learning notion group learning group example polynomial size either positive negative must correctly classified high probability
1994,direct bulk-synchronous parallel algorithm,describe methodology constructing parallel algorithm transportable among parallel computer different number processor different bandwidth interprocessor communication different periodicity global synchronization bulk-synchronous parallel  model abstract characteristic parallel machine three numerical parameter p g l corresponding processor bandwidth periodicity respectively model differentiates memory local processor sake universality differentiate network proximity advantage model supporting shared memory pram style programming treated elsewhere emphasize viability alternative direct style programming sake efficiency programmer retains control memory allocation show optimality within multiplicative factor close one achieved problem gauss-jordan elimination sorting transportable algorithm applied wide range value parameter p g l algorithm fairly simple description behavior term parameter somewhat complicated main reward quantifying complication whether derived analysis simulation allows software written transported efficiently among parallel machine fit model way contrast direct algorithm also give simulation  pram bsp identify level slack corresponding efficiency approached shared memory simulation provided bandwidth parameter g good enough
1994,computational model cognition abstract,model computation designed bridge gap biological system neural level computation level cognitive functioning neuroid model neuron consists essentially classical threshold element augmented state availability state make model flexibly programmable traditional neural network allows variety useful timing mechanism exploited flexibly computation paper present two viewpoint neuroidal system studied
1993,bsp computer,author give summary argument favoring adoption bulk-synchronous parallel  model standard parallel computing first argues parallel computing become major industry agreement reached standard model level intermediate language architecture level go list factor make bsp model attractive standard intermediate bridging level finally provides reason favoring shared memory pram model alternative candidate role< >
1992,combining mechanism parallel computer,multiprocessor computer communication among component may based either simple router delivers message point-to-point like mail service elaborate combining network return greater investment hardware combine message address prior delivery paper describes mechanism recirculating message simple router added functionality combining network arbitrary access pattern achieved reasonable efficiency method brings together message destination address one stage set component determined hash function decrease number stage
1990,bridging model parallel computation,success von neumann model sequential computation attributable fact efficient bridge software hardware high-level language efficiently compiled model yet effeciently implemented hardware author argues analogous bridge software hardware required parallel computation become widely used article introduces bulk-synchronous parallel  model candidate role give  quantifying efficiency implementing high-level language feature algorithm well implemented hardware
1989,general lower bound number example needed learning,prove lower bound ωln+vcdim/ɛ number random example required distribution-free learning concept class c vcdim vapnik-chervonenkis dimension ɛ δ accuracy confidence parameter improves previous best lower bound ωln+vcdim come close known general upper bound oln+/ɛln consistent algorithm show many interesting concept class including kcnf kdnf bound actually tight within constant factor
1988,computational limitation learning example,computational complexity learning boolean concept example investigated shown various class concept representation cannot learned feasibly distribution-free sense unless r = np class include  disjunction two monomials  boolean threshold function  boolean formula variable occurs relationship learning heuristic finding approximate solution np-hard optimization problem given
1988,functionality neural net,investigate functional capability sparse network computing element accumulating knowledge successive learning experience  experience consider various combination episodic concept learning supervised unsupervised mode conjunction disjunction exhibit algorithm learning well defined sens concept episode expressible term concept episode already known thus learned hierarchically without disturbing previous knowledge minimal assumption made computing element assumed classical threshold element state also adhere severe resource constraint new concept episode requires storage linear relevant parameter algorithm take step hypothesise context functionality limited communication bottleneck network computing capability element hence approach may prove useful understanding biological system even absence accurate neurophysiological model
1987,logarithmic time sort linear size network,randomized algorithm sort n node network constant valence time given particularly algorithm sort n item n-node cube-connected cycle graph constant k large enough &agr terminates within k&agr log n time probability least  - n-&agr
1987,recent development theory learning abstract,n/a
1987,learnability boolean formula,author study computational feasibility learning boolean expression example goal prove  develop general technique shed light boundary class expression learnable polynomial time apparently employ distribution-free model learning  fall three category closure property learnable class negative  distribution-specific positive 
1986,negation powerless boolean slice function,shown slice function n variable monotone circuit complexity exceeds circuit complexity universal basis multiplicative constant factor additive term order $o^ $
1986,random generation combinatorial structure uniform distribution,class problem involving random generation combinatorial structure uniform distribution considered uniform generation problem computational difficulty intermediate classical existence counting problem shown exactly uniform generation ‘efficiently verifiable’ combinatorial structure reducible approximate counting  natural combinatorial problem presented exhibit complexity gap existence generation generation counting version shown self-reducible problem almost uniform generation randomized approximate counting inter-reducible hence similar complexity
1986,np easy detecting unique solution,every known np-complete problem number solution instance varies large range zero exponentially many therefore natural ask inherent intractability np-complete problem caused wide variation give negative answer question using notion randomized polynomial time reducibility show problem distinguishing instance sat zero one solution finding solution instance sat unique solution hard sat randomized reduction several corollary difficulty specific problem follow example computing parity number solution sat formula shown np-hard deciding sat formula unique solution shown dp-hard randomized reduction central study cryptography question whether exist np-problems whose instance solution unique hard find result interpreted strengthening belief problem exist
1985,complexity theory based boolean algebra,projection boolean function function obtained substituting variable variable negation variable constant reducibilities among computational problem relation projection considered shown much everyday relevance turing-machine-based complexity theory replicated easily naturally elementary framework finer distinction computational relationship among natural problem made previous formulation negative  proved
1985,learning disjunction conjunction,question whether concept expressible disjunction conjunction learned example polynomial time investigated positive  shown significant subclass allow propositional predicate also relation algorithm extended provably tolerant certain quantifiable error rate example data shown certain restriction subclass learning algorithm well suited implementation neural network threshold element possible importance disjunction conjunction knowledge representation stem observation one hand human appear like using circumstantial evidence significantly larger class may learnable polynomial time np-completeness result corroborating later also presented
1984,theory learnable,human appear able learn new concept without needing programmed explicitly conventional sense paper regard learning phenomenon knowledge acquisition absence explicit programming give precise methodology studying phenomenon computational viewpoint consists choosing appropriate information gathering mechanism learning protocol exploring class concept learnt using reasonable  number step find inherent algorithmic complexity appears set serious limit range concept learnt methodology  suggest concrete principle designing realistic learning system
1984,short monotone formula majority function,shown monotone formula-size complexity monotone symmetric function n variable bounded function order
1983,fast parallel computation polynomial using processor,shown multivariate polynomial degree computed sequentially c step computed parallel $o$ step using $^{o} $ processor
1983,optimality two-phase strategy routing interconnection network,shown d-way shuffle graph oblivious algorithm realizing permutation logarithmic time send packet along route twice long diameter graph confirms optimality strategy sends packet random node first phase correct destination second shuffle-exchange graph corresponding route length shown strictly longer -way shuffle
1983,size bound superconcentrators,prove n-superconcentrator indegree two least n - node lower bound n - follow number addition required compute discrete fourier transform prime order cyclic convolution using small example illustrate small superconcentrators suggest fast algorithm instance problemsfor superconcentrators degree restriction prove lower bound n - edge also give recursive construction n log n edge improves best bound previously known value n several thousand
1983,exponential lower bound restricted monotone circuit,paper consider monotone boolean circuit three alternation order “or” “and” “or” whenever number alternation limited fixed constant formula circuit size measure polynomially related shall therefore refer measure interchangeably σπς-formula size σπς-circuit size shall prove circuit formula detecting existence clique n-node graph least ω gate ε >  independent n
1982,scheme fast parallel communication,consider $n = ^n $ node connected wire make n-dimensional binary cube suppose initially node contain one packet addressed distinct node cube show distributed randomized algorithm route every packet destination without two packet passing wire one time finish within time $o$ overwhelming probability routing request packet carry $o$ bit bookkeeping information communication among node take placethe algorithm offer scheme known realizing arbitrary permutation sparse n node network $o$ time evident application design general purpose parallel computer
1981,fast parallel algorithm routing permutation network,algorithm given routing permutation networks-that computing switch setting implement given permutation algorithm take serial time     word parallel time     word time bound may reduced logarithmic factor switch size integral power two
1981,universality consideration vlsi circuit,problem embedding interconnection pattern circuit two-dimensional surface minimal area discussed since even natural pattern graph containing connection may require ω area order achieve compact embeddings restricted class graph considered example arbitrary tree  embedded linear area without edge crossing planar graph embedded efficiently crossover allowed embedding
1981,fast parallel computation polynomial using process,shown multivariate polynomial computed sequentially c step degree computed parallel   step using  processor
1981,universal scheme parallel communication,paper isolate combinatorial problem believe lie heart question provide encouragingly positive solution show exists n-processor realistic computer simulate arbitrary idealistic n-processor parallel computation factor loss runtime efficiency main innovation time randomized routing algorithm previous approach based sorting permutation network implied loss factor order least 
1980,computing multivariate polynomial parallel,n/a
1980,negation exponentially powerful,n/a
1979,fast probabilistic algorithm hamiltonian circuit matchings,describe analyse three simple efficient algorithm good probabilistic behaviour two algorithm run time almost certainly find directed  hamiltonian circuit random graph least cn log n edge algorithm run time almost certainly find perfect matching random graph least cn log n edge auxiliary proposition regarding conversion input distribution “de-randomization” randomized algorithm proved new model random access computer  introduced specifically treat run time low-level complexity
1979,complexity enumeration reliability problem,class $# p$-complete problem class computationally eqivalent counting problem  least difficult $np$-complete problem show large number natural counting problem previous indication intractability belong class technique used polynomial time reduction oracle via translation algebraic arithmetic nature
1979,complexity computing permanent,shown permanent function -matrices complete problem class counting problem associated nondeterministic polynomial time computation related counting problem also considered reduction used characterized nontrivial use arithmetic
1979,completeness class algebra,theory recursive function computational complexity demonstrated repeatedly natural problem tend cluster together “completeness classes” family problem  computationally interreducible  hardest member computationally defined class aim paper demonstrate algebraic combinatorial problem phenomenon exists form purely algebraic respect   computational consequence np-completeness particular manifestation something fundamental core paper self-contained consisting essentially two notion “p-definability” five algebraic relation proved theorem remainder aim elucidate computational consequence basic  hence auxiliary proposition discussion convenience assume familiarity algebraic boolean complexity theory
1979,negative result counting,n/a
1978,complexity combinatorial computation introduction,search mechanizable procedure algorithm solving problem integral part mathematics beginning concern efficiency algorithm discovered rarely mentioned explicitly however last decade nevertheless must presume concern often present since algorithm gaussian elimination solving linear equation newton’s iteration algebraic equation euclid’s algorithm greatest common divisor appear efficient even century investigation
1977,time versus space,shown every deterministic multitape turing machine time complexity simulated deterministic turing machine tape complexity t/logt consequently tape constructable class language recognizable multitape turing machine time complexity strictly contained class language recognized turing machine tape complexity particular context-sensitive language cannot recognized linear time deterministic multitape turing machine
1977,graph-theoretic argument low-level complexity,surveyed one approach understanding complexity issue certain easily computable natural function shifting graph seen account accurately unified way superlinear complexity several problem various restricted model computation attack unrestricted model  first attempt superconcentrators fails provide lower bound although give counter-examples alternative approach notion rigidity however offer first time reduction relevant computational question noncomputional property reduction consists conjunction corollary  theorem  show set linear form real stated algebraic combinatorial reason account fact cannot computed linear time depth simultaneously outlined problem area preliminary  raise feel progress humanly feasible would interested alternative approach alsoproblem  propose reduction relevant complexity issue noncomputational property promising tractable one
1976,note succinctness description deterministic language,shown relative succinctness may achieved describing deterministic context-free language general unambiguous grammar rather deterministic pushdown automaton bounded recursive function
1976,relative complexity checking evaluating,n/a
1976,shifting graph application,graph certain precise sense rich set vertex-disjoint path studied bound obtained minimum number edge graph used deduce nonlinear lower bound computational complexity shifting merging matching problem
1976,graph-theoretic property computational complexity,extent set related graph-theoretic property used accont superlinear complexity computational problem explored previously widely held positive conjecture refuted also shown certain limited lower bound proved mean property
1976,circuit size nonlinear depth,two fundamental complexity measure boolean function f circuit depth circuit size c shown thatfor f
1976,equivalence problem d0l system decidability binary alphabet,n/a
1976,universal circuit preliminary report,show combinational  boolean circuit complexity  made compute boolean function complexity setting specially designated set control input appropriate fixed value investigate construction “universal circuits” exhibit direction refinement asymptotic multiplicative constant factor complexity bound found pursuit useful detailed guidance provided available lower bound argument final section discus problem computational complexity related directly graph-theoretic idea behind construction motivation start illustrating application universal circuit
1975,regularity related problem deterministic pushdown automaton,shown decide whether language accepted arbitrary pushdown deterministic pushdown automaton whether accepted one-counter finite-turn pushdown machine must least difficult decide whether regular regularity problem analyzed detail stearns decision procedure improved one level exponentiation upper bound close known lower bound obtained succintness pushdown automaton various restriction express equivalent finite-state machine
1975,general context-free recognition le cubic time,algorithm general context-free recognition given requires le n time asymptotically input string length n
1975,deterministic one-counter automaton,equivalence problem deterministic one-counter automaton shown bedecidable corollary schema theory equivalence decidable ianov schema auxiliary counter
1975,parallelism comparison problem,worst-case time complexity algorithm multiprocessor computer binary comparison basic operation investigated shown problem finding maximum sorting merging pair sorted list n size input set le k number processor speedup least $o$ achieved respect comparison operation algorithm finding maximum shown optimal value k n
1975,time versus space related problem,shown every deterministic multitape turing machine time complexity simulated deterministic turing machine tape complexity t/logt consequently tape constructable class language recognizable mul
1975,non-linear lower bound computational complexity,purpose paper explore possibility purely graph-theoretic reason may account superlinear complexity wide class computational problem  therefore two kind reduction graph theoretic conjecture one hand graph theoretic  show graph algorithm one number arithmetic problem  must property closely related concentration network
1974,equivalence problem deterministic finite-turn pushdown automaton,proved effective procedure deciding whether two deterministic finite-turn pushdown automaton equivalent
1974,decidability equivalence deterministic finite-turn pushdown automaton,deterministic pushdown automaton  described finite-turn bound number time direction stack movement change set derivation starting configuration purpose paper show exists procedure deciding whether two finite-turn machine recognize language virtue direct correspondence restricted class one-turn dpda deterministic two-tape acceptor  proof also provides solution equivalence problem latter alternative bird  since idea introduce related exclusively finite-turn property even pushdown machine hoped method adapted constructing equivalence test class deterministic automaton main technique regarded generalization several direction one introduced rosenkrantz stearns  consider class pushdown automaton natural valuation placed stack segment deduce input word two equivalent machine class must closely related stack movement show circumstance two machine single pushdown automaton constructed simulate used decide equivalence shall show even class stack valuation known two equivalent machine totally dissimilar stack movement pushdown automaton nondeterministic found perform required simulation
