2014,cryptography miracle secure auction matching problem verification,solution persistent problem preventing collusion vickrey auction
2012,strictly-black-box zero-knowledge efficient validation financial transaction,zero knowledge proof  one striking innovation theoretical computer science practice prevalent zkp method time complicated useful real-life application paper present practically efficient method zkps wide range application specifically motivated need provide upon-demand efficient validation various financial transaction  developed novel secure highly efficient method validating correctness output transaction keeping input value secret method applies input value publicly committed employing generic commitment function  call strictly black box  commitment hence commitment typically much faster public-key one cryptographic/ security tool give poly-time player throughout general problem solve work let slc publicly known staight line computation n input value taken finite field k output value input publicly committed sbb manner evaluator performs slc input announces output value upon demand evaluator prover acting behalf present verifier proof correctness announced output value done manner  input value well intermediate value slc remain information theoretically secret  probability verifier accept false claim correctness output value made exponentially small  prover supply required number proof correctness multiple verifier  method highly efficient application financial process straight forward end  first use novel technique representation value finite field call “split representation” two coordinate split representation generically committed  next slc augmented prover ”translation” presented verifier sequence generically committed split representation value  using translation prover verifier conduct secrecy preserving proof correctness announced slc output value  order exponentially reduce probability cheating prover also enable multiple proof novel highly efficient method preparation number committed-to split representation n input value employed extreme efficiency zk method decisive importance large volume application secrecy preserving validation announced  vickrey auction demonstrative example
2012,never early begin computer science high-school student,computer science technology innovated past sixty year revolutionized science economy societal interaction inherently c constitutes new science combining mathematics logic information theory electronics par physic chemistry life science appropriate educate student fundamental science curriculum emphasize scientific content rather provide mere training programming language
2009,cryptographic combinatorial clock-proxy auction,present cryptographic protocol conducting efficient provably correct secrecy-preserving combinatorial clock-proxy auction “clock phase” function trusted auction despite price discovery bidder submit encrypted bid prove meet activity rule compute total demand thus verify price increase without revealing information individual demand sealed-bid “proxy phase” bid revealed auctioneer via time-lapse cryptography branch-and-bound algorithm used solve winner-determination problem homomorphic encryption used prove correctness solution establishes correctness solution interested party still np-hard optimization problem use homomorphic encryption imposes additional computational time winner-determination linear size branch-and-bound search tree thus roughly linear original  computational time result solution avoids usual case exponential complexity previous cryptographically-secure combinatorial auction
2008,practical secrecy-preserving verifiably correct trustworthy auction,present practical protocol based homomorphic cryptography conducting provably fair sealed-bid auction system preserve secrecy bid even announcement auction  also providing public verifiability correctness trustworthiness outcome party including auctioneer receives information bid auction close bidder able change repudiate bid system illustrated application first-price uniform-price second-price auction including multi-item auction empirical  based analysis prototype demonstrate practicality protocol real-world application
2007,highly efficient secrecy-preserving proof correctness computation application,present highly efficient method proving correctness computation preserving secrecy input value done evaluator-prover model also realized secure processor describe application secure auction
2007,disc 20th anniversary invited talk provably unbreakable hyper-encryption using distributed system,encryption fundamental building block computer communication technology existing encryption method depend security unproven assumption propose new model limited access model enabling simple practical provably unbreakable encryption scheme voluntary distributed network thousand computer maintain update random page act page server node sender receiver share random key k use k randomly select psns download random page employed group say  page extract one time pad common r reasonable assumption adversary’s inability monitor psns easy way r evade monitoring downloading page hyper encryption clearly unbreakable system completely implemented
2005,provably unbreakable hyper-encryption limited access model,encryption fundamental building block computer communication technology existing encryption method depend security unproven assumption propose new model limited access model enabling simple practical provably unbreakable encryption scheme voluntary network ten thousand computer maintain update random page act page server node sender receiver share random key k use k randomly select psns download random page employed group say  page extract one time pad common r reasonable assumption adversary inability monitor psns easy way r evade monitoring downloading page hyper encryption clearly unbreakable system completely implemented
2004,identity-based zero knowledge,introduce define notion identity-based zero-knowledge concentrating non-interactive setting setting notion allows prover widely disseminate proof statement protecting prover plagiarism following sense although proof transferable  also bound identity prover way recognizable verifier furthermore adversary unable change identity  unless could proved statement ownwhile view primary contribution work formal definition notion also explore relation notion non-malleable  zero-knowledge one hand show two notion incomparable proof system non-malleable identity-based vice versa hand show proof system either type essentially implies proof system type
2003,hyper encryption everlasting secret,fundamental problem cryptography secure communication insecure channel sender alice wish communicate receiver bob presence powerful adversaryada primary goal encryption protect privacy conversation alice bob againstada modern cryptographic research identified additional essentially important criterion secure encryption scheme namely encryption non-malleable resistant various chosen plaintext ciphertext attack desired allow receiver authenticate received message sender issue settled case adversaryadais computationally unbounded
2003,zero-knowledge set,show polynomial-time prover commit arbitrary finite set string later string x reveal proof whether x /spl isin/ x /spl notin/ without revealing knowledge beyond verity membership assertion method non interactive given public random string prover commits set simply posting short easily computable message time want prove whether given element set simply post another short easily computable proof whose correctness verified one public random string scheme efficient reasonable prior way achieve desideratum existed new primitive immediately extends providing zero-knowledge database
2002,online scheduling parallel program heterogeneous system application cilk,study problem executing parallel program particular cilk program collection processor different speed consider model processor maintains estimate speed communication processor cost scheduling must online problem considered previously field asynchronous parallel computing scheduling theory model bridge assumption field provide new accurate analysis old scheduling algorithm called maximum utilization scheduler  based analysis generalize scheduling policy define high utilization scheduler  next focus cilk platform introduce new algorithm scheduling cilk multithreaded parallel program heterogeneous processor scheduler inspired high utilization scheduler modified fit cilk context crucial aspect algorithm keep original spirit cilk scheduler fact new algorithm run homogeneous processor exactly mimic dynamic original cilk scheduler
2002,everlasting security bounded storage model,address problem the-security cryptographic protocol face future advance computing technology algorithmic research problem stem fact may deemed computation given point time may deemed infeasible course year decade made possible improved hardware and/or breakthrough code-breaking algorithm case security historical  nonetheless highly confidential data may jeopardy present scheme efficient secure two-party communication provable everlasting security security guaranteed face future technological advance given current state art furthermore security message also guaranteed even secret encryption/decryption key revealed future scheme based bounded storage model provides information-theoretic security model bounded storage model postulate adversary computationally unbounded bounded amount storage  available store output computation bound storage arbitrarily large  long fixed given storage bound protocol guarantee even computationally powerful adversary gain information message  bound storage space need hold time message transmission thereafter additional storage space computational power help adversary deciphering message present two protocol first protocol elaborates autoregressive  protocol aumann rabin  employ short secret key whose size independent length message us many public random bit second protocol us optimal 
2002,hyper-encryption everlasting security,present substantial extension work   previous work encryption bounded storage model introduced maurer  major new result shared secret key employed sender alice andthe receiver bob re-used send exponential number message strong adaptive attack essential step enhances usability encryption method also allows strong authentication andnon-malleability described belowwe give encryption scheme provably secure adaptive attack computationally unbounded adversary bounded storage model model sender alice receiver bob access public random string α share secret key alice bob observe α fly andb use extract bit create one-time pad x used encrypt c = x⊕m size secret key ∣s∣ = klog ∣α∣ k security parameter adversary ad compute andstore function  = η subject bound storage ∣η∣ ≤γ ·∣α∣ γ <  capture c even ad later get key computationally unbounded encryption provably secure assume key repeatedly used successive string α α  produce encryption c  c   messagesm   ad computes η =  obtains c  get see first message  using computes andstores η =  stored ηl andcaptured c l get key  main result encryption c l provably secure adaptive attack l number time secret key re-used exponentially large security parameter k base non-interactive protocol authentication non-malleability shared secret key used protocol securely re-usedan exponential number time adaptive attack method proof stronger one   yield ergodic  independent interest discus introduction feasibility bounded storage model outline solution furthermore existence encryption scheme provable strong security property presented may prompt implementation bounded storage model
2001,linear-consistency testing,extend notion linearity testing task checking linear consistency multiple function informally function “linear” graph form straight line plane two function “consistent” line slope propose variant test blum et al  – check linear consistency three function f f f mapping finite abelian group g abelian group h pick x y∈g uniformly independently random check f+f=f analyze test two case  g h arbitrary abelian group  g=n h= question bearing close relationship linear-consistency testing seem implicitly considered recent work construction pcp particular work j håstad   abstracted explicitly first time application  give yet another new tight characterization np namely ∀ε> np=mip−ε /   every language np -prover -round proof system verifier toss coin asks three provers one question provers respond one bit verifier accepts instance language probability −ε reject noninstances probability least result interest study probabilistically checkable proof
2000,scheduling cilk multithreaded parallel program processor different speed,study problem executing parallel program particular cilk program collection processor different speed consider model processor maintains estimate speed communication processor cost scheduling must online problem considered previously field asynchronous parallel computing scheduling theory model bridge assumption field provide new accurate analysis old scheduling algorithm called maximum utilization scheduler based analysis generalize scheduling policy define high utilization scheduler next focus cilck platform introduce new algorithm scheduling cilk multithreaded parallel program heterogeneous processor scheduler inspired high utilization scheduler modified fit cilk context crucial aspect algorithm keep original spirit cilk scheduler fact new algorithm run homogeneous processor exactly mimic dynamic original cilk scheduler
1999,information theoretically secure communication limited storage space model,provide simple secret-key two-party secure communication scheme provably information-theoretically secure limited-storage-space model limited-storage-space model postulate eavesdropper execute arbitrarily complex computation limited total amount storage space  available bound storage space arbitrarily large  long fixed given bound protocol guarantee probability eavesdropper gaining information message exponentially small proof main  utilizes novel combination linear algebra kolmogorov complexity consideration
1999,verifiable random function,efficiently combine unpredictability verifiability extending goldreich-goldwasser-micali  construction pseudorandom function f/sub s/ secret seed knowledge enables one evaluate f/sub s/ point x also provide np-proof value f/sub s/ indeed correct without compromising unpredictability f/sub s/ point proof provided
1999,linear consistency testing,extend notion linearity testing task checking linear-consistency multiple function informally function “linear” graph form straight line plane two function “consistent” line slope propose variant test blum luby rubinfeld  check linear-consistency three function f f f  mapping finite abelian group g abelian group h pick xy ∈ g uniformly independently random check  f  + f  = f  analyze test two case  g h arbitrary abelian group g=fngandh=fhquestions bearing close relationship linear-consistency testing seem implicitly considered recent work construction pcp  abstracted explicitly first time give application problem   new tight characterization np namely ∀ ε > np=mip−ϵnie every language np -prover -round proof system verifier toss coin asks three provers one question provers respond one bit verifier accepts instance language probability – ε reject non-instances probability least result interest study probabilistically checkable proof
1998,lower bound randomized mutual exclusion,establish first time lower bound randomized mutual exclusion algorithm  main result constant-size shared variable cannot guarantee strong fairness even randomization allowed fact prove lower bound $ $ bit size shared variable also tightwe investigate weaker fairness condition derive tight  bound well surprisingly turn slightly weakening fairness condition  exponential reduction size required shared variable lower bound rely analysis markov chain may interest may application elsewhere
1998,authentication enhanced security error correcting code extended abstract,electronic communication access system issue authentication sender message well message paramount importance recently goldwasser raised additional issue deniable authentication sender authenticates message receiver  satisfaction later deny authorship even inquisitor inq listened exchange r gain access secret information used r present two practical scheme deniable authentication message arbitrary length n scheme receiver r assured probability greater  − −k  k chosen security parameter originated sender deniability absolute information theoretic sense first scheme requires kn xor operation bit one public key encoding decoding short message second scheme requires number xor operation k multiplication mod n n fixed product two large prime key new feature method use shannon-style error correction code traditional authentication long message start hashing standard word-size expand error correction first deniable authentication method provably valid encryption scheme minimal security property ie method generic second deniable authentication method provably valid usual assumption factorization intractable
1998,simplified v fast-track multiparty computation application threshold cryptography,goal paper introduce simple verifiable secret sharing scheme improve efficiency known secure multiparty protocol employing technique improve efficiency application use protocol first present simple verifiable secret sharing protocol based fast cryptographic primitive avoids altogether need expensive zero-knowledge proof
1997,correctness program protocol randomization extended abstract,n/a
1997,dna2dna computation potential killer app,n/a
1997,hashing string cryptography protection privacy,summary form given issue privacy reliability personal data paramount importance l list people carrying harmful defective gene want question whether person l reliably answered without compromising data concerning anybody else reliability mean list formed nobody play answer thus answer checkable agent posing question present efficient protocol task solution strong privacy protection property
1996,computationally hard algebraic problem extended abstract,paper present simple geometric-like series element finite field f/sub q/ show computing sum np-hard problem reduced problem counting mod p number zero linear recurrence sequence element finite f/sub p/ p small prime hence latter problem also np-hard lecture shall also survey computationally hard algebraic problem
1995,lottery unique winner,establish first time lower bound randomized mutual exclusion algorithm  main result constant-size shared variable cannot guarantee strong fairness even randomization allowed fact prove lower bound log log n bit size shared variable also tight investigate weaker fairness condition derive tight  bound well surprisingly turn slightly weakening fairness condition  exponential reduction size required shared variable lower bound rely analysis markov chain may interest may application elsewhere 
1995,parallel processing network workstation fault-tolerant high performance approach,one sought software innovation decade construction system using off-the-shelf-workstations actually deliver even surpass power reliability supercomputer using completely novel technique eager scheduling evasive memory layout dispersed data management possible build execution environment parallel program workstation network technique originally developed theoretical framework abstract machine model shared memory asynchronous multiprocessor network workstation platform present inherently asynchronous environment execution parallel program give rise substantial problem correctness computation proper automatic load balancing work amongst processor slow processor hold total computation limiting case asynchrony processor becomes infinitely slow ie fails methodology cope problem well memory failure interesting feature system neither fault-tolerant system extended parallel processing parallel processing system extended fault tolerance novel mechanism ensure property
1994,clock construction fully asynchronous parallel system pram simulation,consider problem simulating synchronous computation asynchronous shared memory system system consider allow arbitrary asynchronous behavior processor addition make limited  assumption atomicity read write operation shared memory provide detailed definition asynchronous system atomicity propertiesthe first construction paper novel clock asynchronous system clock basic tool synchronization asynchronous environment constructiion give extremely robust implemented system atomicity assumption presence adaptive adversary scheduler correct behavior clock obtained overwhelming probability show harness clock drive efficient pram simulation asynchronous system simulation requires work space overhead improves log n factor efficiency previously obtained simulation  relaxing assumption underlying asynchronous system
1993,highly efficient asynchronous execution large-grained parallel program,n-thread parallel program p large-grained every parallel step computation thread complex procedure requiring numerous processor instruction practically relevant style program differs pram program large granularity possibility within parallel step computation different thread may considerably vary size let n-processor asynchronous parallel system restriction degree asynchrony without specialized synchronization mechanism challenging theoretical well practically important problem ensure correct execution p parallel machine let p large-grained program requiring total work w execution synchronous a-processor parallel system present transformation  p program c correctly efficiently effect computation p asynchronous machine moderate assumption granularity thread size program variable execution c requires expected total work memory space overhead small multiplicative constant< >
1992,clock construction fully asynchronous parallel system pram simulation extended abstract,author discus question simulating synchronous computation asynchronous system consider asynchronous system weak altogether lacking atomicity assumption first contribution paper novel clock asynchronous system clock basic tool synchronization asynchronous environment robust construction operate system atomicity assumption presence dynamic scheduler behavior clock obtained overwhelming probability  author show harness clock drive pram simulation asynchronous system resulting simulation scheme efficient existing one actually relaxing assumption underlying asynchronous system< >
1992,dependable parallel computing randomization abstract,n/a
1992,randomized mutual exclusion algorithm revisited, randomized algorithm mutual exclusion bounded waiting employing logarithmic sized shared variable given saias lynch  pointed adversary scheduler postulated paper observe behavior process interval opening critical section next closing critical section draw value local variable well value randomized round number component shared variable arrange schedule discriminate chosen process invalidates claimed property algorithm present paper algorithm  modified using idea  overcome difficulty obtaining essentially  thus  randomization yield simple algorithm mutual-exclusion bounded waiting employing shared variable considerably smaller size lower-bound established  deterministic algorithm
1992,efficient program transformation resilient parallel computation via randomization preliminary version,paper address problem automatically transforming arbitrary program written ideal parallel machine run completely asynchronous machine present transformation applied ideal program resulting program execution asynchronous machine work space efficient relative ideal program derived transformation guarantee ideal program execute continually progressive manner asynchronous machine instruction universal furthermore individual processor get delayed arbitrary amount time executing instruction contrast previous work relied either asynchronous machine universal read-modify-write instruction primitive limited asynchrony restricting relative speed processor
1991,set system union cardinality 0 modulom,letq prime power shown hypergraphℱ = {ffd+} whose maximal degree isd exists ø ≠ ℱ ⊂ ℱ that≡  
1989,biased coin randomized algorithm,n/a
1989,efficient dispersal information security load balancing fault tolerance,information dispersal algorithm  developed break file f length l = ↿ f↾ n piece fi l ≤ ≤ n length ↿fi↾ = l/m every piece suffice reconstructing f dispersal reconstruction computationally efficient sum length ↿fi↾  · l since n/m chosen close l ida space efficient ida numerous application secure reliable storage information computer network even single disk fault-tolerant efficient transmission information network communication processor parallel computer latter problem provably time-efficient highly fault-tolerant routing n-cube achieved using constant size buffer
1989,maximum matchings general graph randomization,new randomized algorithm maximum matching problem presented unlike conventional matching algorithm combinatorial algorithm algebraic work tutte matrix given graph although slower best known matching algorithm algorithm advantage conceptually simple easy program
1989,itoss integrated toolkit operating system security,n/a
1987,logic reason likelihood,present logic us modal operator l help capture notion likely despite fact likelihood assigned quantitative value probability capture many property likelihood intuitively appealing way give possible-worlds style semantics using standard technique modal logic give complete axiomatization show satisfiability formula decided exponential time discus logic might used area medical diagnosis decision making face uncertainty crucial conclude using give formal proof correctness aspect protocol exchanging secret
1987,efficient randomized pattern-matching algorithm,present randomized algorithm solve following string-matching problem generalization given string x length n  string  find first occurrence x consecutive block within algorithm represent string length n much shorter string called fingerprint achieve efficiency manipulating fingerprint instead longer string algorithm require constant number storage location essentially run real time conceptually simple easy implement method readily generalizes higher-dimensional pattern-matching problem
1987,achieving independence logarithmic number round,simultaneous broadcast  also basic building block recent %ompleteness theorem  paper present new protocol simultaneous broadcast building upon past work introduce novel method concurrently alternating interleaving n execution verifiable secret sharing protocol approach greatly improves time complexity  simultaneous broadcast previous protocol   q uired complete serialization ra verifiable secret sharing resulting n communication round protocol constructive requires log n + log log n serial execution verifiable secret sharing preserve maximum fault tolerance  polynomial resource bound  improvement appiies general simulation  light improved performance significant protocol fairly simple correctness proof slippery business distributed cryptographic protocol simpler proof important * research supported nsf grant mcs- harvard university contact author email address rabinqharvardharvardedu permission copy without fee part material granted provided copy made distributed direct commercial advantage acm copyright notice title publication date appear notice given copying permission association computing machinery copy otherwise republish requires fee and/or specific permission
1983,transaction protection beacon,protocol implementing contract signing confidential disclosure certified mail electronic mail system proposed transaction provably impossible without trusted intermediary however implemented small probability participant cheating partner use beacon emitting random integer application include privacy protection personal information data bank well protection business transaction
1983,randomized byzantine general,present randomized solution byzantine general problem solution work synchronous well asynchronous case produce byzantine agreement within fixed small expected number computational round independent number n process bound number faulty process solution us shamirs method sharing secret specializes produce simple solution distributed commit problem
1982,choice coordination problem,course concurrent computation processesppnmust reach common choice one ofkalternativesaak protocol using k shared variable one alternative range variable value thennmnmis necessary andn+ mi sufficient deterministic protocol solving choice coordination problem  introduce simple randomizing protocol independently n solve ccp use fixed alphabet single-byte  alphabet permit solution non-termination probability smaller  many software hardware task involving concurrency interpreted choice coordination problem choice coordination problem occur also nature
1982,n-process mutual exclusion bounded waiting 4 log_2 n-valued shared variable,problem implementing mutual exclusion n asynchronous parallel process model primitive communication mechanism test-and-set operation shared variable subject extensive research two-valued variable suffices insure mutual exclusion shown  n/ value necessary avoid lockout process n +  value required ensure bounded waiting time introduce idea employing randomization mutual exclusion protocol achieve mutual exclusion probability  lockout-free bounded-waiting solution using  · log n-valued shared variable protocol extremely simple easy implement avoids certain undesirable feature present solution protocol process identical symmetry preserved throughout computation particular unlike  cremers hibbard “mutual exclusion n processor using o-valued message variable” extended abstract university southern california  single process ever becomes even temporarily controller computation would make everything depend
1981,advantage free choice symmetric fully distributed solution dining philosopher problem,shown distributed system probabilistic processor essentially powerful distributed system deterministic processor ie certain useful behavior realized former demonstrated dining philosopher problem shown certain natural hypothesis way philosopher programmed  guarantee absence deadlock  hand philosopher given freedom choice one may program guarantee every hungry philosopher eat  circumstance  solution proposed fully distributed involve central memory process every philosopher communicate
1980,probabilistic algorithm finite field,present probabilistic algorithm problem finding irreducible polynomial degree n finite field finding root polynomial factoring polynomial irreducible factor finite field problem importance algebraic coding theory algebraic symbol manipulation number theory algorithm transparent easy program structure finite field large characteristic p exhaustive search ${{z}}_p $ feasible algorithm lower order degree polynomial field question previously published algorithm
1980,n-process synchronization 4 log _2 n-valued shared variable,problem implementing mutual exclusion n asynchronous parallel process model primitive communication mechanism test-and-set operation shared variable subject extensive research two-valued variable suffices insure mutual exclusion shown  n/ value necessary avoid lockout process n +  value required insure bounded waiting time introduce idea employing randomization synchronization protocol achieve mutual exclusion lockout-free bounded-waiting solution using -valued shared variable protocol extremely simple easy implement avoids certain undesirable feature present solution
1977,complexity computation,framework research theory complexity computation described emphasizing interrelation seemingly diverse problem method illustrative example practical theoretical significance given direction new research discussed
1974,theoretical impediment artificial intelligence,n/a
1974,characterization power vector machine,random access machine  usually defined register hold integer capture part structure commercial computer overlook implementation-dependent feature binary oriented machine namely ability operate bit bit bit vector used represent integer typical operation bit-wise boolean operation  shift amount specified register operation ideal certain problem dealing set represented bit vector parsing algorithm  propositional calculus theorem proving analysis sorting network ram implemented shall call vector machine
1972,proving simultaneous positivity linear form,n/a
1972,solving linear equation mean scalar product,shall state solve problem proposed r brent p wolfe concerning solution system linear equation algorithm operation permitted coefficient vector  formation scalar product ai ·v calculation called test objective solve equation using minimum number test
1971,meeting association symbolic logic,n/a
1966,decidability undecidability extension second first order theory generalized successor,n/a
1963,probabilistic automaton,probabilistic automaton  generalization finite deterministic automaton follow formulation finite automaton rabin scott  automatahave two-valued output thus viewed defining set tape accepted involves loss generality pa automaton state input σ probability pi} going state si cut-point  ≤ λ <  associated set tof tape accepted bywith cut-point λhere develop general theory pa solve basic problem aside mathematical interest pursuing natural generalization finite automaton  also bear question reliability sequential circuitspa general stronger deterministic automaton  studying way may want use pa led introduce concept isolated cut-point turn every pa isolated cut-point equivalent suitable deterministic automaton  interesting note passing minimal deterministic automaton equivalent pa sometimes save state reduction theorem applied prove existence approximate calculation procedure calculation problem involving product stochastic matrix  problem new kind a-priori bound number operation  may perform therefore classical numerical estimate round-off error applyactual automaton  property often existing actual unreliable circuit transition probability strictly positive actual automaton proved give definite event point restriction may impose probabilistic sequential circuit want perform general task namely transition prohibitedfinally treat important problem stability operation pa stable  small enough perturbation transition probability affirmative answer question case actual automaton  discus problem general case
1963,word history turing machine fixed input,n/a
1963,theory definite automaton,definite automaton roughly speaking automaton  property fixed integer k action depends last k input notion definite event introduced kleene well related concept definite automaton table studied detail basic  relating minimum number state required synthesizing automaton given degree definiteness proved give characterization k-definite event definable k+ state automaton various decision problem pertaining definite automaton effectively solved also solve effectively problem synthesizing minimal automaton defining given definite event solution decision synthesis problem given practical sense problem presented n unit information algorithm question requires n step elementary nature  notion equivalence definite event introduced uniqueness minimal automaton defining event equivalence class proved
1959,finite automaton decision problem,finite automaton considered paper instrument classifying finite tape one-tape automaton defines set tape two-tape automaton defines set pair tape et cetera structure defined set studied various generalization notion automaton introduced relation classical automaton determined decision problem concerning automaton shown solvable effective algorithm others turn unsolvable algorithm
1959,code checking logical operation,two type code checking logical operation digit digit two vector binary digit studied first type attache check symbol vector binary digit requires check symbol logical function two vector determined check symbol two input vector second type coding ordinary block coding vector binary digit added requirement coded vector processed digit digit constraint code resulting assumption coding system studied typical algebraic argument shown type coding nontrivial logical function two variable except “exclusive or” complement system checking simpler duplication “exclusive or” complement group alphabet used block coding code used
1958,recursively enumerable arithmetic model set theory,note shall prove certain relative recursiveness lemma concerning countable model set theory  lemma follow two  special type modelskreisel  mostowski  shown certain  system set theory formulated mean  relation certain additional non-logical constant posse recursive model purpose construct consistent sentence without recursive model first corollary lemma  obtain simple proof involving formal construction within system notion truth satisfiability extension kreisel-mostowski theorem namely set theory single non-logical constant  posse recursively enumerable model thus get side product easy example consistent sentence containing single binary relation posse recursively enumerable model sentence conjunction  axiom set theory
