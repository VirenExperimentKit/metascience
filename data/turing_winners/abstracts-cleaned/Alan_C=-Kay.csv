2015,cuneiform tablet 2015,discus problem running today software decade century even millennium future
2012,extracting energy turing tarpit,part turing fame inspiration came showing simple computer simulate every computer anything possible turing tarpit getting caught anything possible nothing easy one way get caught stay close underlying machine language thing seem comprehensible small code blow intractable million line used anything possible make different kind computer require new learning code compactly fit problem stay small
2011,world controlling scope side effect,state imperative program—eg value stored global local variable array objects’ instance variables—changes statement executed change side effect visible globally one part program modifies object every part hold reference object  also affected paper introduces world language construct reifies notion program state enables programmer control scope side effect investigate idea extending javascript squeak smalltalk support world provide example interesting idiom construct make possible formalize semantics property/field lookup presence world also describe efficient implementation strategy  illustrate practical benefit world two case study
2006,3d model annotation multiple viewpoint croquet,paper explores way multiple author annotate model multiple viewpoint collaborative environment particular reference environment provided croquet deal two type viewpoint conceptual viewpoint physical viewpoint approach exploit portal notable feature croquet order achieve goal assume physical viewpoint expressed position orientation portal provide method annotation based conceptual viewpoint developed new portal called interactor design preliminary implementation discussed
2006,scalability collaborative environment,collaborative environment range primitive  rich mixture medium computation three-dimensional graphic critical system scalability many user system support single session many simultaneous session supported question ultimately reduce bandwidth computation consumption collaborative system value turn depend upon architectural choice made implementation system client-server peer-to-peer data computation replicated tradeoff depend nature collaboration paper derive bound bandwidth latency consistent collaborative system consistent system one participant agree order event across peer examine calculate bandwidth latency bound various system architecture calculate theoretical lower bound computational bandwidth complexity compare architectural bound lowest global bound
2005,filter task croquet,croquet collaborative platform allows user work together create share idea developing architecture incorporates idea filter control solve problem model us croquet portal view filter modify nature content displayed side filter another problem collaborative sharing interface tends complex new approach extension model-view-controller approach pioneered smalltalk described extension mvc collaborative user interface design consists interactors task replicants architecture solves collaboration ui problem way make quite easy designer create robust multi-user application without manage divergent state goal user programmer focus design extensible system dealing single user
2004,conversation alan kay,big talk creator smalltalk - much
2004,croquet menagerie new user interface,new architecture like croquet present numerous opportunity challenge create useful interface enable access underlying power system particular focus integrated system ensures rich intellectual environment within explore experience similar development original modern windowing user interface created alan kay team xerox pare squeak team  team also infrastructure rich enough allow u perform deep exploration presentation manipulation rich medium expressed negotiation rich medium world number key technology discussed including dynamic movable portal floating window true creation tool live teleporting snapshot completely new concept portal
2004,computer revolution computer science software engineering havent happened yet,compare printing revolution modern science engineering physical world conclude computer version havent happened yet printing revolution hardware technology allowed automation hand written text bible much longer learning curve brought new way think argue culminating th century new way understand physical political universe human live created modern world contrast still generally automating bible computer new way think argue still invented havent reached computer user similarly compare state software building modern engineering - building empire state building new york city scratch le one year le  coordinated worker - hardly claim software engineering much past ancient egyptian pyramid building million line code-bricks piled top little coordination discernable architecturea science generally finding better model structure universe simon pointed science artificial like science bridge first make structure study create better theory might claim mccarthy lisp-in-itself kind maxwell equation still lack equivalent special theory includes handling time reasonable useful way immense commercialization computing happened disrupted much progress area especially u time ask three idea mean get back real work advancing field making real computer revolution happen
2003,interview alan kay,legendary alan kay roy e disney graciously appeared camera interview joined acm computer entertainment magazine editorial board alan roy two nicest people talk work alan talked soft fun versus hard fun research squeak enhancing amplifying learning childrens education roy told u educator versus entertainer view traditional cgi animation video clip interview available http//wwwacmorg/pubs/cie/oct/indexhtmlalan kay hp fellow president viewpoint research institute best known idea personal computing conception intimate laptop computer invention ubiquitous overlapping-window interface modern object-oriented programming deep interest child education catalyst idea continue major source inspiration past alan xerox fellow chief scientist atari apple fellow disney fellow information available http//wwwsqueaklandorg/community/biography/alanbiohtml http//wwwviewpointsresearchorg/alanhtml
2003,croquet - collaboration system architecture,croquet computer software architecture built ground focus deep collaboration team user totally open totally free highly portable extension squeak  programming system croquet complete development delivery platform real collaborative work distinction user environment development environment croquet focused interaction inside shared space used context based collaboration user see others current focus allows extremely compelling shared experience new collaboration architecture/protocol called teatime developed enable functionality rendering architecture built top opengl 
2002,computer revolution hasnt happened yet,n/a
2000,computer revolution hasnt happened yet keynote session,printing press invented middle th century yet took  year book considered dangerous enough banned  year science invented almost  year new kind political essay invented  hundred year country invented political system  could argued existence via press citizenry could understand argument schooling general literacy also fruit press also took many century become established commercial computer  year old still imitating paper culture came printing press manuscript culture gradually replaced medium revolution said happened without general establishment “literacy” fluent “reading” “writing” highest level idea medium represent computer far fluent literacy — even understanding literacy resemble — could claim computer revolution hasnt even started talk try put shape real computer revolution come
1998,computer revolution hasnt happened yet abstract
1997,back future story squeak - usable smalltalk written,squeak open highly-portable smalltalk implementation whose virtual machine written entirely smalltalk making easy debug analyze change achieve practical performance translator produce equivalent c program whose performance comparable commercial smalltalksother noteworthy aspect squeak include compact object format typically requires single word overhead per object simple yet efficient incremental garbage collector -bit direct pointer efficient bulk-mutation object extension bitblt handle color depth anti-aliased image rotation scaling real-time sound music synthesis written entirely smalltalk
1993,early history smalltalk,idea come previous idea sixty particularly arpa community gave rise host notion “human-computer symbiosis” interactive time-shared computer graphic screen pointing device advanced computer language invented simulate complex system oil refinery semi-intelligent behavior soon follow paradigm shift modern personal computing overlapping window interface object-oriented design came seeing work sixty something “better old thing” better way mainframe computing end-users invoke functionality make data structure abstract instead promise exponential growth computing/$/volume demanded sixty regarded “almost new thing” find actual “new things” might example one would compute handheld “dynabook” way would possible shared mainframe million potential user meant user interface would become learning environment along line montessori bruner need large scope reduction complexity end-user literacy would require data control structure done away favor biological scheme protected universal cell interacting message could mimic desired behavior early smalltalk first complete realization new point view parented many predecessor hardware language user interface design became exemplar new computing part actually trying qualitative shift belief structures—a new kuhnian paradigm spirit invention printing press—and thus took highly extreme position almost forced new style invented
1986,keynote address summary,alan kay asked u remember word bob barton “good idea dont often scale” respect using window paradigm everything macintosh ultra-high resolution large screen suggested good user interface useable child six year age adult dont make good subject much patience “theyve learned suffer thats school for” videotape  month-old girl adroitly using macpaint drove home point kay promoted idea “agents” computer-created creature personality ability act experiment using advanced technology idea kay brought together group people including disney animator spend weekend e&s ct- real-time shaded graphic system came interesting animation bouncing rabbits-eye-view ramble infinite forest swim shallow sea company couple realistically swimming shark exhorted strive impressionistic imagery seen dance sugar-plum fairy disney fantasia rather spending teraflop trying achieve ever-receding goal absolute realism kay closed noting art imitates life computer art/animation imitate creation
1985,user interface theatrical mirror,n/a
1984,soothsayer electronic age,within lifetime seen three generation computer flourish fade archive technology today experiencing fruit fourth generation expectation fifth generation focus conference indeed plan immediate future expectation extrapolate sixth generation lie beyond three noted thinker computer industry comprise panel soothsayer examining omen augury electronic age dr carl hammer investigates scenario beyond data processing horizon explores processing system intelligent expert capable making complex decision human decision dr kerry joel predicts seventh generation system giving specification capability cost likely model map route reaching seventh generation point landmark journey already begun dr alan kay foretells future small computer age democratization access universal computer literacy speaker address interaction demand technology society demand society make technology forecast future could possible wish
1983,artificial intelligence impact human occupation distribution income,n/a
1980,user interface design smalltalk computing system abstract,n/a
1978,programming child personal computer abstract presentation,n/a
1977,personal dynamic medium,learning research group xerox palo alto research center concerned aspect communication manipulation knowledge design build use dynamic medium used human being age several year ago crystallized dream design idea personal dynamic medium size notebook  could owned everyone could power handle virtually owner information-related need towards goal designed built communication system smalltalk language implemented small computer refer interim dynabooks exploring use system programming problem solving tool interactive memory storage manipulation data text editor medium expression drawing painting animating picture composing generating music 
1971,computer structure past present future abstract,computer design seventy delineated number past ghost present spectre
1971,laboratory hand-eye research,n/a
1971,use vision manipulation solve instant insanity puzzle,n/a
