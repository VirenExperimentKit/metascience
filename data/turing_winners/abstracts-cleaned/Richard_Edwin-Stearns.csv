2019,symmetry property nested canalyzing function,many researcher studied symmetry property various boolean function class boolean function called nested canalyzing function  used model certain biological phenomenon identify interesting relationship ncfs symmetric boolean function generalization symmetric boolean function call r-symmetric function  using normalized representation ncfs develop characterization two variable ncf symmetric using characterization show symmetry level ncf f easily computed given standard representation f also present algorithm testing whether given r-symmetric function ncf show ncf f n variable notion strong asymmetry considered literature equivalent property f n-symmetric use result derive closed form expression number n-variable boolean function ncfs strongly asymmetric also identify boolean function ncfs symmetric
2018,characterization nested canalyzing function maximum average sensitivity,nested canalyzing function  class boolean function used model certain biological phenomenon derive complete characterization ncfs largest average sensitivity expressed term simple structural property ncf characterization provides alternate elementary proof tight upper bound average sensitivity ncf established klotz et al  also utilize characterization derive closed form expression number ncfs largest average sensitivity
2018,learning behavior dynamical system via 20 question approach,using graphical discrete dynamical system model networked social system problem inferring behavior system formulated problem learning local function dynamical system investigate problem assuming active form interaction system query consider two class local function  two interaction mode namely batch mode  adaptive mode  develop complexity  efficient heuristic produce query set query mode demonstrate performance heuristic experiment  well-known network
2018,testing phase space property synchronous dynamical system nested canalyzing local function,discrete graphical dynamical system serve effective formal model many context including simulation agent-based model propagation contagion social network study biological phenomenon class boolean function called nested canalyzing function  used good model certain biological phenomenon motivated biological application study variety analysis problem synchronous graphical dynamical system  boolean domain local function ncf analysis problem involves testing whether phase space given syds satisfies certain property present intractability  property well efficient algorithm others several case  clearly delineate intractable efficiently solvable version problem
2018,inferring probabilistic contagion model network using active query,problem inferring unknown parameter networked social system considerable practical importance consider problem independent cascade model using active query framework specifically given network whose edge probability unknown goal infer probability value edge querying system optimization objective use query possible carrying inference present approximation algorithm provide provably good estimate edge probability also present  experimental evaluation algorithm several real-world network
2018,using active query learn local stochastic behavior social network,using stochastic synchronous dynamical system  formal model study problem inferring local behavior node networked social system focus probabilistic threshold function local function use active query mechanism user interacts system submitting query develop efficient algorithm infers probabilistic threshold function using response query algorithm generates provably good query set also present experimental  demonstrate performance algorithm
2018,computational aspect fault location resilience problem interdependent infrastructure network,motivated application diagnosing failure complex infrastructure network consider configuration sequence completion problem  networked system goal csc problem choose value unknown entry specified sequence configuration system resulting sequence represents valid trajectory system problem generalizes known decision problem dynamical system present efficient algorithm version csc problem computational intractability  version
2017,inferring local transition function discrete dynamical system observation system behavior,consider problem inferring local transition function discrete dynamical system observed behavior focus synchronous system whose local transition function threshold function assume topology system known goal infer threshold value node system produce observed behavior show inference problem efficiently solvable others np-complete even underlying graph dynamical system simple path identify fixed parameter tractable problem context also consider constrained version threshold inference problem input includes set equality inequality constraint  present algorithmic complexity  several constrained threshold inference problem
2015,analysis problem graphical dynamical system unified approach graph predicate,present unified approach studying complexity analysis problem synchronous dynamical system  class graphical model networked multiagent system approach us predicate based graph embeddings capture many phase space property sydss studied literature additional property considered previously using formalism develop general  show many analysis problem sydss computationally intractable however underlying graph given syds treewidth bounded local function r-symmetric  show even counting version analysis problem solved efficiently
2015,complexity inferring local transition function discrete dynamical system,consider problem inferring local transition function discrete dynamical system observed behavior focus synchronous system whose local transition function threshold function assume topology system known goal infer threshold value node system produce observed behavior show inference problem efficiently solvable others np-complete even underlying graph dynamical system simple path also identify fixed parameter tractable problem context
2013,attributed translation,attributed translation grammar introduced mean specifying translation string input symbol string output symbol symbol finite set attribute take value possibly infinite set attributed translation grammar applied depth practical compiling problemscertain augmented pushdown machine defined characterization given attributed translation perform deterministically nondeterministically class attributed translation grammar defined whose translation performed deterministically parsing top bottom
2013,analysis several heuristic traveling salesman problem,several polynomial time algorithm finding “good” necessarily optimal tour traveling salesman problem considered measure closeness tour ratio obtained tour length minimal tour length nearest neighbor method show ratio bounded logarithmic function number node also provide logarithmic lower bound worst case class approximation method call insertion method studied also shown logarithmic upper bound two specific insertion method call nearest insertion cheapest insertion ratio shown constant upper bound  example provided come arbitrarily close upper bound also shown n≥ traveling salesman problem n node tour cannot improved making n/ edge change ratio 
2013,system level concurrency control distributed database system,distributed database system one database spread among several site application program “move” site site access update data need concurrency control portion system responds read write request application program job maintain global consistency distributed database ensuring termination application program prevented phenomenon deadlock assume individual site local concurrency control responds request site communicate concurrency control site application program move site site terminates abortsthis paper present design several distributed concurrency control demonstrates work correctly also investigates implication global consistency distributed database discus phenomenon prevent termination application program
2013,consistency serializability concurrent database system,main  paper show serialization necessary sufficient consistency concurrent database system true final database view database seen individual transaction model transaction includes read write operation may performed order main  presented term information flow model describing source value read use value written since model involve concept “time” value read written model concurrency system producing information flow among transactionsthere section discussing effect changing model include write operation without preceding read section discussing restriction straight-line program
2013,sums-of-products subproblem independence,sums-of-products provide basis describing certain computational problem particularly problem related constraint satisfaction including sat max sat #sat also used describe many problem arising graph theory modeling problem sum-of-products problem concept “subproblem independence” take clear meaning subproblem independence immediate computational implication since used create program reduced level nesting program exploit memoization concept subproblem independence also extends quantified sumssubproblem independence linked directly structural concept associated tree decomposition graph closely related structure tree algebraic problem thus method finding tree decomposition apply directly finding independent subproblems
2011,modeling analyzing social network dynamic using stochastic discrete graphical dynamical system,motivated application spread epidemic propagation influence social network propose formal model analyzing dynamic network model stochastic version discrete graphical dynamical system using model formulate study computational complexity two fundamental problem  arise context social network also address problem deal time evolution stochastic dynamical system point implication  problem computational model hopfield network communicating finite state machine systolic array particular polynomial time algorithm predecessor existence problem stochastic dynamical system imply similar  one-dimensional finite cellular automaton
2007,predecessor existence problem finite discrete dynamical system,study predecessor existence problem finite discrete dynamical system given finite discrete dynamical systemand configuration predecessor existence  problem determine whether configurationsuch thathas transition fromto addition decision version also study following variant #-predecessor existence  problem–counting number predecessor unique-predecessor existence  problem–deciding whether unique predecessor ambiguous-predecessor existence  problem–given configurationand predecessorof deciding whether different predecessorof general technique presented simultaneously characterizing computational complexity pre problem three variant hardness  based concept simultaneous reduction single transformation used simultaneously prove hardness different variant pre problem respective complexity class easiness  based dynamic programming extend previous  pre problem one-dimensional cellular automaton hardness  together easiness  provide tight separation easy hard instancesfurther  imply similar bound class finite discrete dynamical system including discrete hopfield recurrent neural network concurrent state machine systolic network one- two-dimensional cellular automaton  extend earlier  green sutner orponen complexity predecessor existence problem variant
2007,computational aspect analyzing social network dynamic,motivated application diagnosing failure complex infrastructure network consider configuration sequence completion problem  networked system goal csc problem choose value unknown entry specified sequence configuration system resulting sequence represents valid trajectory system problem generalizes known decision problem dynamical system present efficient algorithm version csc problem computational intractability  version
2006,complexity reachability problem finite discrete dynamical system,sequential dynamical system  special type finite discrete dynamical system used model simulation system focus computational complexity testing several phase space property sd main result sharp delineation class sd whose behavior easy predict whose behavior hard predict specifically show followingseveral state reachability problem sd pspace-complete even restricted sd whose underlying graph bounded bandwidth  function associated node symmetric moreover result hold even underlying graph d-regular constant node compute symmetric boolean function immediate corollary result pspace-hard lower bound complexity reachability problem regular generalized d-cellular automaton undirected systolic network boolean totalistic local transition functionsin contrast reachability problem solvable polynomial time sd boolean function associated node symmetric monotonethe pspace-completeness  follow corollary simulation  show several class sd one class sd efficiently simulated another  class sd also prove several structural property concerning phase space sd sd closely related cellular automaton  concurrent transition system discrete hopfield network systolic network observation conjunction lower bound sd yield new pspace-hard lower bound complexity state reachability problem model extending earlier    – p floréen e goles g weisbuch transient length sequential iteration threshold function discrete appl math   – p floréen p orponen complexity issue discrete hopfield network research report a-- department computer science university helsinki  also appears parberry  comp learning complexity neural network advanced topic  harel kupferman vardi complexity verifying concurrent transition system inform comput   – sk shukla hb hunt iii dj rosenkrantz stearns complexity relational problem finite state process international colloquium automaton programming language icalp  pp – rabinovich complexity equivalence problem concurrent system finite agent inform comput    –
2005,mechanism design software agent complete information,investigate mechanism design problem agent mechanism computational restriction particular examine  mechanism design literature affected social choice rule requires mechanism solve computationally difficult optimization problem dominant strategy nash implementation considered multiagent version maximum satisfiability problem show best mechanism guarantee least half maximum number simultaneously satisfiable agent satisfied outcome analysis highlight difficulty arise applying  mechanism design computational problem particular  show using approximation multiagent setting much le successful traditional computational setting game theoretic guarantee required outcome
2005,resource bound subproblem independence,several reason np-hard problem solved deterministically time  < <  one reason problem solved nondeterministic procedure us space second reason instance problem exhibit high degree subproblem independence  line channelwidth treewidth third instance problem solved using nondeterministic straight-line program number variable paper show imposing q-linear bound computation time obliviousness constraint nondeterminism three reason essentially equivalent k specifically problem class associated reason interchangeable using reduction simultaneously polynomial time q-linear size-bounded call pq-reductions class problem solvable method call nqna class defined general way include rich variety problem take evidence class power index  also lower time bound hand easiness problem derived subproblem independence consideration thus technique associated subproblem independence seen widely applicable one might expect
2003,finite strategy set finitely repeated zero-sum game,study finitely repeated two-person zero-sum game player  restricted mixing fixed number pure strategy player  unrestricted describe optimal set pure strategy player  along optimal mixed strategy show entropy mixed strategy appears factor exact formula value game thus seen direct numerical effect game value develop upper lower bound value game within additive constant discus  related work neyman okada strategic entropy  finally use  bound value repeated game one player us computer bounded memory restricted using constant amount time stage
2003,deterministic versus nondeterministic time lower bound problem,many problem general interest natural nondeterministic algorithm computer act deterministically important understand relationship deterministic nondeterministic time specifically important understand quickly deterministic computing device determine outcome nondeterministic calculation far general technique work better trying step-by-step simulation exponential methodthe famous question concerning determinism versus nondeterminism p = np question however different question relationship possible significant progress relationship achieved without answering pv = np question thanks efficient reduction turing machine simulation sat relationship question posed question sat problem proving nontrivial lower bound time required solve sat instance larger problem proving lower bound natural problem suggested study generic problem might fruitful approach toward insight problem
2003,reachability problem sequential dynamical system threshold function,sequential dynamical system  domainis triple  g undirected graph n node node state value set local transition function fi denoting local transition function associated node vi  π permutation  node v single sd transition obtained updating state node v evaluating function associated order given πwe consider reachability problem sd restricted local transition function main intractability  show reachability problem sd pspace-complete either following restriction hold consists simple-threshold-functions simple-inverted-threshold function consists threshold-functions use weight asymmetric manner moreover  hold even sd whose underlying graph bounded node degree bounded pathwidth lower bound  also extend reachability problem hopfield network communicating finite state machineson positive side show whenconsists threshold function use weight symmetric manner reachability problem solved efficiently provided weight strictly positive ratio largest smallest weight bounded polynomial function number node
2003,predecessor permutation existence problem sequential dynamical system,class finite discrete dynamical system called sequential dynamical system  introduced  formal model analyzing simulation system address complexity two basic problem generalization sdssgiven sd configuration c predecessor existence  problem determine whether configuration c transition c c  provide separation efficiently solvable computationally intractable instance pre problem example show pre problem solved efficiently sd boolean state value node function symmetric underlying graph bounded tree width contrast show allowing one non-symmetric node function render problem np-complete even underlying graph star   extend earlier  sutner  green  complexity predecessor existence problem -dimensional cellular automatagiven two configuration c c partial sd permutation existence  problem determine whether permutation node transition c c one step show pme problem np-complete even function associated node simple-threshold function also show problem solved efficiently sd whose underlying graph bounded degree bounded tree width consider generalized version  pme problem show problem np-complete sd node function underlying graph maximum node degree  node computes function node computes function show gen-pme problem solvable polynomial time
2002,parallel approximation scheme class planar near planar combinatorial optimization problem,define -almost planar graph graph g consisting vertex set v genus g layout δ·|v| crossover node study class combinatorial optimization problem formulated follows let x={x x…xn} set variable finite domain d={ …poly} also let fixed finite set finite arity relation {r…rq} optimization problem max-relation following given set term {t t…tm} term ti form f fϵs assign value xi ≤i≤n maximize number satisfied term show fixed finite set fixed δ g≥ nc-approximation scheme  problem max-relation restricted instance whose bipartite graph  -almost planar result conjunction approximation-preserving reduction max-relation enables u obtain ncass number graph theoretic satisfiability problem restricted -almost planar instance  provide characterization class problem ncas 
2002,exploiting structure quantified formula,study computational problem “find value quantified formula obtained quantifying variable sum terms” “sum” based commutative monoid “quantifiers” need satisfy two simple condition variable finite domain problem generalization problem “given sum-of-products term find value sum” studied  – data structure called “structure tree” defined display information “subproblems” solved independently process evaluating formula formula “good” structure tree enable certain generic algorithm evaluate formula significantly le time brute force evaluation “generic algorithm” mean algorithm constructed uninterpreted function symbol quantifier symbol monoid operation algebraic nature model facilitates formal treatment “local reductions” based “local replacement” term local reduction “preserve formula structure” sense structure tree nice property transform structure tree similar property local reduction also used transform hierarchical specified problem useful structure hierarchically specified problem similar structure
2001,complexity approximability quantified stochastic constraint satisfaction problem,abstractlet arbitrary  nonempty set let c finite set constant symbol denoting arbitrary element let arbitrary finite set finite-arity relation denote problem determining satisfiability finite conjunction relation applied variable  sat  study simultaneously complexity decision counting maximization approximate maximization problem unquantified quantified stochastically quantified formulaswe present simple yet general technique characterize simultaneously complexity efficient approximability number versions/variants problem sat q-sat s-satmax-q-sat etc many different dcst versions/variants include decision counting maximization approximate maximization problem unquantified quantified stochastically quantified formula unified approach based following two basic concept  strongly-local replacements/reductions  relational/algebraic representabilitysome  extend earlier   technique  reported also provide significant step towards obtaining dichotomy theorem number problem including problem max-q-sat max-s-sat discovery dichotomy theorem unquantified formula received significant recent attention literature 
2001,garden eden fixed point sequential dynamical system,class finite discrete dynamical system called <b>sequential dynamical systems</b>  proposed  abstract model computer simulation address question concerning two special type sd configuration namely garden eden fixed point configuration configuration c sd garden eden  configuration cannot reached configuration necessary sufficient condition non-existence ge configuration sd whose state value finite domain provided  show condition sufficient necessary sd whose state value drawn infinite domain also present  relate existence ge configuration property sd configuration c sd fixed point transition c c fixed point existence  problem determine whether given sd fixed point show thatthe fpe problem <b>np</b>-complete even simple class sd  also identify several class sd  fpe problem solved efficiently
2001,strongly-local reduction complexity/efficient approximability algebra optimization abstract algebraic structure,demonstrate concept algebraic representability strongly-local reduction developed  used characterize computational complexity/efficient approximability number basic problem variant various abstract algebraic structure f problem include followingalgebra determine solvability unique solvability number solution etc system equation f determine equivalence two formula straight-line program foptimization let ∈ > determine maximum number simultaneously satisfiable equation system equation f approximate number within multiplicative factor n∈determine maximum value objective function subject satisfiable algebraically-expressed constraint f approximate maximum value within multiplicative factor n∈given formula straight-line program find minimum size equivalent formula straight-line program find equivalent formula straight-line program size ⪇ fboth finite infinite algebraic structure considered finite structure include finite non-degenerate lattice finite ring semi-rings nonzero element idempotent multiplication  infinite structure include natural number integer real number various algebra structure ordered ring many cancellative semi-rings infinite lattice two element ab covered b
2001,analysis problem sequential dynamical system communicating state machine,informally sequential dynamical system  consists undirected graph node v associated state v transition function f v  given state value v neighbor v function f v computes next value v  node transition function evaluated according specified total order computing device mathematical abstraction simulation system address complexity state reachability problem sd main result dichotomy class sd state reachability problem computationally intractable problem efficiently solvable  also allow u obtain stronger lower bound complexity reachability problem cellular automaton communicating state machine
1998,nc-approximation scheme np- pspace-hard problem geometric graph,present nc-approximation scheme number graph problem restricted geometric graph including unit disk graph graph drawn civilized manner approximation scheme exhibit time versus performance trade-off best known approximation scheme planar graph also define concept λ-precision unit disk graph show graph approximation scheme better time versus performance trade-off approximation scheme arbitrary unit disk graph moreover compared unit disk graph show λ-precision unit disk graph many graph problem efficient approximation schemesour nc-approximation scheme also extended obtain efficient nc-approximation scheme several pspace-hard problem unit disk graph specified using restricted version hierarchical specification language bentley ottmann widmayer approximation scheme hierarchically specified unit disk graph presented paper among first approximation scheme literature natural pspace-hard optimization problem
1998,complexity planar counting problem,prove #p-hardness counting problem associated various satisfiability graph combinatorial problem restricted planar instance problem include sat -sat -exsat minimum vertex cover minimum dominating set minimum feedback vertex set xc partition triangle clique cover also prove np-completeness ambiguous satisfiability} problem  dp-completeness  unique satisfiability problem  associated several problem restricted planar instance previously #p}-hardness  { np}-hardness  dp-completeness  known counting problem ambiguous satisfiability problem unique satisfiability problem respectively restricted planar instancesassuming { p  $ np} one corollary  $$-approximation algorithm problem maximizing minimizing linear objective function subject planar system linear inequality constraint integer
1998,approximation algorithm pspace-hard hierarchically periodically specified problem,study efficient approximability basic graph logic problem literature instance specified hierarchically {le} specified -dimensional finite narrow periodic specification {wa} show problem  considered specified using { k-level-restricted} hierarchical specification k-narrow periodic specification following hold let  performance guarantee polynomial time approximation algorithm  instance specified using standard specification >  polynomial time approximation algorithm performance guarantee    polynomial time approximation scheme restricted planar instance {romannum}these first polynomial time approximation scheme pspace-hard hierarchically periodically specified problem since several problem considered pspace-hard  provide first example natural pspace-hard optimization problem polynomial time approximation scheme answer open question condon et al
1998,theory periodically specified problem complexity approximability,study complexity efficient approximability graph satisfiability problem specified using various kind periodic specification studied previously obtain two general  first characterize complexity several basic generalized cnf satisfiability problem sat instance specified using various kind - -dimensional periodic specification outline characterization used prove number new hardness  periodically specified problem various complexity class one corollary show number basic np-hard problem become expspace-hard input represented using -dimensional infinite periodic wide specification thereby answering open question second outline simple yet general technique devise approximation algorithm provable worst case performance guarantee number combinatorial problem specified periodically efficient approximation algorithm scheme based extension previous idea provide first nontrivial collection natural nexptime-hard problem /spl epsiv/-approximation 
1996,algebraic model combinatorial problem,new algebraic model called generalized satisfiability problem  model introduced representing solving combinatorial problem gsp model alternative common method literature representing problem language-recognition problem gsp model problem instance represented set variable together set term computational objective find certain sum product term commutative semiring model general enough express standard problem set clause generalized clause nonserial optimization problem ${ } $-linear programming problem model also describe many graph problem often direct structure-preserving way two important property model following gsp model one naturally discus structure individual problem instance structure gsp instance displayed structure tree smaller weighted depth channelwidth structure tree gsp instance faster instance solved one several generic algorithm  gsp model extends easily apply hierarchically specified problem enables solution instance problem found directly specification rather  larger specified object
1996,complexity hierarchically 1-dimensional periodically specified problem hardness result,n/a
1996,polynomial time decidability simulation relation finite process hornsat based approach,n/a
1996,complexity relational problem finite state process extended abstract,study complexity following three relational problem let ∼ binary relation finite state process let p fixed finite state process let π nontrivial predicate finite state process x weakly bisimilar implies π = π  p determine process p q p ∼ q  p determine process p p ∼ p  p determine process p π = true study complexity problem process represented sequential transition system parallel composition transition system  number  obtained representation
1996,i/o automaton based verification finite state distributed system complexity issue abstract,n/a
1994,generalized cnf satisfiability problem non-efficient,use variant generalized cnf satisfiability problem sat tj schhaefer  characterize efficient approximability number basic np pspace-hard optimization problem literature contrast recent  none proof make use interactive proof system probabilistically checkable debate system particular assuming p/spl ne/np- p/spl ne/pspace show number optimization problem shown efficiently approximable shown efficiently approximable direct reduction often variant problem max nsf ambiguous sat moreover often show arbitrary problem instance also planar problem instance f-treewidth-bounded instance thus analogous zuckerman  show planar np-complete pspace-complete planar pspace-complete problem etc also version hard approximate< >
1994,unified approach approximation scheme np- pspace-hard problem geometric graph,present parallel approximation scheme number graph problem restricted geometric graph including unit disk graph graph drawn civilized manner  nc-approximation scheme exhibit time versus performance trade-off baker also define concept λ-precision unit disk graph show graph nc approximation scheme better time versus performance trade-off several graph problem efficient approximation schemesour parallel approximation scheme also extended obtain efficient parallel approximation scheme problem unit disk graph specified using restricted version hierarchical specification language bentley ottmann widmayer  show many graph problem pspace-hard even restricted form specification nevertheless problem posse efficient approximation scheme
1994,approximation scheme using l-reductions,present parallel approximation scheme large class problem logic graph theory problem restricted planar graph δ-near-planar graph  based positive use l-reductions decomposition given graph subgraphs given problem solved optimally polynomial time problem considered include max sat max sat maximum independent set minimum dominating set nc-approximation scheme exhibit time versus performance tradeoff baker  δ-near-planar graph first time approximation scheme kind obtained problem
1994,approximation scheme pspace-complete problem succinct specification preliminary version,n/a
1992,efficient algorithm solving system linear equation path problem,efficient algorithm presented solving system linear equation defined solving path problem  treewidth k graph  α-near-planar graph  algorithm include followingo time algorithm solving system linear equation solving single source shortest path problem time algorithm computing a− n×n matrix field computing a* n×n matrix closed semiring time algorithm pair shortest path problem one corollary  single source pair shortest path problem solvable step respectively decomposable graph class 
1990,complexity equivalence commutative ring,study deterministic time complexity equivalence problem formula straight-line program commutative ring general theorem presented yield sufficient condition commutative ring problem ring require “essentially much deterministic time set satisfiable cnf formulas” corollary theorem characterize deterministic time complexity two equivalence problem finite commutative ring commutative unitary ring zero prime characteristic
1990,power index easier hard problem,concept power_index satisfiability hypothesis  structure tree introduced used make sharper hypothesis problem complexity “the problem isnp-complete” concept used characterize complexity number basicnp-complete problem including clique partition shown power-indices / also problem sat shown solvable deterministically time exponential thesquare root ofv+c wherev number variable andc number “crossovers” needed layout formula plane
1990,complexity simple boolean formula application,concept ${sat}$-hardness ${sat}$-completeness modulo npolylogn time linear size reducibility denoted ${sat}$-hard  ${sat}$-complete  respectively introduced regardless whether ${p} = {np}$ ${p}  {np}$ shown intuitivelyeach ${sat}$-hard  problem requires essentially least much deterministic time andeach ${sat}$-complete  problem requires essentially deterministic time satisfiability problem cnf formulasit proved $$ satisfiability tautology unique satisfiability equivalence minimization problem already ${sat}$-complete  simple boolean formula simple system boolean equation completeness  used characterize deterministic time complexity number problem lattice propositional calculus combinatorial circuit finite field ring ${ z}_{k}$ binary decision diagram monadic single variable program scheme number hardness  best possible
1988,complexity satisfiability problem algebraic structure preliminary report,several different algebraic structure study computational complexity problem determining system equation sif system solution system unique solution number solution system  three type  obtained ring show problem either np- conp-hard unitary addition sat-hard commutative unitary also show determining number solution system equation #p-complete finite unitary addition #sat-complete finite commutative unitary second ordered unitary ring show determining system equation unique solution intuitively “as hard as” determining system equation solution third characterize complexity problem additional algebraic structure including finite finite-depth lattice
1988,juris hartmanis beginning computational complexity,author discus early period hartmanis research examines origin concept presented early paper influence effect research important  considered< >
1987,nonlinear algebra optimization ring hard,several general ${{np}}$- ${{conp}}$-hardness  presented nonlinear algebraic optimization problem ring  include following  problem determining system nonlinear equation ring solution ${{np}}$-hard virtually ring studied mathematics computer science  let nondegenerate ring multiplicative identity let $  $ linear order problem maximizing minimizing linear function subject quadratic constraint ${{np}}$- ${{conp}}$-hard  let ordered ring let associated order problem maximizing minimizing quadratic multiple variable polynomial subject constraint form $a  x  b$ ${{np}}$- ${{conp}}$-hard several additional related nonlinear problem ring shown ${{np}}$- ${{conp}}$- #${{p}}$-hard particular following variant hilbert tenth problem shown ${{np}}$-complete  problem determining quadratic multiple variable polynomial f integer coefficient real assignment v value ${ } $ variable f f take value  v
1986,monotone boolean formula distributive lattice complexity logic algebraic structure computation structure preliminary report,refine significantly extend known  complexity satisfiability tautology equivalence ≤-problems class boolean formula  presented relationship number repetition variable occurring formula complexity decision problem formula  also presented complexity simple monotone boolean formula implicationa variety application  presented number logic studied literature computational probability counting algebraic structure program scheme binary decision diagramsassuming p ↮ np number  “best” possible close “best” possible
1985,equivalence containment problem unambiguous regular expression regular grammar finite automaton,known proof equivalence containment problem regular expression regular grammar nondeterministic finite automaton pspace-complete  depend upon consideration highly unambiguous expression grammar automaton prove dependence inherentdeterministic polynomial-time algorithm presented equivalence containment problem unambiguous regular expression unambiguous regular grammar unambiguous finite automaton algorithm extended ambiguity bounded fixed k algorithm depend upon several elementary observation solution system homogeneous linear difference equation constant coefficient relationship number derivation string given length n regular grammar
1981,equivalence containment problem unambiguous regular expression grammar automaton,known proof equivalence containment problem regular linear context-free grammar pspace-complete undecidable respecitvely depend upon consideration ambiguous grammar prove dependence inherent deterministic polynomial time algorithm presented  equivalence containment problem unambiguous regular grammar  k ≥  equivalence containment problem regular grammar degree ambiguity ≤ k  problem determining unambiguous linear context-free grammar equivalent contains arbitrary regular set simple extension grammar class    shown yield problem np-hard undecidable several new  relative economy description ambiguous versus unambiguous regular linear contextfree grammar also obtained  depend upon several observation solution system homogeneous linear difference equation relationship number string given length generated unambiguous regular linear context-free grammar
1981,distributed database concurrency control using before-values,associated write database entity old value new value concurrency increased allowing transaction read value given transaction ramification allowing particularly distributed system limited communication desirable investigated careful distinction made design decision concerning communication design decision concerning response read/write request two scheme producing control given one scheme system process committed termination system committment made later
1977,system level concurrency control distributed database system,distributed database system one database spread among several site application program move site site access update data need concurrency control portion system responds read write request application program job maintain global consistency distributed database ensuring termination application program prevented phenomenon deadlock assume individual site local concurrency control responds request site communicate concurrency control site application program move site site terminates abortsthis paper present design several distributed concurrency control demonstrates work correctly also investigates implication global consistency distributed database discus phenomenon prevent termination application program
1976,concurrency control database system,concurrency control portion database system concerned deciding action taken response request individual application program read write database interested database system concurrency control performed system level invisible individual user individual application program lock unlock database entity access fact application program written program running system
1974,approximate algorithm traveling salesperson problem,several polynomial time algorithm finding good necessarily optimal tour traveling salesman problem considered nearest neighbor method worst case ratio obtained tour optimal tour shown increase logarithmically number city another method call nearest insertion method worst case ratio shown approach  number city increase also shown n ≥  traveling salesman problem n city tour k-optimal k ≤ n/ ratio respect optimal 
1970,property deterministic top-down grammar,class context-free grammar deterministically parsed top manner fixed amount look-ahead investigated grammar called grammar k amount look-ahead defined procedure given determining context-free grammar given value k procedure given eliminating ε-rules grammar cost increasing k  exist case increase inevitable procedure given obtaining deterministic push-down machine recognize given grammar shown equivalence problem decidable grammar additional property also given
1969,property grammar table machine,method given generalizing context free grammar include infinite terminal set new grammar many property context free grammar  yet treating identifier separate terminal symbol grammar enough power describe syntactic semantic constraint declaration structure variable label algol-
1969,automata-based computational complexity,automaton theory study abstract computing device organization structure computational power thus automaton theory necessarily linked part mathematics concerned “constructability” go study constructability investigating variety abstract computing device perform construction relating device algorithm execute characterizing simplicity operationan important goal automaton theory understand computational process relation various class problem theory must go beyond notion computability include measure difficulty computation difficulty related organization machine performs computationtwo natural measure computational difficulty computation time amount memory required perform computation given computing device measure yield rich computational complexity structure computable function variety  established complexity class ordering dependence organization computing device interesting application memory-limited computation achieved study context-free context-sensitive language several infinite hierarchy complexity class language obtained
1969,table machine simulation,pushdown table machine simulated computer time n log log n n number table machine operation finite state table machine simulated linear time
1969,property deterministic top grammar,class context free grammar deterministically parsed top manner fixed amount look-ahead investigated grammar called grammar k amount look-ahead first defined procedure given determining context free grammar given value k shown &egr-rules eliminated grammar cost increasing value k one description given canonical pushdown machine recognizing language shown value k language language shown equivalence problem decidable grammar additional property also given
1968,syntax-directed transduction,transduction mapping one set sequence another syntax-directed transduction particular type transduction defined grammar context-free language meant model part translation process used many compiler transduction considered automaton theory viewpoint specifying input-output relation machine special consideration given machine called translator transduce recognize particular special condition investigated syntax-directed translation performed  pushdown machine addition time bound translation turing machine derived
1967,regularity test pushdown machine,possible test deterministic pushdown machine determine language recognizes regular
1966,two-tape simulation multitape turing machine,long known increasing number tape used turing machine provide ability compute new function hand use extra tape make possible speed computation certain function known square factor sometimes required one-tape machine behave two-tape machine square factor always sufficient purpose paper show given function requires computation time k-tape realization requires computation time log two-tape realization proof fact constructive given k-tape machine shown design equivalent two-tape machine operates within stated time bound addition interesting right trade-off relation number tape speed computation used diagonalization argument show u two time function inf log ÷ u =  exists function computed within time bound u within time bound
1966,syntax directed transduction,transduction mapping one set sequence another syntax directed transduction particular type transduction defined grammar context free language meant model part translation process used many compiler transduction considered automaton theory viewpoint specifying input-output relation machine close relationship subclass transduction simple syntax directed transduction push-down machine relationship investigated detail condition transduction performed push-down machine obtained addition time bound transduction turing machine derived
1965,hierarchy memory limited computation,paper investigates computational complexity binary sequence measured rapidity generation multitape turing machine translational method escape limitation earlier approach lead refinement established hierarchy previous complexity class shown posse certain translational property related hierarchy complexity class monotonic function examined
1965,memory bound recognition context-free context-sensitive language,paper investigates computational complexity binary sequence measured rapidity generation multitape turing machine translational method escape limitation earlier approach lead refinement established hierarchy previous complexity class shown posse certain translational property related hierarchy complexity class monotonic function examined
1964,pair algebra application automaton theory,n/a
1964,computational complexity recursive sequence,paper investigate number function sequence classified according computational complexity computational complexity measured fast number function computed multitape computer  shown mean measure computational complexity number function submitted rigorous mathematical study number  obtained
1964,application pair algebra automaton theory,paper define discus generalization partition pair sequential machine object generalization suggest unified approach problem information flow machine structure
1963,regularity preserving modification regular expression,paper concerned problem determining whether set sequence r obtained given rule regular set sequence r regular set number problem solved paper basic technique used easy apply problem type technique yield explicit construction sequential machine recognizes sequence r r regular setamong thing shown  derivative regular set r respect set sequence w regular set although regular expression designating set cannot general computed  set sequence obtained regular set r removing “arbitrary halves” sequence r set removed “halves” regular set  set sequence obtained regular set r making k change consecutive digit sequence r regular  set sequence concatenated one one way sequence r regular
1963,study feedback error sequential machine,object paper study feedback sequential machine classify  analyze error arise state transition machine establish relation feedback error shown previously developed algebraic method supply necessary tool rigorous basis theory relate new  previously obtained  structure sequential machine example work yield necessary method detect existence decomposition machine component machine ``serious error computation occur isolated component machine lead possibility imposing selectively different reliability condition component machine achieve high over-all reliability realization
1962,danger state reduction sequential machine,paper investigate negative effect state reduction realization sequential machine shown state reduction destroy realization given sequential machine set smaller machine thus lead sequential machine harder realizeto understand reason state reduction carried several  obtained describe change structure sequential machine state reduction seen undesirable effect state reduction closely associated failure certain distributive law hold partition used state reduction partition used realization unreduced machine
1961,state assignment problem sequential machine ii,object paper find state assignment internal state sequential machine logical equation representing machine relatively simple done finding assignment computation particular state variable depends previous value small subset variable chief tool concept partition pair describes  information going resulting evaluation state variable necessary sufficient condition existence assignment reduced dependence found term pair algebraic property worked handled generated shown method also used find input output assignment reduced dependence case ``dont care condition considered theory seen apply except failure algebraic property make weaker
