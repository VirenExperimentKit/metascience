2007,high performance processor chip,development last  year single-chip computer striking development followed detail may heard talk started  desktop computer first outperformed powerful minicomputer market namely vax  desktop computer question workstation based processor chip developed marketed mips computer company professor john hennessy stanford university leading light subsequent development rapid led demise minicomputer used know love
2006,remember eniac,paper describes experience author regarding eniac eniac indeed great size team leadership presper eckert began realize taking improved approach much powerful computer-one-tenth size eniac-could built everyone know led edvac report long evolution modern computer
2003,biography,bernard cohen born  march  died  june  home waltham massachusetts usa played central role establishment history computing topic serious academic study even contribution history physical science broad fundamental obituary new york time made reference computing cohen best known author classic work isaac newton ben franklin rigorous yet readable popularizer history science birth new physic  revolution science  lifelong teacher brought gift continuing education class cruise-ship passenger undergraduate mentor generation eminent historian wrote  book  article spent adult life harvard entering  freshman staying graduate education teaching long official retirement life work reviewed
2001,memory gap future high performance memory,n/a
2001,high performance memory system,n/a
2000,introduction babbages analytical engine plan 28 28a-the programmer interface,n/a
1998,revisionist account early language development,author discus practicality fortran elegance algol defined fault line running programming language study beginning bridge considers algol block structure alternative structure
1997,arithmetic edsac maurice v,electronic delay storage automatic calculator  serial binary computer ultrasonic delay memory designed built university cambridge england work project started end  machine began work may  paper describes programmer handled fixed point arithmetic emphasizes merit double length accumulator
1997,collapsed lan solution bandwidth problem,n/a
1997,impediment technological advancement imposed law physic,n/a
1996,computer - part 2, delivered turing lecture computer  computer field well way assuming modem form progress made high level language  operating system  crt display  referred topic lecture one feature missing yet computer networking although air three year elapse arpanet came operation
1996,arithmetic edsac,edsac serial binary computer ultrasonic delay memory designed built university cambridge england work project started end  machine began work may  paper describes programmer handled  arithmetic emphasizes merit double length accumulator basic strategy underlying edsac project first build machine learn use  two phase building using equal importance quite sure working machine would much would learn could exploit effectively architecturally machine simple one frill hand architecture cut bone machine would uncomfortable use attempt exploit fully technology available attempt optimize implementation went ithout saying edsac would fixedpoint machine floating point relay machine built merit floating point operation fully recognized however would long time electronic engineer would feel sufficiently confident vacuum tube technology attempt design floating point machine
1995,memory wall cmos end-point,n/a
1994,operating system changing world,n/a
1994,edsac origin design decision,n/a
1993,light amplifier soliton,n/a
1993,fortran algol object-oriented language,n/a
1992,edsac 2,principal hardware feature edsac  developed cambridge university mathematical laboratory described edsac  came operation early  first computer microprogrammed control unit established viability microprogramming basis computer design mechanical level organization edsac  packaged bit-sliced manner interchangeable plug-in unit method packaging well matched vacuum tube technology period expected advantage arising replication unit fully realized< >
1992,charles babbage - great uncle computing,n/a
1992,long-term future operating system,n/a
1991,babbages expectation engine,babbages expectation difference engine young enthusiast although failed complete version engine independent implementation idea carried georg edvard scheutz two scheutz engine built put work one registrar-generals office london one dudley observatory albany n performed intended failed revolutionize making mathematical table babbage hoped would babbage year old wrote publish description analytical engine showed vision verging genius judgment design utility analytical engine sound judgment matter concerned difference engine weak study g bromley based examination notebook brought remarkable achievement would call microprogram level also insight eluded user level failure publish may never arrived regarded satisfactory system programming user level
1991,pray mr babbage-a character study dramatic form,babbage noted technical belatedly recognized triumph computational technology personality subject scrutiny several author towards end life said wished could exchange remainder life three day future play provides u opportunity step back day see man separate  machine could grant wish
1991,software programmer,engineering could exist without mathematics experimental science mathematics deal pure thought experimental science concerned law nature within framework may said aim engineering secure control nature branch engineering dependence clear example would heat engine without thermodynamics radio antenna design without electromagnetic theory communication without fourier analysis long accepted training engineer include serious study mathematics relevant science whatever use may subsequently make learning
1991,revisiting computer security business world,first column  discussed computer security business world remarked whereas military always attached great importance security business manager regarded yet another demand budget required convincing importance result military made advance research computer security long time evolved well-developed doctrine
1991,could predicted,everyone know computer industry passing period great change speaking recently senior executive one large company vigorously working meet developing situation question posed “could predicted”
1990,computer security business world,n/a
1990,network email fax,n/a
1990,bandwidth famine,number year ago visited young successful computer company given tour facility one director passed office people working computer terminal told constituted account department little came software department people also using terminal “now” said host “i show hardware department” surprise instead oscilloscope waveform analyzer expected find saw computer terminal sign timestoday designer printed circuit board intended plugged pc great variety software tool choose program layout routing program checking design rule followed correctly logic simulator checking design functionally correct elaborate simulator checking timing tool make possible produce working prototype without performing experimental work laboratory benchin dark age electronics debugging circuit carried using experimental version made screwing component piece wood connecting behavior circuit checked using oscilloscope experimental version known breadboard someone compared board bread sliced wooden board obsolete year term survived modern version breadboard  wire-wrapped prototype however costly time money effort spent advance physical design final product moreover certain respect particularly regard electrical interference cross talk wire-wrapped version may give misleading information
1990,software,n/a
1990,rise vlsi processor,around  intel discovered could put  transistors—or perhaps more—on single nmos chip retrospect may said mark beginning large-scale integration  event long heralded seemingly slow come time went almost unnoticed computer industry partly  transistor fell far short needed put processor chip also industry busy exploiting medium-scale integration  logic family known ttl based bipolar transistor wide range part containing logical elements—typically two flip-flop  gate various combinations—ttl highly successful fast versatile established new standard cost effectiveness reliability indeed improved form better process technology ttl still widely used  nmos seemed step backward far speed concernedintel however find customer new process company interested pocket calculator chip intel able show programmable device would preferable economic ground special-purpose device outcome chip later put market intel  steady progress continued led development april  came intel  comprised  transistor april  came   transistor  basis altar  people regard ancestor modern personal computer offered form kit january  semiconductor manufacturer entered field motorola introduced  mo technology inc introduced microcomputer great success personal computer market grew alongside older industry largely disconnected minicomputer based ttl faster microcomputer instruction set design proprietary software manufacturer minicomputer felt secure well-established market mid-s began come term idea one day might find basing product microprocessor taken catalog semiconductor manufacturer whose instruction set control even le prepared idea personal computer enhanced form known workstation would eventually come challenge traditional minicomputer happened—a minicomputer become nothing workstation larger box provided wider range peripheral communication equipmentas time passed number cmos transistor put single chip increased steadily dramatically primarily improvement process technology enabled semiconductor manufacturer make transistor smaller also helped fact chip tended become larger consequence law physic scaling transistor size make operate faster result processor steadily increased speed would possible however take full advantage faster transistor increase number could put chip led reduction total number chip required importance signal propagation time need reduce transistor become faster take much le time send signal one part chip another part send signal one chip anotherthe progress made last three four year well illustrated comparing mips r processor developed  two-micron technology intel developed  former based risc processor take half available space would left enough space small amount cache memory instead designer included cache control circuit off-chip instruction data cache remaining space amounting one-third whole put good use accommodate memory management unit  translation look aside buffer  generous proportion stage evolution processor design importance risc philosophy making processor small appreciated processor power designed along pre-risc line would taken entire chip leaving space anything elsewhen intel processor developed three year later become possible accommodate chip unit mentioned also two caches—one data one instructions—and highly parallel floating point coprocessor possible silicon area greater factor slightly  amount space occupied transistor le factor  gave five-fold effective increase space available space occupied basic risc processor  whole compared  r  used floating point coprocessor  memory management bus control left  used cache memorythere one million transistor i—that  time many r  time many figure would imply much additional space used memory memory dense transistor still equivalent space silicon becomes available designer primarily interested high-speed operation probably use greater part memory perhaps even providing two level cache chip cmos microprocessor pushed used regarded top end minicomputer range doubt go transistor size reducedbipolar transistor followed cmos transistor becoming smaller although lag mainly intrinsically complex nature bipolar process also partly great success cmos technology led semiconductor industry concentrate resource bipolar technology always suffer handicap take twice many transistor make gate cmosthe time send signal one place another depends amount power available charge capacitance interconnecting wire capacitance much greater inter-chip wiring on-chip wiring case cmos low-power technology difficult provide enough power drive inter-chip wiring high speed premium placed putting everything chip therefore greatmuch power available bipolar circuit premium nearly great reason possible build multi-chip processor using gate array take full advantage increasingly high speed available bipolar technology presently case fast computer market use multi-chip bipolar processorsnevertheless switching speed become higher become necessary develop interconnect system faster traditional printed circuit board becoming difficult switching speed continue increase consequence bipolar technology approaching point—reached earlier cmos—when advance requires unit processor need communicate high speed shall chip fortunately sight achieving soon possible implement custom bipolar technology single chip processor similar rsuch processor may expected show spectacular increase speed compared multi-chip implementation based similar technology using gate array however becomes possible put even transistor single chip may balance advantage lie cmos take least four time many transistor implement memory cell bipolar cmos since processor especially cmos processor gain greatly performance large amount on-chip memory advantage could well tip balance favor cmosthe advantage would result able put cmos transistor bipolar transistor chip gone unnoticed industry active development proceeding area generic name bicmos bicmos also interest analogue integrated circuitsif bicmos process optimized bipolar transistor would possible high-performance bipolar processor cmos on-chip memory bipolar transistor lower-performance level would still value driving off-chip connection also driving long-distance connection chip itselfa pure bipolar chip million transistor dissipate least  watt probably good deal removing heat present problem far insuperable severe problem encountered supplying power chip distributing without serious voltage drop without incurring unwanted coupling design tool help problem lacking bicmos chip similar size dissipate much le power hand bicmos undoubtedly bring spate problem particularly noise characteristic cmos bipolar circuit differentcmos bipolar bicmos technology fluid state evolution possible make projection may happen short term happen long term matter guess work moreover designing computer exercise system design overall performance depends statistical property program much performance individual component would bold person would attempt firm predictionsand finally challenge gallium arsenide colleague recently corresponded put well described gallium arsenide wankel engine semiconductor industry!
1988,acm sigops european workshop 1988 position paper, personal computer first appeared people said marked end time-sharing happen personal computer sold wide scale new market opened computer industry however serious users-those heavy requirement processor cycle need share programme data colleagues-continued use time-sharing system found new low cost departmental time-sharing system ideal need low cost system owed existence every bit much vlsi personal computer advent powerful personal computers-which became known work stations-users class referred began use instead time-sharing system however user regard work station stand-alone entity service available via local area network essential need file server early perceived first importance soon became apparent work station user needed service traditionally available time-sharing system except processor cycle even exception requires qualification since hunger processor cycle work station owner often glad avail cycle available elsewhere network example usersworkstations time-sharing system user judge computing environment response get command type work station tendency assume response would always better work done work station growing appreciation necessarily case judicious distribution function work station computer elsewhere local network may give improved performance thus concept work station style computing appears user everything done equipment desk whereas fact much may done elsewhere along line approach topic discussed handout proposed workshop availability present time work station various price range acceptance user community give topical importance issue proposed workshop
1984,security management protection - personal approach,security system distinction must drawn security management protection security management described well-known lattice model implemented mean access control algorithm file manager effect erect security fence around user file directory protection simpler capability model suffices addition user file directory system-wide capability index protected security fence procedure make direct use may used part operating systemthe security kernelwhich certified security inspector present time efficient implementation capability-based protection system present difficulty research called
1983,size power speed,author discus role power size determining speed computer
1982,hardware support memory protection capability implementation,paper intended stimulate discussion present state hardware supported capability system interest system grew mid-s since time information published several different version opinion observer software complexity system outweighs advantage gained paper survey situation endeavor set general feature hardware supported capability system posse attempt made identify cause complexity make recommendation removing argument tagging capability discussed attention drawn system semi-tagging previously proposed author
1981,design control unit-reflections reading babbages notebook,babbage published little detailed design control system analytical engine paper author put forward possible reason discus relationship babbages idea revealed unpublished work modern concept
1980,impact wide-band local area communication system distributed computing,work design implementation local area system hold key future large distributed computer installation
1980,cambridge model distributed system,n/a
1980,new hardware capability architecture,existing capability machine cap plessey  programmer recognises two type segment one keep capability one keep data word instruction hardware provides two kind access c-type d-type generally speaking c-type access used capability segment d-type access segment containing data instruction exceptionally highly privileged routine within operating system may d-type capability segment containing capability
1977,beyond today computer,n/a
1976,software engineering structured programming,paper discus requirement programmer working varying environment relation software engineering structured programming program verification
1976,software engineering structured programming abstract,paper discus requirement programmer working varying environment relation software engineering structured programming program verification
1974,domain protection management process,design system process management given computer must take account facility built hardware memory protection problem arising discussed point view cambridge cap system development
1973,dynamic paging,general model paging system given used describe wide variety particular system referred literature model discussed point view control engineering particular reference avoidance instability  distinction drawn different level control system tuned control relationship approach made paper via queueing theory discussed
1973,cambridge multiple-access system retrospect,paper report lesson learned  year operation cambridge multipleaccess system begin summarizing design goal go describe way online offline facility integrated section security access one maintenance updating system scheduling job largely automatic operator receive instruction system experience obtained operation system discussed software managerial point view
1972,preserving integrity data base,usually possible reconstruct original document large data base existence time must possible repair error occurred done copy information data base kept safe place paper discus use purpose periodical dump various form journal important role played data base manager emphasised
1972,associative tabular data structure,attention drawn method implementing data structure core memory mean associative link instead pointer property associative link discussed way may exploited program formal differentiation illustrated section microprogramming support associative search operation involved
1972,associative languageal -1,low-level language manipulating associative tabular data structure described example use program given formal differentiation removal common subexpressions statistic presented program two others amount time spent table searching operation estimate made reduction running time could achieved microprogramming
1972,historical perspective computer architecture,shall attempt paper record personal impression way computer architecture designer objective changed period elapsed since first stored program computer designed  year ago shall concerned generally accepted state art time rather new idea emerging advanced center shall attempt track innovation source assign date convenience presentation reason shall divide period three phase roughly equal duration shall end remark way thinking developed subject memory hierarchy one traced three phase
1972,use writable control memory multiprogramming environment,n/a
1971,slave memory segmentation,pointed computer provided multiple base-limit register slave buffer memory may used reduce time spent address validation relocation well normal purpose reducing memory access time
1969,growth interest microprogramming literature survey,literature surveyed beginning first paper published  time microprogramming proposed primarily mean designing control unit otherwise conventional digital computer although possible use read/write control memory noted survey reveals way interest successively developed following aspect subject stored logic application microprogramming design range computer emulation microprogramming support software read/write control memory bibliography includes  paper
1969,model core space allocation time-sharing system,time-sharing system intended serve number console user simultaneously two related distinct function performed one time slicing allocation burst processor time various active program according suitable algorithm core space allocation arises modern multi-programmed system space core one active program time normally case active program accommodated core must held drum brought core periodically swapping confusion sometimes arisen time slicing swapping since early time-sharing system one active object program resident core time others drum circumstance swapping time slicing go together program core receiving processor time soon cease receive processor time removed core multi-programmed system however space allocation time slicing proceed independently responsibility space allocation algorithm ensure far possible always least one program core ready run time-slicing algorithm responsible dividing available processor time various program core
1968,design multiple-access computer system part 2,previous paper one author discussed hardware software problem facing designer multiple-access computer system present paper carry discussion survey certain area system design present far well understood particular problem communication process multi-computer configuration discussed author offer final solution endeavour set perspective problem must solved highly efficient multiple-access system designed
1968,outer inner syntax programming language,pointed syntax higher level programming language algol may divided two part name outer inner syntax given outer syntax concerned organisation flow control programmer-oriented inner syntax concerned performing operation data held memory computer therefore data-oriented shown case algol possible make clean separation inner outer syntax attention drawn certain practical advantage regarding programming language light
1968,computer,reminiscence early development leading large scale electronic computer show took much longer expected first ambitious fully engineered computer completed prove practical operation comment present computer field ass need future development
1967,design multiple-access computer system,paper contains discussion problem encountered design large-scale multiple-access computer system written largely point view software programmer essential hardware requirement receive attention section paper notably security accorded confidential information protection system unauthorized user interest wider class reader section new problem involved management multiple-access computing centre attention drawn need developing rudiment science computer centre management
1965,list useful,computer long general use solving numerical problem pioneering interest switched use non-numerical work manipulating symbol example compiling study artificial intelligence layout problem etc list-processing breakthrough symbol manipulation since provided flexible way organizing computer memory paper explains expository manner go computer memory list-processing operation performed take example formal differentiation algebraic expression written polish notation
1965,slave memory dynamic storage allocation,use discussed fast core memory say  word slave slower core memory say one million word way practical case effective access time nearer fast memory slow memory
1964,constraint-type statement programming language,proposal made including programming language statement imply relation variable explicit assignment statement compiler set newtonian iteration making use purpose routine formal differentiation
1964,programmer utility filing system,modern trend computer organization provide facility user keep magnetic tape disc file information likely require immediate future includes current program old program likely required data kind pufs system user create edit up-date file information stored magnetic medium form exact image form written paper
1961,proposal improving efficiency algol 60,n/a
1961,data transmission new outlook computer field,paper based talk given british computer society london  november  describes development taking place data transmission likely immense importance user data-processing equipment especially business field
1961,self-repairing computer,n/a
1958,second decade computer development,n/a
