2012,turing computational model,panel presentation discus beauty simplicity turing machine formulation previously elusive concept computability intuitively satisfying explanation power limitation computability also review turing machine model provided simple proof deep  logic including gödel’s incompleteness theorem panel also examine specifi c  computer science infl uenced turing machine model well shaped development computational complexity theory quantum computing discussed relationship classic turing machine model panel also discus alan turing might say inevitable fallibility software
2012,turing machine-inspired computer science result,paper discus turing machine model directly inspired guided development theoretical computer science particular turing machine model ideal creation computational complexity theory grown essential part theoretical computer science found application discipline machine operation count used define time-bounded computation tape square used defined tape memory-bounded computation definition exploration corresponding asymptotic complexity class followed naturally
2003,separation complexity class,computational complexity theory study quantitative law govern computing central topic study classification computational problem amount various computational resource required solution particularly find limit feasible computation computational complexity discovered  beautiful structure natural mathematically robust complexity class give intuitively satisfying classification feasibly near-feasibly computable problem complexity class defined bound computational resource natural complete problem problem class easily reduced also defined naturally noncomputational way expressive power various logical formalism emphasizing natural robust important mathematical object unfortunately notwithstanding considerable effort several decade proof class indeed different consider resolution separation question complexity class one important set open problem theoretical computer science solution separation problem essential deeper understanding nature computing limit feasible computation indirectly limit feasible  reasoning
2002,separation problem descriptional complexity,n/a
2001,computational complexity mathematical proof,paper discus howthe major computational complexity class p np pspace capture different computational property mathematical proof reveal newq uantitative aspect mathematics
1999,observation nature state computer science keynote address,observation computer science two year washington assistant director national science foundation computer information science engineering talk ass state computer science expanding research horizon shaping new “information technology twenty first century“ initiative role theoretical computer science setting
1998,innovation obstacle future computing,n/a
1995,weight computation,one grand challenge computer science understand feasibly computable recursive function theory clarified effectively computable process extended understanding goedel incompleteness  limit power formal mathematical method since computing universal encompasses power mathematics understanding limit feasibly computable could give deeper understanding limit rational intellectual process insight power limit scientific theory search feasibly computable two distinct aspect first determine  much kind computing power available foreseeable future problem determine kind problem solved available computing resource first problem technological assessment existing potential computing technology estimate kind much computing work machine able render problem lead u central question complexity theory intrinsic complexity important class problem wish solve clearly p=np=pspace problem among best known area consideration exponential function seems give crude upper limit feasibly computable may time memory weight requirement grow exponentially computation feasible know computation require exponential amount resource instance problem exponential complexity class require exponential resource even exact solution require exponential resource good approximation solution may indeed problem requires exponential resource clearly feasibly solvable already moderate size instance problem
1995,computing paradigm computational complexity,computational complexity theory study quantitative law govern computing since computing paradigm universal pervasive quantitative law computational complexity apply information processing numerical computation simulation logical reasoning formal theorem proving well process rational reasoningin view search feasibly computable take even deeper significance central problem theoretical computer science search limit feasibly computable search limit scientific theory possibly rational reasoning
1994,nature computer science,n/a
1994,random oracle hypothesis false,random oracle hypothesis attributed bennett gill essentially state relationship complexity class hold almost relativized world must also hold unrelativized case although paper first provide counterexample random oracle hypothesis provide compelling counterexample showing almost oracle ipa ≠ pspacea random oracle hypothesis true would contradict shamirs result ip = pspace fact shown almost oracle co-npa ⫋ ipa  extend multiprover proof system ben-or goldwasser killian wigderson addition paper show random oracle hypothesis sensitive small change definition class ipp similar ip defined surprisingly ipp = pspace result hold oracle world
1994,hausdorff topological dimension kolmogorov complexity real line,investigate kolmogorov complexity real number let k kolmogorov complexity function determine hausdorff dimension topological dimension graph k since dimension different graph kolmogorov complexity function real line form fractal sense mandelbrot also solve open problem razborov using exact bound topological dimension
1994,intellectual terrain around np,paper view p≟np problem symbolizes attempt understand feasibly computable paper shortly review history development gödels  letter asking computational complexity finding proof theorem computational complexity exploration complete problem np pspace  structural complexity recent insight interactive proof
1994,structure complexity computation guided tour complexity class,n/a
1993,broader research agenda theory,n/a
1993,computing future whither computer science engineering,computer science telecommunication board national research council recently released report entitled computing future broader agenda computer science engineering report intended first step developing vision computer science engineering carry discipline st century acknowledging fraying social compact supported scientific research since world war ii pressure academic science major change computer industry report put forward view intellectual boundary cs&e discipline expand discipline continue support traditionally considered “core” computer science engineering also learn embrace rather eschew computing problem arise domain outside traditional core problem domain include science area commercial economic significance broader agenda many benefit cs&e including rich set intellectually challenging problem greater social impact wider variety funding opportunity surprisingly vision field st century generated considerable controversy debate appropriate matter important panel briefly review major judgment priority recommendation report differing perspective report aired
1993,observation nature computer science,paper discus nature computer science science analyzing computer science comparing contrasting science particular compare contrast various aspect computer science physic astronomy mathematics analysis computer science comparison science primarily term ofthe role played experiment theory research paradigm problem area determined change relation interaction science engineering aspect comparing historical development study comparison conclude computer science differs known science deeply viewed new specie among science view justified observing theory experiment computer science play different role follow classic pattern physical science change research paradigm computer science often technology driven demo play role experiment furthermore science engineering aspect deeply interwoven computer science distance concept practical implementation far shorter discipline
1991,space bounded computation review new separation result,paper review key  space bounded complexity class discus central open problem outline prominent proof technique show slightly modified turing machine model low level deterministic nondeterministic space bounded complexity class different furthermore computation model show savitchs theorem immerman-szelepcsényi theorem hold range lg lg n lg n also present change computation model bring clarify importance space constructibility conclude enumerating open problem arise discussion
1991,one-way function nonisomorphism np-complete set,one-way conjecture state existence nonisomorphic np-complete set implies existence one-way function paper give relativized counterexample conjecture constructing relativized world nonisomorphic np-complete set lack one-way function
1990,unique staisfiability randomized reduction,n/a
1990,new development structural complexity theory,paper discus scope goal structural complexity theory describes working hypothesis field summarizes  recent development
1990,robust machine accept easy set,robust machine machine maintains computational property every oracle paper study robustly complementary robustly categorical robustly ∑∗-accepting robustly ∑∗-spanning machine prove robust machine squander powerful nondeterministic oracle access relativizations—relative oracle language property computed pnpa
1990,structural complexity theory recent surprise,paper review impact recent  research paradigm structural complexity theory
1989,cornell commission morris worm,careful examination evidence cornell commission publishes finding detailed report shed new light dispels myth robert morris internet worm
1989,structural complexity column,n/a
1989,boolean hierarchy ii application,boolean hierarchy structural property  pp  explores structure boolean hierarchy closure np respect boolean operation paper us boolean hierarchy tool extend explain three important  structural complexity theory hartmanis immerman sewelson  showed ${{e}} = {{ne}}$ ${{np}} - {{p}}$ contains sparse set paper shown reflects behavior boolean hierarchy ${{e}} = {{ne}}$ sparse set fall alternate level boolean hierarchy  furthermore shown capturable set  banished boolean hierarchy ${{e}} = {{ne}}{{e}} = {{ne}}$ implies ${{bh}} - {{p}}$ capturable set counting class natural candidate complete language level boolean hierarchy author show relativized world counting class complete level boolean hierarchy relatedly work blass gurevich  pp  extended concluded counting class weak relativized world karp lipton  showed np sparse oracle  polynomial hierarchy collapse ${{np}}^{{{np}}} $ author demonstrate cannot much improved relativized world np sparse oracle yet boolean hierarchy infinite thus proof relativizes show np sparse oracle implies polynomial hierarchy equal boolean hierarchythe  paper present new idea technique put previous  np ${{d}}^{{p}} $ richer perspective throughout emphasis structure boolean hierarchy relation common class
1989,complexity real line fractal,author investigate kolmogorov complexity real number determine hausdorff dimension topological dimension graph k kolmogorov complexity function conclude complexity graph fractal< >
1988,sparse oracle separating feasible complexity class,article clarifies oracle separate np p essence changing research paradigm study problem relativized two conflicting way study characterization class oracle achieving specified relativation  type potential yield deeper insight nature relativation problem focus attention new interesting class languagesa complete transparent characterization oracle separate np p would resolve long-standing p = np question settle central case fully characterize sparse oracle separating np p world p = np separating oracle exactly non-self-printable set equivalently set high self-referential kolmogorov complexity prove related  co-np pspace
1988,boolean hierarchy structural property,paper study complexity set formed boolean operation  np set set accepted tree hardware np predicate leaf together form boolean hierarchywe present many  structure boolean hierarchy separation immunity  natural complete language structural asymmetry complementary classeswe show relativized world boolean hierarchy infinite every k relativized world boolean hierarchy extends exactly k level prove natural language variation vertex cover complete various level boolean hierarchy show following structural asymmetry though set boolean hierarchy ${{d}}^{{p}} $-immune relativized world boolean hierarchy contains ${{cod}}^{{p}} $-immune setsthus paper explores structural property boolean hierarchy companion paper  appear us boolean hierarchy extend known  small circuit  sparse set np-p  counting class  pp 
1988,complexity class without machine complete language,paper develops technique studying complexity class covered known recursive enumeration machine counting class probabilistic class intersection class often lack enumeration concentrating counting class show relativizations upa complete language relativizations pb≠upb≠npb upb complete language among  show complete language exists set r p boolean formula one satisfying assignment sat∩r complete p ≠ exists set p boolean formula one satisfying assignment ∩ sat p p ≠ ∩ coup exists set p uniquely satisfiable boolean formula polynomial-time machine compute solution formula swe suggest wide applicability technique counting probabilistic class using examine probabilistic class bpp relativized word bppa complete language bpp complete language complete language form b ∩ majority where¦is true least half assignments} canonical pp-complete set
1987,structural complexity column sparse complete set np optimal collpase polynomial hierarchy,n/a
1987,one-way function robustness non-isomorphism np-complete set,paper  give relativized counterexample conjectured connection existence one-way function existence non-isomorphic np-complete set  establishes relativized world np-complete set non-isomorphic strong sense  prof robust machine squander powerful nondeterministic oracle access relativizations  resolve open question  extends knowledge non-isomorphic np-complete set  sharing proof technique   enriches nascent theory robustness present consequence limited combinatorial control machine
1987,observation np complete set,paper summarize extend recent  property np complete set related  structure feasible computation
1986,containment separation complete set immunity complexity class,n/a
1985,solvable problem conflicting relativizations,n/a
1985,sparse set np-p exptime versus nexptime,paper investigates structural property set np-p show computational difficulty lower density set np depends explicitly relation higher deterministic nondeterministic time-bounded complexity class paper exploit recently discovered upward separation method show example exist sparse set np-p exptime ≠ nexptime addition paper us relativization technique determine logical possibility limitation proof technique exhibit one first natural structural difference relativized np conp
1985,independence result context-free language lower bound,show axiomatizable sound formal system f exist instance natural problem context-free language lower bound computation p versus np provable f recursive representation problem previous independence  computer science proven specific representation problem exploiting ‘opaqueness’ turing machine name  rely complexity logical structure problem yield independence  depend representation problem show example exists nonregular context-free language l cf-grammar g l = l provable f “l regular” also show among  p np exists recursive oracle npa ≠ pa fact provable f recursive representation athe difference provable f well illustrated question polynomial time isomorphism  np-complete set show every np-complete set l representation l nondeterministic polynomial time machine prove l np-complete furthermore l p-isomorphic sat also provable f representation l hand exist np-complete set p-isomorphic sat exists np-complete set l independent representation proof f l p-isomorphic sat
1985,complete problem np$\cap$conp,known whether complete language exist np∩conp sipser shown relativizations np∩conp ≤ p -complete language paper show np∩conp ≤ p -complete language ≤ p -complete language furthermore show complete language l exists np∩conp np∩conp≠np reduction l ε np∩conp cannot effectively computed nt extend relativization  exhibiting oracle e pe≠npe∩conpe≠npe exist complete language intersection oracle reduction complete language effectively computed complementary pair machine  l=ln¯¯¯¯¯¯¯¯¯¯¯¯¯l hand also exist oracle f pf≠npf∩conpf≠npf intersection complete language reduction complete language cannot effectively computable complementary pair machine case reduction computed fromntnjproofthatln=ln¯¯¯¯¯¯¯¯¯¯¯¯¯=l¯
1984,non-isomorphic np complete set,n/a
1984,computation time np set different density,paper study computational complexity set different density np show deterministic computation time set np depend density collapse partial collapse corresponding higher nondeterministic deterministic time bounded complexity class show also np set different density exist complete set corresponding density polynomial time turing reduction finally show  interpreted  complexity theorem proving proof presentation axiomatized mathematical system interpretation relates fundamental question complexity intellectual tool basic structural problem p np conp pspace discussed paper
1983,sparse set np - p,main result note show exists sparse set np p exptime≠nexptime several  derived complexity sparse set np–p interpretation meaning  given term complexity solving ‘individual instances’ problem np–p
1983,gödel speed-up succinctness language representation,note discus similarity difference gödels result non-recursive shortening proof formal system additional axiom corresponding  succinctness different representation language
1983,generalized kolmogorov complexity structure feasible computation preliminary report,paper define generalized two-parameter kolmogorov complexity finite string measure much fast string compressed show string complexity measure efficient tool study computational complexity advantage approach classifies string random random measure amount randomness detectable given time permit study computation change amount randomness finite string thus establish direct link computational complexity generalized kolmogorov complexity string approach give new viewpoint computational complexity theory yield natural formulation new problem yield new  structure feasible computation
1982,note natural complete set gödel numbering,creative set complete recursively enumerable set play important role logic mathematics known recursively isomorphic therefore one hand complete set viewed equivalent hand intuitively perceive complete set ‘natural simpler’ others note try capture intuitive concept precisely defining complete set natural recursively enumerable set reduced computationally simple reduction show natural complete set isomorphic type computationally simple mapping idea applied define natural gödel numbering using natural gödel numbering show natural creative set coincide natural complete set
1981,observation development theoretical computer science,paper give personal account early development automaton theory initiation research computational complexity theory although account subjective deal primarily research area direct interest author discus underlying belief philosophy guided research well intellectual environment idea contact influenced attempt also made draw general computer science research discus nature theoretical computer science
1981,language simultaneously complete one-way two-way log-tape automaton,paper study language accepted nondeterministic $ n$-tape automaton scan input relate computational power two-way $ n$-tape automaton show one-way $ n$-tape automaton nondeterministic model  computationally much powerful deterministic model  one-way $ n$-tape reduction exist natural complete language automaton complete language cannot sparse furthermore show language complete nondeterministic one-way $ n$-tape automaton  also complete computationally powerful nondeterministic two-way $ n$-tape automaton  two-way $ n$-tape reduction therefore bound $t$ $t   n$ deterministic nondeterministic $t$-tape bounded computation collapse iff nondeterministic one-way $ n$-tape computation carried two-way deterministic log n-tape automaton
1980,succinctness different representation language,purpose paper give simple new proof interesting recent  relative succinctness different representation regular deterministic unambiguous context-free language derive new  relative succinctness representation change representation contain formal proof language generated desired subclass language
1980,eassay research sparse np complete set,purpose paper review origin motivation conjecture sparse np complete set exist  describe development idea technique led recent solution conjecture
1979,relation diagonalization proof system complexity gap,paper study diagonal process time bounded computation one-tape turing machine diagonalizing machine exist formal proof operate given time bound replaces traditional “clock” resource bounded diagonalization formal proof running time establishes close relation property proof system existence sharp time bound one-tape turing machine complexity class diagonalization method also show gap theorem resource bounded computation hold complexity class differ corresponding provable complexity class furthermore show exist recursive time bound class language formally prove existence turing machine accept time differs class language accepted turing machine prove formally run time also investigate corresponding problem tape bound computation discus difference time tapebounded computation
1979,succinctness verifiability determinism representation polynomial-time language,several representation p class deterministic polynomial time acceptable language compared respect succinctness shown requirement polynomial running time verifiability running time verifiability accepting set p cause difference succinctness recursively bounded relating succinctness nondeterminism shown p ≠ np relative succinctness representing language p deterministic nondeterministic clocked polynomial time machine recursively bounded question posed concerning implication p = np respect translatability succinctness pair deterministic nondeterministic representation p
1979,succintness different representation language,purpose paper give simple new proof interesting recent  relative succinctness different representation regular deterministic unambiguous context-free language derive new  relative succinctness representation change representation contain formal proof language generated desired subclass language
1979,relative succinctness representation language separation complexity class,paper study relative succinctness different representation deterministic polynomial time language investigate cannot formally verified representation also show relative succinctness different representation language directly related separation corresponding complexity class example ptime ≠ nptime relative succinctness representing language ptime deterministic nondeterministic clocked polynomial time machine recursively bounded happens relative succinctness representation linearly boundedfurthermore discus problem approximating recognition complete language nptime deterministic polynomial time machine accept finite initial segment language conclude discussing relative succinctness optimal near-optimal program nature family minimal machine different representation
1978,polynomial time isomorphism new complete set,note show recently discovered np complete set arising number theory ptape complete set arising game theory extape complete set arising algebraic word problem polynomial time isomorphic previously known complete set corresponding class
1978,log-tape isomorphism complete set,paper study log n-tape computable reduction set investigate condition log n-tape reduction set extended log n-tape computable isomorphism set application  obtain easy check necessary sufficient condition set complete log n-tape reduction nl csl p np ptape etc log n-tape isomorphic previously known complete set respective class matter fact “known” complete set nl csl p np ptape etc easily seen respectively log n-tape isomorphic  strengthen extend substantially previously known  polynomial time computable reduction isomorphism np ptape complete set furthermore show set complete csl ptape etc must dense therefore example cannot single letter alphabet
1978,one-way log-tape reduction,one-way log-tape  reduction mapping defined log-tape turing machine whose read head input move right -l reduction provide refined tool studying feasible complexity class p-time  log-tape  reduction although -l computation provably weaker feasible class l nl p np known complete set class complete -l reduction however using known technique counting argument recursion theory show certain log-tape reduction cannot -l construct set complete log-tape reduction -l reduction
1977,isomorphism density np complete set,$np$ complete set isomorphic deterministic polynomial time mapping  $p  np$ ptape complete set p-isomorphic $p  {{ptape}}$ show $np$ complete set known  indeed p-isomorphic known ptape complete set show spite radically different origin attempted simplification set known $np$ complete set identical simple isomorphic coding computable deterministic polynomial timefurthermore $np$ complete set p-isomorphic must similar density example language single letter alphabet $np$ complete sparse language arbitrary alphabet $np$ complete show complete set exptime exptape cannot sparse therefore cannot single letter alphabet similarly show hardest context-sensitive language cannot sparse also relate existence sparse complete set existence simple combinatorial circuit corresponding truncated recognition problem language
1977,relation diagonalization proof system complexity gap preliminary version,paper study diagonal process time-bounded computation one-tape turing machine diagonalizing machine exist formal proof operate given time bound replaces traditional “clock” resource bounded diagonalization formal proof running time establishes close relation property proof system existence sharp time bound one-tape turing machine complexity class furthermore diagonalization method show gap theorem resource bounded computation hold complexity class consisting language accepted turing machine formally proven run required time bound
1977,polynomial time isomorphism complete set,note show recently discovered np complete set arising number theory ptape complete set arising game theory exptape complete set arising algebraic word problem polynomial time isomorphic previously known complete set corresponding category
1976,structure feasible computation,theory computational complexity study quantitative aspect computing active area computer science research year time computational complexity theory developed rapidly become principal part theoretical computer science one active research area computer science development computational complexity theory divided roughly two part first phase development established general property specific computational measure computation time memory used provided elegant axiomatic approach systematic investigation property common computational complexity measure purpose chapter give overview development study feasible computation give insight recent  well appreciation unity structure emerged area research achieve goal chapter treat selected set topic illustrate major idea show unity emerging understanding emphasize essential open problem
1976,effective speed-up long proof trivial theorem formal theory,note give simple proof show many interesting formal mathematical theory axiomatizable well decidable one every given formalization effectively find infinite subset trivially true theorem require long proof given formalism hardest theorem theory thus showing theory every formalism doomed blind triviality infinite set theorem found effectively furthermore follows  constructable tape time bound exist set whose recognition effectively speeded infinite subset set appear naturally thus showing many concrete problem every algorithm effectively sped-up infinite subset
1976,tape bound single letter alphabet language processing,paper show tape bounded complexity class language single letter alphabet  closed complementation use  show mean diagonalization exists infinite hierarchy tape bounded complexity class sla language log log n log n tape bound hand show power diagonalization sla input le log n tape limited proving every infinite sla language accepted using le log n tape contains infinite regular subset result immediately follows set prime unary notation p requires exactly log n tape recognition every infinite subset p requires least log n tape
1975,computational complexity formal translation,purpose paper define mathematical model study quantitative problem translation universal language investigate problem  derived paper deal efficiency translated algorithm optimality translation complexity translation process different language
1975,simple godel numbering translation,paper consider class goedel numbering viewed simple model programming language goedel numbering translated computationally simple mapping several class goedel numbering defined property investigated example one class studied class goedel numbering goedel numbering translated finite automaton mapping also compare class goedel numbering class optimal goedel numbering show translation optimal goedel numbering computationally arbitrarily complex thus indicating computer science point view optimal goedel numbering undesirable property
1975,note tape bound sla language processing,note show tape bounded complexity class language single letter alphabet closed complementation use result show exists infinite hierarchy tape bounded complexity class sla language log n log log n tape bound also show every infinite sla language recognizable le log n tape infinitely many different regular subset therefore set prime unary notation p requires exactly log n tape recognition every infinite subset p requires least log n tape
1974,power multiplication random access machine,consider random access machine multiplication operation added capability computing logical operation register considered integer vector bit arithmetic boolean operation may used register prove counting one operation unit time considering machine acceptor deterministic nondeterministic polynomial time acceptable language exactly language recognizable polynomial tape turing machine observe measure machine without multiplication polynomially related turing machine time-thus added computational power due multiplication random access machine equivalent computational power polynomially tape-bounded turing machine computation polynomially time-bounded computation therefore formulation harder multiply add ptape = ptime turing machine also discus instruction set random access machine computational power
1974,structure feasible computation,last four year research lower level computational complexity yielded rich set interesting  revealed deep unexpected connection various problem thus brought new unity area computer science work also yielded new technique insight likely application identified central problem quantitative theory computing purpose paper give reader overview development insight  application well appreciation unity structure emerged area research
1974,simple goedel numbering translation,paper consider class goedel numbering viewed simple model programming language goedel numbering translated computationally simple mapping several class goedel numbering defined property investigated example one class studied class goedel numbering goedel numbering translated finite automatic mapping also compare class goedel numbering class optimal goedel numbering show translation optimal goedel numbering computationally arbitrarily complex thus indicating computer science point view optimal goedel numbering undesirable property
1973,group theoretic characterization linear permutation automaton,paper characterize permutation automaton linearly realized field gf term group generated automaton group theoretic characterization linear permutation automaton derive among  complete characterization homomorphism linear automaton yield linearly realizable image automaton well several  structure linear automaton
1973,problem finding natural computational complexity measure,develop abstract theory deal quantitative aspect computing need deeper understanding define ``natural computational complexity measure axiomatically end paper summarizess principal property hold natural complexity measure measure proposed desirable property natural measure paper discus nature property study interrelation possible value towards defining natural computational complexity measure number open problem discussed direction research suggested
1972,non-determinancy simple computing device,summarythis paper study one-tape turing machine k read-only head restricted original input main result show set accepted -head non-deterministic turing machine accepted deterministic turing machine read-only head deterministic non-deterministic context-sensitive language identical several related  derived tantalizing open problem discussed
1971,overview theory computational complexity,purpose paper outline theory computational complexity emerged comprehensive theory last decade theory concerned quantitative aspect computation central theme measuring difficulty computing function paper concentrate study computational complexity measure defined computable function make attempt survey whole field exhaustively present material historical order rather present basic concept  technique computational complexity new point view idea easily understood fit together coherent whole
1971,use list study undecidable problem automaton theory,many problem automaton theory unsolvable classified intodegrees unsolvability relative difficulty note natural reference set presented belong complete degree level arithmetic hierarchy also question regarding list recursively enumerable set considered  resolve apparent peculiarity provide simple method determining degree unsolvability several well-known problem permit easy construction natural problem high degree unsolvability
1971,computational complexity random access stored program machine,paper explore computational complexity measure defined running time program random access stored program machine rasp purpose work study realistic complexity measure provide setting technique explore different computer organization interesting  paper obtained argument size computed function example show  exist arbitrarily complex function optimal rasp program whose running time cannot improved multiplicative constant show furthermore optimal program cannot fixed procedure determine difference computation speed fixed procedure self-modifying program technique used compare computation speed machine without built-in multiplication conclude paper look machine associative memory distributed logic machine
1971,complexity formal translation speed-up result,purpose paper give model study quantitative problem formal translation one programming language another well derive initial  speed program produced translation paper also contains new speed-up result show computational complexity measure exist function arbitrarily large speed-ups size speed-up program must grow non-computably fast
1970,make language theory problem undecidable,theory automaton formal language undecidability various property studied specific class language abstract essence various proof undecidability find wide class property general condition family language proof undecidability hold paper also illustrates manner degree undecidability property change consider complicated family language
1970,note one-way two-way automaton,purpose note show exist non-regular language whose memory requirement recognition one-way two-way automaton differ double exponential difference cannot exceeded
1970,r70-1 note computing time recognition context- free language single-tape turing machine,although considerable progress made understanding algebraic property context-free language quantitative aspect recognition parsing context- free language still far well understood shown kasami younger every context-free language exists multitape turing machine recognizes language us n  operation process input word length n one-tape turing machine hartmanis showed using younger algorithm every context-free language recognized n  operation result improved paper review shown careful implementation toriikasamiozaki algorithm one-tape turing machine every context-free language recognized n  operation like n  operation multitape result known good time bound hand author able show paper linear context-free language n  least-upper time bound recognition one-tape turing machine done showing every linear language n-recognizable recalling linear language whose recognition requires n operation one-tape machine
1969,automata-based computational complexity,automaton theory study abstract computing device organization structure computational power thus automaton theory necessarily linked part mathematics concerned constructability go study constructability investigating variety abstract computing device perform construction relating device algorithm execute characterizing simplicity operationan important goal automaton theory understand computational process relation various class problem theory must go beyond notion computability include measure difficulty computation difficulty related organization machine performs computationtwo natural measure computational difficulty computation time amount memory required perform computation given computing device measure yield rich computational complexity structure computable function variety  established complexity class ordering dependence organization computing device interesting application memory-limited computation achieved study context-free context-sensitive language several infinite hierarchy complexity class language obtained
1969,complexity undecidable problem automaton theory,general  hierarchy undecidable problem automaton theory given study described show property set accepted automaton  change decidable undecidable problem computational power automaton increased work also yield unified technique characterize different language large class undecidable problem
1969,two memory bound recognition prime automaton,paper establishes two bound rate growth memory automaton recognize set prime
1968,computational complexity one-tape turing machine computation,quantitative aspect one-tape turing machine computation considered shown instance exists sharp time bound must reached recognition nonregular set sequence shown computation time used characterize complexity recursive set sequence several  obtained classification  applied recognition speed context-free language shown among thing recursively undecidable much time required recognize nonregular context-free language one-tape turing machine several unsolved problem discussed
1968,recognition prime automaton,study problem recognizing set prime automaton presented simple algebraic condition derived show neither set prime infinite subset set prime accepted pushdown finite automatonin view result interesting open problem determine weakest automaton accept set prime shown linearly bounded automaton accept set prime conjectured automaton whose memory grows le rapidly recognize set prime one  show conjecture true cannot proved use argument distribution prime described prime number theorem relation established two classical conjecture number theory minimal rate memory growth automaton recognize set prime
1968,tape-reversal bounded turing machine computation,paper study classification recursive set number tape reversal required recognition two-tape turing machine one-way input tapethis measure yield rich hierarchy tape-reversal limited complexity class property ordering investigated striking difference previously studied complexity measure lie fact speed-up theorem hold slowly growing tape-reversal complexity class difference discussed several relation different complexity measure language established
1968,structure undecidable problem automaton theory,purpose paper gain better understanding structure undecidable problem automaton theory investigating degree unsolvability problem achieved using turing machine oracle define one undecidable problem reduced another establish infinite hierarchy  undecidable problem hierarchy used classify well-known undecidable problem various family automaton formal language study relation problem approach reveals well defined structuring undecidable problem permit systematic study problem relation various family automaton
1968,tape reversal complexity hierarchy,paper study classification recursive set number tape reversal required recognition two-tape turing machine one-way input tapethis measure yield rich hierarchy tape-reversal limited complexity class property ordering investigated striking difference previously studied complexity measure lie fact speed-up theorem hold slowly growing tape-reversal complexity class difference discussed several relation different complexity measure language established
1967,memory requirement context-free language recognition,purpose note show recursively undecidable much tape required turing machine recognize nonregular context-free language
1967,homomorphic image linear sequential machine,paper investigate homomorphism state behavior linear machine characterize homomorphic image  applied characterize nonlinear machine realized larger linear machine
1966,minimal feedback realization sequential machine,note define amount feedback realization sequential machine give simple algorithm compute minimal amount feedback present realization give canonical realization us minimal amount feedback
1965,two test linearity sequential machine,paper describes two test existence linear state assignment binary input sequential machine first test based ``transfer sequence map one stationary state machine onto another stationary state shown minimal transfer sequence machine one read directly linear assignment machine one exists second test us ``ignorance computation mean partition previously developed  sequential machine structure
1965,hierarchy memory limited computation,paper investigates computational complexity binary sequence measured rapidity generation multitape turing machine translational method escape limitation earlier approach lead refinement established hierarchy previous complexity class shown posse certain translational property related hierarchy complexity class monotonic function examined
1965,memory bound recognition context-free context-sensitive language,paper investigates computational complexity binary sequence measured rapidity generation multitape turing machine translational method escape limitation earlier approach lead refinement established hierarchy previous complexity class shown posse certain translational property related hierarchy complexity class monotonic function examined
1964,pair algebra application automaton theory,n/a
1964,computational complexity recursive sequence,paper investigate number function sequence classified according computational complexity computational complexity measured fast number function computed multitape computer  shown mean measure computational complexity number function submitted rigorous mathematical study number  obtained
1964,application pair algebra automaton theory,paper define discus generalization partition pair sequential machine object generalization suggest unified approach problem information flow machine structure
1963,regularity preserving modification regular expression,paper concerned problem determining whether set sequence r obtained given rule regular set sequence r regular set number problem solved paper basic technique used easy apply problem type technique yield explicit construction sequential machine recognizes sequence r r regular setamong thing shown  derivative regular set r respect set sequence w regular set although regular expression designating set cannot general computed  set sequence obtained regular set r removing “arbitrary halves” sequence r set removed “halves” regular set  set sequence obtained regular set r making k change consecutive digit sequence r regular  set sequence concatenated one one way sequence r regular
1963,result structure sequential machine,n/a
1963,study feedback error sequential machine,object paper study feedback sequential machine classify  analyze error arise state transition machine establish relation feedback error shown previously developed algebraic method supply necessary tool rigorous basis theory relate new  previously obtained  structure sequential machine example work yield necessary method detect existence decomposition machine component machine ``serious error computation occur isolated component machine lead possibility imposing selectively different reliability condition component machine achieve high over-all reliability realization
1962,loop-free structure sequential machine,object paper study realization sequential machine several smaller machine basic tool investigation partition substitution property partition pair shown every  realization sequential machine n smaller machine corresponds set n partition substitution property whose product zero partition conversely shown every set n partition corresponds realization given sequential machine n smaller machine natural ordering partition reflected information flow corresponding component machine algebraic operation defined partition corresponding realization govern modification realization finally shown amount information flowing component machine realization studied mean partition pair
1962,danger state reduction sequential machine,paper investigate negative effect state reduction realization sequential machine shown state reduction destroy realization given sequential machine set smaller machine thus lead sequential machine harder realizeto understand reason state reduction carried several  obtained describe change structure sequential machine state reduction seen undesirable effect state reduction closely associated failure certain distributive law hold partition used state reduction partition used realization unreduced machine
1962,maximal autonomous clock sequential machine,sequential machinies contain input-independent part therefore input-inependent machine  input-dependent machine necessary sufficient condition flow table obtained existence autonomous clock sequential machine property machine clock studied
1961,state assignment problem sequential machine,paper problem determining economical state assignment finite-state sequential machine studied fundamental idea study find method selection assignment binary variable describing new state depends variable old state possible general variable assignment dependence reduced yield economical implementation sequential machine assignment dependence reduced main tool used study partition substitution property set state sequential machine shown sequential machine existence assignment reduced dependence closely connected existence partition substitution property set state machine shown determine partition given sequential machine used obtain assignment reduced dependence
1961,state assignment problem sequential machine ii,object paper find state assignment internal state sequential machine logical equation representing machine relatively simple done finding assignment computation particular state variable depends previous value small subset variable chief tool concept partition pair describes  information going resulting evaluation state variable necessary sufficient condition existence assignment reduced dependence found term pair algebraic property worked handled generated shown method also used find input output assignment reduced dependence case ``dont care condition considered theory seen apply except failure algebraic property make weaker
1960,symbolic analysis decomposition information processing machine,paper study problem replacing  complex finite state sequential machine several simpler one operate parallel yield result first part give necessary mathematical   second part apply  derive necessary sufficient condition existence decomposition given machine decomposition exists required simpler machine connected parallel given
1959,application basic inequality entropy,paper part general study efficient information selection storage processing assumed information contained binary time series generated stochastic source main problem determine approximate statistical property information source lower order probability distributionsfirst determined restriction imposed known lower order probability distribution higher order distribution determined estimated study suggests optimal way estimate higher order distributionsin second part entropy change occur going lower higher order probability distribution studied upper lower bound entropy higher order distribution computed term entropy lower order distribution  allow computation “strength” condition imposed higher order distribution induced lower order one one compute importance knowing higher order probability distribution information processing   applied coding problem determine delay required encoding message order achieve prescribed fraction optimal comparison given shannon coding theorem
