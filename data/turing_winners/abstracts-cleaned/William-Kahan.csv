2016,floating-point precision tuning using blame analysis,tremendously useful automated technique tuning precision floating-point program face important scalability challenge present blame analysis novel dynamic approach speed precision tuning blame analysis performs floating-point instruction using different level accuracy operand analysis determines precision operand given precision achieved final result program evaluation ten scientific program show blame analysis successful lowering operand precision executes program analysis particularly useful targeting reduction execution time case analysis need combined search-based tool precimonious experiment show combining blame analysis precimonious lead obtaining better  significant reduction analysis time optimized program execute faster  combined analysis time x faster average x faster precimonious alone
2013,precimonious tuning assistant floating-point precision,given variety numerical error occur floating-point program difficult write test debug one common practice employed developer without advanced  numerical analysis using highest available precision robust degrade program performance significantly paper present precimonious dynamic program analysis tool assist developer tuning precision floating-point program precimonious performs search type floating-point program variable trying lower precision subject accuracy constraint performance goal tool recommends type instantiation us lower precision producing accurate enough answer without causing exception evaluate precimonious several widely used function gnu scientific library two na parallel benchmark three numerical program program analyzed precimonious reduces precision  performance improvement high 
2012,family anadromic numerical method matrix riccati differential equation,matrix riccati differential equation  x = xa +ax xax x = x aij  aij appear frequently throughout applied mathematics science engineering naturally existing conventional runge-kutta method linear multi-step method adapted solve mrdes numerically indeed adapted unconventional numerical method suited time-invariant mrdes time-varying one stiff mrdes existing implicit method preferred explicit one require solving nonlinear system equation  thus pose implementation difficulty also expensive past property mrde preserved symmetry property symmetric mrde many crucial property discarded besides symmetry property proposed method also preserve two important property  bilinear rational dependence initial value generalized inverse relation mrde complementary mrde preserving generalized inverse relation method accurately able integrate mrde whose solution singularity preserving property bilinear dependence initial value method also conserve rank change initial value solution monotonicity property method anadromicmeaning mrde integrated one method t= + integrated backward t=+  using method value t= recovered absence rounding error implies method necessarily even order convergence time-invariant mrdes method even order convergence established time-varying mrdes method order high  established method order  stated detail method semi-implicit sense nonlinear system matrix equation solve linear one unlike pre-existing implicit method given availability high quality code linear matrix equation method easily implemented embedded application software package need robust mrde solver numerical example presented support claim coined anadromic greek root -  oo  anadromous  tried describe numerical method word reflexive  symmetric  reversible turned overused
2012,turing computational model,panel presentation discus beauty simplicity turing machine formulation previously elusive concept computability intuitively satisfying explanation power limitation computability also review turing machine model provided simple proof deep  logic including gödel’s incompleteness theorem panel also examine specifi c  computer science infl uenced turing machine model well shaped development computational complexity theory quantum computing discussed relationship classic turing machine model panel also discus alan turing might say inevitable fallibility software
2006,error bound extra-precise iterative refinement,present design testing algorithm iterative refinement solution linear equation residual computed extra precision algorithm originally proposed  analyzed mean compute accurate solution ill-conditioned linear system however two obstacle prevented adoption standard subroutine library like lapack  standard way access higher precision arithmetic needed compute residual  unclear compute reliable error bound computed solution completion new blas technical forum standard essentially removed first obstacle overcome second obstacle show application iterative refinement used compute error bound norm small cost use compute error bound usual infinity norm componentwise relative error boundwe report extensive test   million matrix dimension     long normwise  condition number computed algorithm le /max{√n}εw computed normwise  error bound  max{ √n} · εw indeed bound true error n matrix dimension εw = - working precision residual computed double precision  word algorithm always computed tiny error negligible extra cost linear system worse conditioned problem  obtained small correct error bound  case
2006,prospectus next lapack scalapack library,new release widely used lapack scalapack numerical linear algebra library planned based on-going user survey  research many people proposing following improvement faster algorithm including better numerical method memory hierarchy optimization parallelism automatic performance tuning accommodate new architecture accurate algorithm including better numerical method use extra precision expanded functionality including updating downdating new eigenproblems etc putting lapack scalapack improved ease use eg via friendlier interface multiple language accomplish goal also relying better software engineering technique contribution collaborator many institution
2005,open question developer numerical software,ieee  standard binary floating-point arithmetic revolutionized portability reliability program use binary floating-point arithmetic floating point almost universally implemented special-purpose hardware tuck small corner cpu chip run hundred mflop gflops range single-stepping today floating-point software debug often turn futile concept nan standing number evolved indefinite seymour crays cdc  ieee  default requires untrapped invalid operation signal raising flag deliver nan result finite infinite would cause worse confusion nan let program retain control unless program programmer directs cancellation upon invalid operation thus program conducting search return realm searched accidental foray beyond boundary whose existence location previously unknown snan differs quiet nan traooing attempt perform arithmetic upon trap-handler must interpret snan
2002,design implementation testing extended mixed precision blas,article describes design rationale c implementation conformance testing subset new standard blas  extended mixed precision blas permitting higher internal precision mixed input/output type precision allows u implement algorithm simpler accurate sometimes faster possible without feature new blas challenging implement test many subroutine existing standard must able ass whether higher precision used internal computation used either input output variable therefore developed automated process generating systematically testing routine methodology applicable language besides c particular algorithm used testing code valuable blas implementors extra precision routine achieve excellent performance---close half machine peak megaflop rate even level  blas data access stride one
2002,computing given rotation reliably efficiently,consider efficient accurate computation given rotation f g positive real number simply amount computing value c = f/√f + g = g/√f + g r = √f + g apparently trivial computation merit closer consideration following three reason first definition c r seem obvious case two nonnegative argument f g enough freedom choice one f g negative zero complex lapack auxiliary routine slartg clartg slargv clargv compute rather different value c r mathematically identical value f g eliminate unnecessary ambiguity blas technical forum chose single consistent definition given rotation justify second computing accurate value c r efficiently possible reliably despite over/underflow surprisingly complicated complex given rotation efficient formula require one real square root one real divide  reliable implementation using working precision number case sun ultra- new implementation slightly faster previous lapack implementation common case   time faster corresponding vendor reference atlas routine also reliable previous code occasionally suffer large inaccuracy due over/underflow real given rotation also improvement speed accuracy though striking third design process led reliable implementation quite systematic could applied design similarly reliable subroutine
1999,symbolic computation divided difference,divided difference enormously useful developing stable accurate numerical formula example program compute f-f might occur integration notoriously inaccurate problem cured approaching computation divided difference formulation paper provides guide divided difference theory practice special eye toward need computer algebra system programmed deal often-messy formula
1997,composition constant raising order unconventional scheme ordinary differential equation,many model physical chemical process give rise ordinary differential equation special structural property go unexploited general-purpose software designed solve numerically wide range differential equation property exploited fully sake better numerical stability accuracy and/or speed differential equation may solved unconventional method short paper publish composition constant obtained author increase efficiency family mostly unconventional method called reflexive
1992,analysis refutation lcas,language compatible arithmetic standard  proposed international standard iso/iec  language compatible arithmetic project jtc  version   drs mary payne brian wichmann earlier version appeared acm signum acm sigplan    following remonstrance sent ansi x-t american committee charge proposalthis proposed language compatible arithmetic standard severely flawed computing world must reject
1990,accurate singular value bidiagonal matrix,computing singular value bidiagonal matrix final phase standard algorithm singular value decomposition general matrix new algorithm computes singular value bidiagonal matrix high relative accuracy independent magnitude presented contrast standard algorithm bidiagonal matrix may compute small singular value relative accuracy numerical experiment show new algorithm comparable speed standard algorithm frequently faster
1985,anomaly ibm acrith package,ibm acrith package numerical software advertised reliable easy use sometimes  must astonish confuse naive user report exhibit surprise instance finite continued fraction easy evaluate two dozen keystroke handheld calculator cause acrith overflow either exponent range  megabyte virtual memory lacking access source code must speculate explain anomaly seem attributable small bug code optimistic claim oversimplification code documentation flaw doctrine underlying code conclude different technique used acrith might accurate yet economical robust perspicuous
1984,proposed radix- word-length-independent standard floating-point arithmetic,besides making proposed ieee  standard available comment article explains overcome implementation problem
1975,problem #9 ellipse problem,problem concern four variable abcd interpreted centre  principal semiaxes ab ellipse  wish know e lie inside unit disk x + ≤  precisely seek set polynomial {pj} j=n property e≤dif pj ≤ known n>  n minimal
1974,pivotal interchange necessary,solving linear system ax = b gaussian elimination usually entail pivotal inter-changes designed inhibit explosive growth intermediate  would otherwise roundoff vitiate calculation interchange motivated numerical desideratum frequently conflict combinatorial desideratum like sparsity shall show two special case interchange well known needed stability namely positive definite diagonally dominant example frequent situation field value lie half-plane containing zero situation associated certain electric network boundary value problem allows least principle estimate number extra guard digit need carried prevent explosive growth blighting  obtained without interchange
1971,survey error analysis,rounding error one kind error easier kind analyze others error uncertainty data important kind easy estimate analyze error analyst currently busiest refractory kind error attributable flaw design computer system hardware software caused primarily misconception kind error
1968,convergence practical qr algorithm,n/a
1965,pracniques remark reducing truncation error,n/a
1964,fortran post-mortem procedure,n/a
1963,algorithm 167 calculation confluent divided difference,n/a
1963,algorithm 169 newton interpolation forward divided difference,n/a
1963,algorithm 168 newton interpolation backward divided difference,n/a
