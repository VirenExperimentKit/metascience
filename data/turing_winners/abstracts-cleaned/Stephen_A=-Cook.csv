2017,uniform integral efficient proof determinant identity,give uniform integral version short propositional proof determinant identity demonstrated gf hrubeš-tzameret  specifically show multiplicativity determinant function integer provable bounded arithmetic theory vnc   first-order theory corresponding complexity class nc   also establishes existence uniform polynomial-size o-depth circuit-frege  proof integer basic determinant identity  give uniform nc  -algorithms homogenizing algebraic circuit balancing algebraic circuit  converting circuit division circuit single division gate-all  definable vnc   also implies nc  -algorithm evaluating algebraic circuit depth
2016,relativizing small complexity class theory,existing definition relativizations nc  l nl preserve inclusionsnc⊆lnl⊆ac start giving first definition preserve l nl define relativizations using wilson’s stack oracle model limit height stack constant  show collapse two class in{actcnclnl}{implies collapse relativizations next exhibit oracle α make ac k  proper hierarchy strengthens clarifies separation relativized theory takeuti  idea circuit whose nested depth oracle gate bounded k cannot compute correctly  composition every oracle function finally develop theory characterize relativizations subclass p modifying theory previously defined second two author function provably total theory iff corresponding relativized class hence oracle separation imply separation relativized theory
2016,exponential lower bound monotone span program,monotone span program linear-algebraic model computation introduced karchmer wigderson   known equivalent linear secret sharing scheme various application complexity theory cryptography lower bound monotone span program difficult obtain use non-monotone operation compute monotone function fact best known lower bound quasipolynomial function  p  fundamental open problem prove exponential lower bound monotone span program size explicit function resolve open problem giving exponential lower bound monotone span program size function monotone p also implies first exponential lower bound linear secret sharing scheme result obtained proving exponential lower bound using razborovs rank method  measure strong enough prove lower bound many monotone model corollary obtain new proof exponential lower bound monotone formula size monotone switching network size first lower bound monotone comparator circuit size function monotone p also obtain new polynomial degree lower bound nullstellensatz refutation using interpolation theorem pudlak sgall  finally obtain quasipolynomial lower bound rank measure st-connectivity function implying tight bound st-connectivity computational model mentioned
2016,lower bound nondeterministic semantic read-once branching program,prove exponential lower bound size semantic read-once -ary nondeterministic branching program prior result best known d-ary branching program |d| >= ^{}
2014,hardness private,kushilevitz  initiated study information-theoretic privacy within context communication complexity unfortunately shown interesting function privately computable  unattainability perfect privacy many function motivated study approximate privacy feigenbaum et al  define notion worst-case well average-case approximate privacy present several interesting upper bound well open problem study article obtain asymptotically tight bound trade-off worst-case average-case approximate privacy protocol communication cost vickrey auctionsfurther relate notion average-case approximate privacy measure based information cost protocol enables u prove exponential lower bound subjective approximate privacy protocol computing intersection function independent communication cost prof conjecture feigenbaum et al 
2014,complexity comparator circuit value problem, subramanian  defined complexity class cc set problem log-space reducible comparator circuit value problem  mayr showed nl ⊆ cc ⊆ p proved addition ccv several problem complete cc including stable marriage problem finding lexicographically first maximal matching bipartite graph although class received much attention since interested cc conjecture incomparable parallel class nc also satisfies nl ⊆ nc ⊆ p note conjecture implies none cc-complete problem efficient polylog time parallel algorithm provide evidence conjecture giving oracle setting relativized cc relativized nc incomparablewe give several alternative definition cc including  class problem computed uniform polynomial-size family comparator circuit supplied copy input negation class problem ac-reducible ccv class problem computed uniform ac circuit axccv gate also give machine model cc corresponds characterization log-space uniform polynomial-size family comparator circuit various characterization show cc robust class technique also show corresponding function class fcc closed composition main technical tool employ universal comparator circuitsother  include simpler proof nl ⊆ cc careful analysis showing lexicographically first maximal matching problem variant cc-complete ac many-one reduction explanation relation gale--shapley algorithm subramanian’s algorithm stable marriagethis article continues previous work cook et al  focused cook-nguyen style uniform proof complexity answering several open question raised article
2013,theory subexponential-size bounded-depth frege proof,paper contribution understanding relationship uniform nonuniform proof complexity latter study length proof various propositional proof system frege bounded-depth frege system former study strength corresponding logical theory vnc v  superpolynomial lower bound length proof propositional proof system family tautology expressing result like pigeonhole principle implies result provable theory associated propositional proof system define new class bounded arithmetic theory n^epsilon-iov^ epsilon <  show correspond complexity class alttimeo uniform class subexponential-size bounded-depth circuit depthsize^o accomplish introduce novel idea using type control amount composition bounded arithmetic theory allows theory capture complexity class weaker closure property closed composition show proof sigma^b_-theorems theory translate subexponential-size bounded-depth frege proof use theory formalize complexity theory result problem uniform nc circuit computed uniform subexponential bounded-depth circuit  prove theory contain variation theory vnc complexity class nc formalize buss proof   boolean formula evaluation problem nc use prove soundness frege system corollary obtain alternative proof  polynomial-size frege proof simulated subexponential-size bounded-depth frege proof  extended theory corresponding nice complexity class inside ntimespace n^o nl achieved essentially formalizing containment ntimespace n^o  alttime epsilon > 
2013,average case lower bound monotone switching network,approximate computation boolean function circuit switching network computation function computed correctly majority input  besides interesting right lower bound approximate computation proved useful many sub area complexity theory cryptography derandomization lower bound approximate computation also known correlation bound average case hardness paper obtain first average case monotone depth lower bound function monotone p tolerate error asymptotically best possible monotone circuit specifically prove average case exponential lower bound size monotone switching network gen function corollary separate monotone nc hierarchy case error -- result previously known exact computation proof extends simplifies fourier analytic technique due potechin developed chan potechin corollary main lower bound prove communication complexity approach monotone depth lower bound naturally generalize average case setting
2012,formal theory linear algebra,introduce two-sorted theory style  complexity class  det whose complete problem include determinant z z respectively describe interpretation soltys linear algebra theory lap arbitrary integral domain new theory result show equivalence standard theorem linear algebra z z proved corresponding theory leaf open interesting question whether theorem proved
2012,complexity proving discrete jordan curve theorem,jordan curve theorem  state simple closed curve divide plane exactly two connected region formalize prove theorem context grid graph different input setting theory bounded arithmetic correspond small complexity class theory v  prof set edge form disjoint cycle divide grid least two region theory v  prof sequence edge form simple closed curve divide grid exactly two region consequence hex tautology st-connectivity tautology polynomial size ac-frege-proofs improves  bus apply stronger proof system tc-frege
2012,pebble branching program tree evaluation,introduce tree evaluation problem show logdcfl  study branching program complexity hope eventually proving superlogarithmic space lower bound input problem rooted balanced d-ary tree height h whose internal node labeled d-ary function  = { k} whose leaf labeled element  node obtains value  equal d-ary function applied value child output value root show standard black pebbling algorithm applied binary tree height h yield deterministic k-way branching program state solving problem prove upper bound tight h =  h =  introduce simple semantic restriction called thrifty k-way branching program solving tree evaluation problem show state bound θ tight h ≥  deterministic thrifty program introduce fractional pebbling tree show yield nondeterministic thrifty program θ state solving boolean problem “determine whether root value ” prove bound tight h =  also prove bound tight unrestricted nondeterministic k-way branching program solving boolean problem h = 
2012,complexity theory operator analysis,propose extension framework discussing computational complexity problem involving uncountably many object real number set function represented approximation key idea use certain class string function name representing object expressive infinite sequence served name prior work formulated complexity restricted setting advantage using string function define size way inspired higher-type complexity theory enables u talk computation string function whose time space bounded polynomially input size giving rise general analogue class p np pspace also define np- pspace-completeness suitable many-one reductionsbecause framework separate machine computation semantics applied problem set interest analysis specify suitable representation  prototype application consider complexity function  real number real set real function example task numerical algorithm solving certain class differential equation naturally viewed operator taking real function real function complexity theory operator previous  stated complex solution reformulate show operator polynomial-space complete
2011,formalizing randomized matching algorithm,using je{r}bek framework probabilistic reasoning formalize correctness two fundamental rnc^ algorithm bipartite perfect matching within theory vpv polytime reasoning first algorithm testing bipartite graph perfect matching based schwartz-zippel lemma polynomial identity testing applied edmonds polynomial graph second algorithm due mulmuley vazirani vazirani finding perfect matching key ingredient algorithm isolating lemma
2011,formal theory complexity class associated stable marriage problem,subramanian defined complexity class cc set problem log-space reducible comparator circuit value problem proved several problem complete cc including stable marriage problem finding lexicographical first maximal matching bipartite graph suggest alternative definition cc based different reducibilities introduce two-sorted theory vcc* based one sharpen simplify subramanians completeness proof two problem formalize vcc*
2009,fractional pebbling thrifty branching program,study branching program complexity { tree evaluation problem} introduced {brcomcsawe} candidate separating  input problem rooted balanced $d$-ary tree height$h$ whose internal node labelled $d$-ary function on$={k}$ whose leaf labelled element $$each node obtains value $$ equal $d$-ary function applied value $d$ child output value root deterministic $k$-way branching program related black pebbling algorithm studied {brcomcsawe} introduce notion { fractional pebbling} graph study non-deterministicbranching program size prove yield non-deterministic branching program $$ state solving boolean problem ``determine whether root value  binary tree - isasymptotically better branching program size corresponding toblack-white pebbling prove upper lower bound fractionalpebbling number $d$-ary tree well general result relating thefractional pebbling number graph black-white pebbling number introduce simple semantic restriction called { thrifty} $k$-way branching program solving tree evaluation problem show branchingprogram size bound $$ tight  $h $ deterministic thrifty program show thenon-deterministic branching program correspond fractional pebbling thrifty well bound $$ tight non-deterministic thrifty program $h=$ hypothesise thrifty branching program optimal among $k$-way branching program solving tree evaluation problem - proving deterministic program would separate   proving non-deterministic program would separate  
2009,branching program tree evaluation,problemfthdfconsists computing value  = {k} taken root balanced d-ary tree height h whose internal node labelled d-ary function  whose leaf labelled element  proposefthdfas good candidate witnessingl⊊logdcfl observe latter would follow proof k-way branching program solvingfthdfrequireωk unbounded functionωsize introduce “state sequence” method match size lower bound onfthdfobtained nec̆iporuk method yield slightly better  bound nonboolean function method yield tight bound θ θ deterministic nondeterministic branching program solvingftfrespectively propose challenge break quadratic barrier inherent nec̆iporuk method adapting state sequence method handleftdf
2007,consequence provability np ⊆ p/poly,prove following   pv prof np  p/poly iff pv prof conp  np/o  pv prof np  p/poly pv prof polynomial hierarchy collapse boolean hierarchy   prof np  p/poly iff prof conp  np/o   prof np  p/poly  prof polynomial hierarchy collapse pnp   prof np  p/poly  prof polynomial hierarchy collapse pnpmotivated  introduce new concept proof complexity proof system advice make initial observation
2006,theory tc0 small complexity class,present general method introducing finitely axiomatizable minimal two-sorted theory various subclass p  two sort natural number finite set natural number latter essentially finite binary string provide natural domain defining function set small complexity class concentrate complexity class tc^ whose problem defined uniform polynomial-size family bounded-depth boolean circuit majority gate present elegant theory vtc^ provably-total function associated tc^ prove vtc^ isomorphic different-looking single-sorted theory introduced johannsen pollet technical part isomorphism proof defining binary number multiplication term bit-counting function showing formalize proof algebraic property
2006,strength replacement weak arithmetic,replacement  axiom scheme bb asserts bounded quantifier exchange follows ∀i < |a| ∃x < aφ → ∃w ∀i < |a|φi φ class γ formula theory prof scheme bb thus every σb formula equivalent strict σb formula  prove  certain theory weaker prove either bb bb show  v  prove bb v  two-sorted theory associated complexity class ac show pv prove bb assuming integer factoring possible probabilistic polynomial time johannsen pollett introduced theory c associated complexity class tc later introduced apparently weaker theory δb − cr class use method show δb − cr indeed weaker c assuming rsa secure probabilistic polynomial time attackour main tool kpt witnessing theorem
2005,quantified propositional calculus second-order theory nc1,let h proof system quantified propositional calculus  define  q j -witnessing problem h given prenex  q j -formula h-proof truth assignment free variable find witness outermost existential quantifier point  q  -witnessing problem system g *  g complete polynomial time pls  respectivelywe introduce study system g *  g cut restricted quantifier-free formula prove  q j -witnessing problem complete nc proof involves proving polynomial time version gentzens midsequent theorem g *  proving g-proofs tc-recognizable also introduce qpc system tc prove witnessing theorem themwe introduce finitely axiomatizable second-order system vnc bounded arithmetic prove isomorphic arais first order theory aid +  b  -ca uniform nc describe simple translation vnc proof bounded theorem polynomial size family g *  proof theorem get alternative proof nc witnessing theorem vnc aid
2004,proof complexity linear algebra,introduce three formal theory increasing strength linear algebra order study complexity concept needed prove basic theorem subject give apparently first feasible proof cayley–hamilton theorem property determinant study propositional proof complexity matrix identity ab=i→ba=i
2004,vtc circ second-order theory tccirc,introduce finitely axiomatizable second-order theory vtc/sup / associated class fo-uniform tc/sup / consists base theory v/sup / ac/sup / reasoning together axiom numones state existence counting array string x ith row contains number  bit  bit x introduce notion strong /spl delta//sub //sup b/-definability relation theory use recursive characterization tc/sup / relation  show tc/sup / relation strongly /spl delta//sub //sup b/-definable follows tc/sup / function /spl sigma//sub //sup b/-definable vtc/sup / prove general witnessing theorem second-order theory conclude the/spl sigma//sub //sup b/ theorem vtc/sup / witnessed tc/sup / function prove vtc/sup / rsuv isomorphic first order theory /spl delta//sub //sup b/-cr johannsen pollett  /spl delta//sub //sup b/-cr includes /spl delta//sub //sup b/ comprehension rule j p ask whether upper bound nesting depth required rule answer yes vtc/sup /  therefore /spl delta//sub //sup b/-cr finitely axiomatizable finally show /spl sigma//sub //sup b/ theorem vtc/sup / translate family tautology polynomial-size constant-depth tc/sup /-frege proof also show php /spl sigma//sub //sup b/ theorem vtc/sup / together imply family propositional tautology associated php polynomial-size constant-depth tc/sup /-frege proof
2004,second-order theory nl,introduce second-order theory v-krom bounded arithmetic nondeterministic log space system based gradels characterization nl second-order krom formula universal first-order quantifier turn motivated result decision problem -cnf satisfiability complete conl  theory style author theory vi-horn  polynomial time theory use zambellas elegant second-order syntax axiomatized set -basic simple formula together comprehension scheme either second-order horn formula  second-order krom  formula  main result v-krom formalization immerman-szelepcsenyi theorem nl closed complementation formalization necessary show nl function /spl sigma//sub //sup b/-definable v-krom theory nl literature relies immerman-szelepcsenyis result rather proving
2003,second-order system polytime reasoning based grädels theorem,introduce second-order system v-horn bounded arithmetic formalizing polynomial-time reasoning based grädels   second-order horn characterization p system comprehension p predicate  finitely many function symbol system polynomial-time reasoning either allow induction np predicate  hence powerful system  use cobhams theorem introduce function symbol polynomial-time function  prove system equivalent qpv zambellas p-def using technique also show v-horn finitely axiomatizable corollary class ∀σb consequence finitely axiomatizable well thus answering open question
2003,importance p versus np question,n/a
2003,complete axiomatization block world,n/a
2002,optimal location replica network using read-one-write-all policy,consider problem locating replica network minimize communication cost assumption read-one-write-all policy used ensure data consistency optimization problem formulated cost function estimate total communication cost paper concentrate study optimal communication cost function ratio frequency read write operation problem reformulated zero-one linear programming problem connection p-median problem explained general problem proved np-complete path graph dynamic programming algorithm problem presented
2001,second-order system polytime reasoning using graedels theorem,introduce second-order system v/sub /-horn bounded arithmetic formalizing polynomial-time reasoning based gradels  second-order horn characterization p system comprehension p predicate  finitely many function symbol system polynomial-time reasoning either allow induction np predicate  s/sub //sup / second-order v/sub //sup / hence powerful system  use cobhams theorem introduce function symbol polynomial-time function  prove system equivalent qpv zambellas  p-def using technique also show v/sub /-horn finitely axiomatizable corollary class /spl forall//spl sigma//sub //sup b/ consequence s/sub //sup / finitely axiomatizable well thus answering open question
1999,exponential lower bound size monotone real circuit,prove lower bound exponential eighth root input length size monotone arithmetic circuit solve np problem related clique detection result general famous lower bound razborov andreev gate circuit allowed compute arbitrary monotone binary real-valued function  proof relatively simple direct us method counting bottleneck generalization proved independently pudlák using different method also showed result used obtain exponential lower bound size unrestricted cutting plane proof propositional calculus
1998,relative complexity np search problem,papadimitriou introduced several class np search problem based combinatorial principle guarantee existence solution problem many interesting search problem known solvable polynomial time contained class number complete problem consider question relative complexity search problem class prove several separation show generic relativized world search class distinct standard search problem computationally equivalent decision problem  separation proof interesting combinatorial content go heart combinatorial principle class based derive one result via new lower bound degree poly- nomials asserted exist hilbert nullstellensatz finite field
1997,tight relationship generic oracle type-2 complexity theory,show two complexity class satisfying general condition distinct relative generic oracle iff corresponding type- class distinct
1996,new characterization type-2 feasibility,k mehlhorn introduced class polynomial-time-computable operator order study poly-time reducibilities function class defined using generalization cobhams definition feasibility type- function type- functionals cobhams feasible function equivalent familiar poly-time function generalize equivalence type- functionals requires definition notion poly time length type- input proof equivalence simple generalization proof type- function depends fact mehlhorns class closed strong form simultaneous limited recursion notation requires analysis structure oracle query time-bounded computation
1996,finding hard instance satisfiability problem survey,finding set hard instance propositional satisfiability interest understanding complexity sat experimentally evaluating sat algorithm discussing consider performance popular sat algorithm random problem theory average case complexity threshold phenomenon known lower bound certain class algorithm problem generating hard instance solution
1993,functional interpretation feasibly constructive arithmetic,notion feasible function finite type based typed lambda calculus introduced generalizes familiar type  polynomial-time function intuitionistic theory ipvω presented reasoning function interpretation ipvω developed style kreisels modified realizability gödels dialectica interpretation application include alternative proof buss  concerning classical first-order system intuitionistic counterpart well proof buss conjecture concerning proof cannot prove extended frege system polynomially bounded
1993,parallel pointer machine,parallel pointer machine synchronous collection finite state transducer transducer receiving input via pointer transducer transducer may change input pointer dynamically pointer jumping machine provide simple example parallel model time-varying processor inter-connection structure sufficiently powerful simulate deterministic space within timeo
1992,new recursion-theoretic characterization polytime function,give recursion-theoretic characterization fp describes polynomial time computation independently externally imposed resource bound particular syntactic characterization avoids explicit size bound recursion  cobham
1992,optimal parallel algorithm formula evaluation,new approach buss ${{nc}}^ $ algorithm  evaluation boolean formula presented problem shown complete ${{nc}}^ $ ${{ac}}^ $ reduction approach used solve general problem evaluating arithmetic formula using arithmetic circuit
1992,optimal placement replica network using read - write policy,paper study problem optimal placement replica network communication cost minimized strict consistency policy effect read anywrite policy introduced appropriate cost function developed measure relative effectiveness choice replica placement general problem proven np complete efficient polynomial-time dynamic programming algorithm introduced linear graph zero-one linear programming solution provided general problem using cost function introduced parametric approach taken problem situation activity node identical lead introduction piecewise linear solution particular problem existence underlying enveloping curve problemthe approach taken problem examine simple model develop understanding issue led number interesting challenging mathematical question
1992,new recursion-theoretic characterization polytime function extended abstract,give recursion-theoretic characterization fp describes polynomial time computation independently externally imposed resource bound particular syntactic characterization avoids explicit size bound recursion  cobham
1991,new characterization mehlhorns polynomial time functionals extended abstract,cobham  presented machine-independent characterization computational feasibility via inductive definition r constable  apparently first consider notion feasibility type  functionals k mehlhorns  study feasible reducibilities proceeds constable work class polytime operator defined using generalization cobhams definition author provide affirmative answer question whether natural machine based definition mehlhorns class< >
1990,feasibly constructive lower bound resolution proof,n/a
1989,complexity theory parallel time hardware,parallel resource time hardware complexity class defined studied using aggregate model equivalence complexity class defined sequential space uniform aggregate hardware established aggregate time related  circuit depth similarly aggregate hardware related circuit width interelationships aggregate time hardware follow corollary aggregate time related sequential resource reversal simultaneous relationship aggregate hardware time sequential space reversal shown  used evidence “extended parallel computation thesis” simultaneous relationship provide new characterization simultaneous parallel complexity class nc complementary class sc evaluation monotone planar circuit shown nc fact logcfl
1989,two application inductive counting complementation problem,following recent independent proof immerman  pp  szelepcsenyi  pp  nondeterministic space-bounded complexity class closed complementation two application inductive counting technique developed first errorless probabilistic algorithm undirected graph s-t connectivity problem run $o$ space polynomial expected time given shown class logcfl closed complementation latter special case general result show closure complementation class defined semi-unbounded fan-in circuit  one consequence shown small number role switch two-person pebbling eliminated
1989,erratum two application inductive counting complementation problem
1989,characterization basic feasible functionals finite type extended abstract,author define simple typed while-programming language generalizes sort simple language used computability text define familiar numerical computable function corresponds roughly mu -recursion ro gandy  language fully capture notion higher type computability author define run time program prove feasible functionals cook urquhart  precisely functionals computable typed while-programs run time feasibly length-bounded author introduce notion bounded typed loop program prove finite type functional feasible computable bounded typed loop program< >
1989,functional interpretation feasibly constructive arithmetic extended abstract,paper lie border logic complexity theory intended illuminate field introduce new notion feasible functional use analyze logical theory intended capture concept feasibly constructive reasoning logical theory studied intended capture notion feasibly constructive proof  constructive proof  provides computable function f prof }  proof feasibly constructive f must polynomial time computable  build work bus    bus introduces system first order intuitionistic bounded arithmetic  proved every theorem  form  poynomial time computable function f }  hold n used method proof theory form realizability based placing run-time bound higher type
1988,short propositional formula represent nondeterministic computation,n/a
1988,simple parallel algorithm finding satisfying truth assignment 2-cnf formula,show problem finding truth assignment satisfies -cnf formula solved time concurrent-read concurrent-write parallel random access machine  processor n number variable formula
1988,two application complementation via inductive counting,recent proof nondeterministic space-bounded complexity class closed complementation used develop two application inductive counting technique errorless probabilistic algorithm given undirected graph s-t connectivity problem run space polynomial expected time shown class logcfl closed complementation latter special case general result show closure complementation class defined semiunbounded fan-in circuit  one consequence small number role switch two-person pebbling eliminated< >
1987,problem complete deterministic logarithmic space,exhibit several problem complete deterministic logarithmic space nc  reducibility list includes breadth-first search depth-first search undirected tree connectivity undirected graph known made one disjoint cycle undirected graph acyclicity several problem related representing operating permutation finite set
1987,parallel complexity abelian permutation group problem,classify abelian permutation group problem respect parallel complexity group specified generating permutation show testing membership computing order testing isomorphism $nc^ $-equivalent  determining solvability system linear equation modulo product small prime power show intersecting two group $nc^ $-equivalent computing setwise stabilizer show problem $nc^ $-reducible problem computing generator-relator presentation prove aforementioned problem belong $nc^ $ thus identifying several natural set recognition problem $nc$ may lie outside $nc^ $ finally prove $nc^ $ contains problem computing cyclic decomposition abelian permutation group   include $nc^ $ solution problem computing product n integer modulo $ { n}  $-bit integer $nc^ $ reduction problem computing path two node graph determining accessibility one node another
1986,upper lower time bound parallel random access machine without simultaneous writes,one frequently used model synchronous parallel computer parallel random access machine processor read write common random access memory different processor may read memory location time simultaneous writing disallowed show even allow nonuniform algorithm arbitrary number processor arbitrary instruction set $ $ lower bound time required compute various simple function including sorting n key finding logical n bit also prove surprising time upper bound $ _ n$ step function beat obvious algorithm requiring $ _ n$ stepsif simultaneous writes allowed simple algorithm compute function constant number step
1986,log depth circuit division related problem,present optimal depth boolean circuit $ integer division powering multiple product also show three problem equivalent uniform depth space complexity addition describe algorithm testing divisibility optimal depth space
1985,taxonomy problem fast parallel algorithm,class nc consists problem solvable fast  parallel feasible  number processor many natural problem nc known paper attempt made identify important subclass nc give interesting example subclass notion nc-reducibility introduced used throughout  problem complete respect reducibility given many subclass nc general technique “parallel greedy algorithm” identified used show finding minimum spanning forest graph reducible graph accessibility problem hence nc  polynomial size class logcfl given new characterization term circuit family class det problem reducible integer determinant defined many example given new problem complete deterministic polynomial time given namely finding lexicographically first maximal clique graph paper revised version cook 
1985,depth-universal circuit,paper describes family depth-universal circuit n c universal circuit $u$ simulate circuit $ $ n input size c depth u depth $o$ size $o$ construction used give alternative proof theorem ruzzo showing invariance different uniformity condition complexity class defined uniform circuit family
1983,overview computational complexity,historical overview computational complexity presented emphasis fundamental issue defining intrinsic computational complexity problem proving upper lower bound complexity problem probabilistic parallel computation discussed
1983,recognition deterministic cfls small time space,let nice space bound log n ⩽ ⩽ n every dcfl recognized multitape turing machine simultaneously time space time bound optimal machine allowed random access input time bound improved time-space product
1983,parallel computation well-endowed ring space-bounded probabilistic machine,shown probabilistic turing acceptor transducer running within space bound simulated time parallel machine therefore space deterministic machine  order achieve simulation known algorithm extended computation determinant small arithmetic parallel time computation small boolean parallel time development applied computing completion stochastic matrix method introduces generalization ring integer called well-endowed ring ring posse efficient parallel implementation basic  ring operation
1983,classifikation problem fast parallel algorithm,n/a
1983,parallel complexity abelian permutation group membership problem,show permutation group membership problem solved depth  monte carlo boolean circuit polynomial size restricted case group abelian also show restricted problem nc-hard nspace
1982,time-space tradeoff sorting general sequential model computation,general sequential model computation restriction placed way computation may proceed except parallel operation allowed show unrestricted environment ${{time}}  {{space}} =  $ order sort n integer range $$
1982,bound time parallel ram compute simple function,prove parallel ram write conflict allowed requires ω step compute boolean n bit stored first n global memory cell first argue result subtler appears fact “obvious” lower bound logn step beaten
1981,corrigendum soundness completeness axiom system program verification,n/a
1980,space lower bound maze threadability restricted machine,restricted model turing machine called jag  introduced solving maze threadability problem  jag access input graph moving pebble limited supply along edge graph finite state control detecting two pebble coincide also cause one pebble jump another prove every n jag determine threadability arbitrary n node input graph storage $o^ $ storage jag ppebbles n state defined $p n +  q$ prove jag determines threadability requires storage $ ^ /  n$ finally prove even input restricted undirected graph  single jag determine threadability
1980,hardware complexity parallel computation preliminary version,n/a
1979,relative efficiency propositional proof system,interested studying length shortest proof propositional tautology various proof system function length tautology smallest upper bound known function exponential matter proof system question would like answer  whether function polynomial bound proof system   relative   indicate standard hilbert type system  natural deduction system equivalent application polynomial far minimum proof length go  introduce extended frege system allow introduction abbreviation formula since abbreviation iterated eliminate need possible exponential growth formula length proof illustrated example  fact theorem   state penalty linear increase number line proof extended frege system line proof need constant time length formula proved
1979,deterministic cfls accepted simultaneously polynomial time log squared space,propose prove theorem title let plo class set recognizable deterministic turing machine simultaneously polynomial time log squared space using notation bruss meyer  plo &equil &ugrk tisp
1978,soundness completeness axiom system program verification,simple algol-like language defined includes conditional procedure call statement well block formal interpretive semantics hoare style axiom system given language axiom system proved sound certain sense complete relative interpretive semantics main new  completeness theorem careful treatment procedure call rule procedure global variable declaration
1976,storage requirement deterministic polynomial time recognizable language,intriguing question whether  space enough recognize class language recognizable deterministic polynomial time question earlier narrowed storage required recognize particular language called sp sp clearly shown sp tape complexity k every member tape complexity k paper present evidence support conjecture sp cannot recognized using storage k k technique present proving statement turing machine general prove result suitably restricted device
1976,number addition compute specific polynomial,number addition-subtraction operation required compute univariate pol nomials investigated existence rational coefficient polynomial degree n requiring $    $ operation established using argument based algebraic independence analytic argument used relate $  $ complexity number distinct real zero possessed given real coefficient polynomial
1975,assertion language data structure,paper wish consider problem proving assertion program construct alter arbitrarily complex data structure recent year several paper written subject proving assertion program however class data structure considered generally proper sub-class class data structure class linear list tree  discus problem call distinct non-repeating list distinct non-repeating tree  extends burstalls approach approach likewise basically tree-oriented applicable general data structure  restricts attention simple singly-linked list noting problem providing complete framework correctness proof one attempt handle general data structure  discus question designing programming language general data structure order facilitate verification program written language  provides set axiom class data structure instance two data structure equal iff component-wise equal
1975,feasibly constructive proof propositional calculus preliminary version,motivation work come two general source first source basic open question complexity theory whether p equal np   approach try show equal trying show set tautology np  equivalent showing proof system  tautology “super” sense short proof every tautology extended resolution example powerful proof system tautology simulate standard proof system  main theorem  paper describes power extended resolution way may provide handle showing super second motivation come constructive mathematics constructive proof say statement @@@@×a must provide effective mean finding proof value x nothing said long proof function x function exponential super exponential short value x length proof instance may exceed number electron universe section  introduce system pv number theory system suggest properly formalizes notion feasibly constructive proof
1975,proving assertion program manipulate data structure,paper wish consider problem proving assertion program construct alter data structure method define suitable assertion language l data structure define simple programming language l constructing altering data structure give axiom rule inference  specify effect program segment data structure  finally prove axiom correct  reasonable sense complete thus intention provide complete theoretical framework describing arbitrary data structure proving assertion program manipulate
1974,observation time-storage trade,two main  proved first state certain set sp string  tape complexity  iff every set indownload  download full-size image tape complexity  second result give evidence sp tape complexity k k
1974,length proof propositional calculus preliminary version,one important open question field computational complexity question whether polynomial time decision procedure classical propositional calculus purpose present paper study question related complexity decision procedure propositional calculus namely complexity proof system propositional calculus fundamental issue whether exists proof system polynomial p every valid formula proof length exceeding p n length formula theorem  help establish importance question purpose theorem give following definition
1974,number addition compute specific polynomial preliminary version,well known work motzkin  belaga  pan  “most” nth degree polynomial p &egr r require n/ × ÷ ops n ± ops bound always achieved within framework preconditioned evaluation  precisely p computed using le  × ÷ le n ± ops coefficient p algebraically dependent situation counting ± ops potential unlimited * ops clear argument based algebraic dependence provide u best lower bound thus far different approach independent interest taken section iv namely able show number ± ops required compute p &egr r bounded function number distinct real zero p potential  limitation approach discussed
1973,hierarchy nondeterministic time complexity,prove following theorem paper real number r r ≤r<r set string nondeterministic time complexity nr nondeterministic time complexity nr computing device nondeterminsitic multitape turing machine
1973,time bounded random access machine,ram abstract model random access computer introduced unique feature model execution time instruction defined term l function size number manipulated instruction model fixed program shown computing speed model stored-program model differ constant factor proved time-bounded turing machine simulated o·l timebounded ram time-bounded ram simulated turing machine whose execution time bounded  l constant  l logarithmicthe main result state function ram computes time function set recognized ram time ram recognizes time sharper diagonal result obtained turing machinesthe proof  constructive aided introduction algol-like programming language rmas
1972,time-bounded random access machine,paper introduce formal model random access computer argue model good one use theory computational complexity  proved compare run time recognizing set using model  stored program model turing machine main result theorem  show existence time complexity hierarchy finer standard abstract computer model algol-like programming language introduced facilitates proof theorem
1971,characterization pushdown machine term time-bounded computer,class machine called auxiliary pushdown machine introduced several type pushdown automaton including stack automaton characterized term machine computing power class machine question characterized
1971,linear time simulation deterministic two-way pushdown automaton,n/a
1971,complexity theorem-proving procedure,shown recognition problem solved polynomial time-bounded nondeterministic turing machine “reduced” problem determining whether given propositional formula tautology “reduced” mean roughly speaking first problem solved deterministically polynomial time provided oracle available solving second notion reducible polynomial degree difficulty defined shown problem determining tautologyhood polynomial degree problem determining whether first two given graph isomorphic subgraph second example discussed method measuring complexity proof procedure predicate calculus introduced discussed
1970,path system language recognition,main result theorem  give bound storage required turing machine simulate certain time-bounded pushdown machine theorem generalization result appearing  stating context-free language recognized deterministic turing machine within storage  introduce combinatorial object called path system develop theory briefly use theory prove result pushdown machine result context free language well third result third result theorem savitch  stating non-deterministic l - storage bounded turing machine simulated deterministic  - storage bounded turing machine
1969,variation pushdown machine detailed abstract,class machine called auxiliary pushdown machine introduced several type pushdown automaton including stack automaton characterized term machine computing power class machine question characterized term time bounded turing machine corollary derived answer open question field
1966,solvability derivability problem one-normal system,one-normal system post production system finite alphabet {s · · · s&sgr} production sip → peij range subset {  · · · &sgr} fixed j take value   · · · ni following derivability problem shown solvable system given two word p q decide whether q derived p successive application production rule result proved hao wang monogenic case 
