2014,author retrospective ptrans analysis optimization technique,ptran  system ibm goal analysis optimization sequential program parallel architecture paper give perspective changed since ptran still relevant
2012,programming language - past achievement future challenge,design programming language compile-time run-time implementation closely related dependent underlying computational model many language designed many implementation strategy computational model explored since commercial world largely settled legacy language meanwhile capability computing system way used changed dramatically panelist summarize lesson learned language design also learned consider lesson applied myriad application domain architectural framework user need economic consideration exist today speculate future
2008,compiler parallel computing system,increasing delivered performance computer running program parallel old idea new urgency multi core  chip emerged way increase performance wherever chip used talk focus role programming language compiler must play delivering parallel performance user application speakerpsilas personal experience language compiler high performance system provide basis observation talk intended encourage exploration new approach
2001,blue gene vision protein science using petaflop supercomputer,december  ibm announced start five-year effort build massively parallel computer applied study biomolecular phenomenon protein folding project two main goal advance understanding mechanism behind protein folding via large-scale simulation explore novel idea massively parallel machine architecture software project enable biomolecular simulation order magnitude larger current technology permit major area investigation include effectively utilize novel platform meet scientific goal make massively parallel machine usable achieve performance target reasonable cost novel machine architecture paper provides overview blue gene project ibm research includes plan made intended goal anticipated challenge regarding scientific work software applic ation hardware design
2000,like,n/a
1999,turning point interaction computer,development interface human computer interact brought significant turning point computing last  year work interface programming language office automation human factor enabled people interact effectively computer work ibm system journal published many paper reflect  work area reader see representative selection paper section issue
1988,overview ptran analysis system multiprocessing,ptran  system automatically restructuring sequential fortran program execution parallel architecture paper describes ptran-a currently operational analysis phase ptran analysis broad deep incorporating interprocedural information dependence analysis system organized around persistent database program procedure information ptran incorporates several new fast algorithm pragmatic design
1988,framework determining useful parallelism,approach finding forming parallel process sequential parallel program presented approach presented framework create useful parallelism variety parallel architecture framework make use control dependence graph capture maximal parallelism process tree expose useful parallelism renaming storage segregation reduce data dependency architecture-specific cost analyzer evaluate effectiveness potential process framework currently implemented
1982,technological review fortran compiler,fortran compiler function organization described shown form basis many technique used modern compiler
1981,history language processor technology ibm,history language processor technology ibm described paper paper devoted compiler technology interpreter assembler macro system discussed briefly emphasis scientific contribution technological advance historical perspective synergistic relationship theory practice subtheme
1980,experimental compiling system,experimental compiling system  described represents new compiler construction methodology us compiler base augmented create compiler one wide class source language resulting compiler permit user select code quality ranging highly optimized interpretive investigation concentrating easy expression efficient implementation language semantics syntax analysis ignored
1979,automatic storage optimization retrospective,n/a
1976,program data flow analysis procedure,global data relationship program exposed codified static analysis method described paper procedure given determines definition possibly “reach” node control flow graph program definition “live” edge graph procedure us “interval” ordered edge listing data structure handle reducible irreducible graph indistinguishably
1974,interprocedural analysis information derived,well structured program usually expressed system functionally oriented procedure analyzing transforming entire system procedure linkage modified eliminated interprocedural data dependency documented user paper present method developed effect interprocedural analysis transformation
1974,interprocedural data flow analysis,n/a
1971,basis program optimization,n/a
