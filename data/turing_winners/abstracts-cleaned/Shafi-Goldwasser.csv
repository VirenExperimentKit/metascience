2019,fine-grained complexity meet ip = pspace,paper study fine-grained complexity finding exact approximate solution problem p main contribution showing reduction exact approximate solution host problemsas one  example show closest-lcs-pair problem     b equivalent approximation version  generally identify class problem call bp-pair-class comprising exact approximate solution show equivalent near-linear time reductionsexploring class property also showunder nc-seth assumption  solving problem class requires essentially quadratic timemodest improvement running time known algorithm  would imply nexp non-uniform ncfinally leverage technique show new barrier deterministic approximation algorithm lcsa important consequence  continue hold data structure setting particular show data structure approximate nearest neighbor search lcs  implies data structure exact nnslcs data structure answering regular expression query essentially complexityat heart new  deep connection interactive proof system bounded-space computation fine-grained complexity exact approximate solution problem p particular  build proof technique classical ip = pspace result
2018,pseudo-deterministic proof,introduce pseudo-deterministic interactive proof  interactive proof system search problem verifier guaranteed high probability output output different execution case classical interactive proof verifier probabilistic polynomial time algorithm interacting untrusted powerful prover view pseudo-deterministic interactive proof extension study pseudo-deterministic randomized polynomial time algorithm goal latter find canonical solution search problem whereas goal former prove solution search problem canonical probabilistic polynomial time verifier alternatively one may think powerful prover aiding probabilistic polynomial time verifier find canonical solution search problem high probability randomness verifier challenge pseudo-determinism hold respect randomness also respect prover malicious prover able cause verifier output solution unique canonical one ip=pspace characterization implies psdip = ip challenge find constant round pseudo-deterministic interactive proof hard search problem show constant round pseudo-deterministic interactive proof graph isomorphism problem input pair isomorphic graph  exist unique isomorphism phi g_ g_  output verifier high probability regardless dishonest prover strategy contrast show unlikely psdip proof constant round exist np-complete problem showing np-complete problem constant round psdip protocol polynomial hierarchy collapse
2018,population stability regulating size presence adversary,introduce new coordination problem distributed computing call population stability problem system agent limited memory communication well ability replicate self-destruct subjected attack worst-case adversary bounded rate  delete agent chosen arbitrarily  insert additional agent arbitrary initial state system goal perpetually maintain population whose size within constant factor target size n problem inspired ability complex biological system composed multitude memory-limited individual cell maintain stable population size adverse environment biological mechanism allow organism heal trauma recover excessive cell proliferation caused inflammation disease normal development present population stability protocol communication model synchronous variant population model angluin et al round pair agent selected random meet exchange message least constant fraction agent matched round protocol us three-bit message  state per agent emphasize protocol handle adversary insert delete agent setting existing approximate counting technique seem apply protocol relies novel coloring strategy population size encoded variance distribution color individual agent locally obtain weak estimate population size sampling distribution make individual decision robustly maintain stable global population size
2018,practical accountability secret process,u federal court system exploring way improve accountability electronic surveillance opaque process often involving case sealed public view tech company subject gag order informing surveilled user one judge proposed publicly releasing metadata case paper cover sheet way balance competing goal  secrecy target investigation discover sabotage  accountability assure public surveillance power misused abusedinspired court accountability challenge illustrate accountability secrecy simultaneously achievable modern cryptography brought bear system improves configurability preserving secrecy offering new tradeoff potentially palatable risk-averse court system judge law enforcement company publish commitment surveillance action argue zero-knowledge behavior consistent compute aggregate surveillance statistic multi-party computation demonstrate primitive perform efficiently scale federal judiciary implement hierarchical form mpc mirror hierarchy court system also develop statement succinct zero-knowledge  whose specificity tuned calibrate amount information released told proposal offer court system flexible range option enhancing accountability face necessary secrecy also yield general framework accountability broader class secret information process
2017,hunting snark,existence succinct non-interactive argument np  intriguing question past two decade c proof random oracle model –  prior work existing candidate construction based elaborate assumption tailored specific protocol  formulate general relatively natural notion extractable collision-resistant hash function  show ecrhs exist modified version di crescenzo lipmaa’s protocol succinct non-interactive argument np furthermore modified protocol actually succinct non-interactive adaptive argument knowledge  propose several candidate construction ecrhs relaxation thereof demonstrate applicability snarks various form delegation computation succinct non-interactive zero-knowledge argument succinct two-party secure computation finally show snarks essentially imply existence ecrhs thus demonstrating necessity assumption going beyondecrhecrhs formulate notion extractable one-way function eowfeowfs assuming existence natural variant ofeowfeowfs construct two-message selective-opening-attack-secure commitment scheme three-round zero-knowledge argument knowledge furthermore theeowfeowfs concurrently extractable three-round zero-knowledge protocol also concurrent zero knowledge construction circumvent previous black-box impossibility  regarding protocol relying oneowfeowfs non-black-box component security reduction
2017,bipartite perfect matching pseudo-deterministic nc,present pseudo-deterministic nc algorithm finding perfect matchings bipartite graph specifically algorithm randomized parallel algorithm us poly processor poly depth poly random bit output bipartite input graph unique perfect matching high probability graph return matching almost choice randomness immediate consequence also find pseudo-deterministic nc algorithm constructing depth first search  tree introduce method computing union min-weight perfect matchings weighted graph rnc novel set weight assignment combination enable isolating unique matching graph show way use pseudo-deterministic algorithm reduce number random bit used general randomized algorithm main idea random bit reused successive invocation pseudo-deterministic randomized algorithm use technique show rnc algorithm constructing depth first search  tree using bit whereas previous best randomized algorithm used new sequential randomized algorithm set-maxima problem us fewer random bit previous state art furthermore prove resolving decision question nc = rnc would imply nc algorithm finding bipartite perfect matching finding dfs tree nc implied previous randomized nc search algorithm finding bipartite perfect matching implied existence pseudo-deterministic nc search algorithm
2017,complexity problem p given correlated instance,instance computational problem exist isolation rather multiple correlated instance problem arise naturally real world challenge gain computationally correlation found  showed significant computational gain made access auxiliary instance correlated primary problem instance via solution space demonstrate constraint satisfaction problem np-hard general worst case form set study impact access correlated instance complexity polynomial time problem namely problem p conjectured require time n^c c> ask whether access instance p correlated natural way used solve p one  faster conjectured lower bound n^c focus attention number problem longest common subsequence  minimum edit distance sequence dynamic time warping distance  curve best known algorithm achieve runtime via dynamic programming problem form interesting case point study shown time algorithm worst-case instance would imply improved algorithm host problem well disprove complexity hypothesis strong exponential time hypothesis show use access logarithmic number auxiliary correlated instance design novel time algorithm lcs edit dtwd generally improved algorithm computing tuple-based similarity measure - generalization define within string multiple sequence alignment problem k string yield algorithm contrasting classical dynamic programming  hold several correlation model primary auxiliary instance general correlation model address assume primary instance worst-case instance auxiliary instance chosen uniform distribution subject constraint alignment epsilon-correlated optimal alignment primary instance emphasize optimal solution auxiliary instance generally coincide optimal solution worst case primary instance view work pointing new avenue looking significant improvement sequence alignment problem computing similarity measure taking advantage access sequence correlated natural generating process first work show take advantage mathematically inspired simple clean model correlation - intriguing question looking forward find correlation model coincide evolutionary model relationship approach multiple sequence alignment give provable guarantee
2017,splinter practical private query public data,many online service let user query public datasets map flight price restaurant review unfortunately query service reveal highly sensitive information compromise user privacy paper present splinter system protects user query public data scale realistic application user split query multiple part sends part different provider hold copy data long one provider honest collude others provider cannot determine query splinter us extends new cryptographic primitive called function secret sharing  make order magnitude efficient prior system based private information retrieval garbled circuit develop protocol extending f new type query max topk query also provide optimized implementation f using aes-ni instruction multicores splinter achieves end-to-end latency  second realistic workload including yelp clone flight search map routing
2017,edited truth,introduce two new cryptographic notion realm public symmetric key encryptionencryption invisible edits encryption scheme two tier user “privileged” “unprivileged” privileged user know key pairand “unprivileged” user know key pairpkeskewhich associated underlying edit e applied message encrypted unprivileged user attempt decrypt ciphertext generated privileged user underlying plaintextmm decrypted editedm′=editm hereediteis supported edit function e description particular edit user shouldn’t able tell whether he’s unprivileged privileged useran encryption deniable edits encryption scheme allows user owns ciphertext c encrypting large corpus data secret keysks generate alternative legitimate looking secret keyskcesthat decrypts c “edited” version datam′=editm generalizes classical receiver deniable encryption special case deniable edits edit function completely replaces original data new flexibility allows design solution much smaller key size required classical receiver deniable encryption allowing key size scale description size edit e much smaller plaintext data mwe construct encryption scheme deniable invisible edits polynomial-time computable edit function minimal assumption public-key setting require existence standard public-key encryption symmetric-key setting require existence one-way functionsthe solution problem use common idea however significant conceptual difference deniable edits invisible edits whereas encryption deniable edits enables user modify meaning single ciphertext hindsight goal encryption invisible edits enable ongoing modification multiple ciphertexts
2017,public accountability v secret law coexist cryptographic proposal,law generally known kept secret small group noble rule u convinced ancient law scrupulously administered nevertheless extremely painful thing ruled law one know--franz kafka parable paradoxespost / journalist scholar activist pointed secret law - body law whose detail sometime mere existence classified top secret - rise three branch u government due growing national security concern amid heated current debate governmental wish exceptional access encrypted digital data one key issue mechanism put place ensure government agency follow agreed-upon rule manner compromise national security objective promise especially challenging rule according access encrypted data granted may secretin work show use cryptographic protocol particular idea zero knowledge proof ensure accountability transperancy government extraordinary seemingly deadlocked setting propose efficient record-keeping infrastructure versatile publicly verifiable audit preserve  privacy record content well rule record attested abide protocol based existing blockchain cryptographic tool including commitment zero-knowledge snarks satisfies property indelibility  perfect data privacy public auditability secret data secret law accountable deletion succinctness also propose variant scheme entity required pay fee based record content  still preserving privacy scheme directly instantiated ethereum blockchain 
2016,incentivize data-driven collaboration among competing party,availability vast amount data changing make medical discovery predict global market trend save energy develop new educational strategy certain setting genome wide association study deep learning sheer size data  seems critical making discovery data held distributed many party often case must share itly reap full benefitsone obstacle reluctance different entity share data due privacy concern loss competitive edge work cryptographic multi-party computation last  year address privacy aspect shed light individual party loss gain access data carry tangible reward individual collaborator better collaborating even clear better overall drawn addressing question topic paperthe order collaborator receive output collaboration crucial aspect modeling solution believe timing important unaddressed issue data-based collaborationsour contribution follows formalize model $n$-party collaboration computing function private input participant receive output sequence order depends private input output improves previous output according reward function say mechanism collaboration achieves collaborative equilibrium guarantee higher reward participant joining collaboration compared joining show general computing collaborative equilibrium np-complete design polynomial-time algorithm computing range natural model setting possible design mechanism compute distribution output ordering output delivery based n participant private input achieves collaborative equilibriumthe collaboration mechanism develop standard model thus require central trusted party however show assumption necessary standard cryptographic assumption show mechanism implemented decentralized way n distrustful party using new extension classical secure multiparty computation impose order timing constraint delivery output different player addition guaranteeing privacy correctness
2016,time-lock puzzle randomized encoding,time-lock puzzle mechanism sending message future sender quickly generate puzzle solution remains hidden moderately large amount time elapsed solution hidden adversary run time significantly le including resourceful parallel adversary polynomially many processorswhile notion time-lock puzzle around  year single candidate proposed fifteen year ago rivest shamir wagner suggested beautiful candidate time-lock puzzle based assumption exponentiation modulo rsa integer inherently sequential computationwe show various flavor randomized encoding give rise time-lock puzzle varying strength whose security shown assuming mere existence non-parallelizing language language require circuit depth least decide worst-case existence language necessary existence time-lock puzzleswe instantiate construction different randomized encoding literature increasingly better efficiency obtained based increasingly stronger cryptographic assumption ranging one-way function indistinguishability obfuscation also observe time-lock puzzle imply one-way function thus reliance cryptographic assumption necessaryfinally generalizing construct type puzzle proof work randomized encoding suitable worst-case hardness assumption 
2016,cryptographic assumption position paper,mission theoretical cryptography define construct provably secure cryptographic protocol scheme without proof security cryptographic construct offer guarantee whatsoever basis evaluation comparison security proof necessarily come form reduction security claim intractability assumption proof ultimately good assumption based thus complexity implication every assumption utilize significant substance serve yard stick value proposalslately field cryptography seen sharp increase number new assumption often complex define difficult interpret time assumption hard untangle construction utilize themwe believe lack standard accepted reasonable cryptographic assumption harmful credibility field therefore great need measure according classify compare assumption safe paper propose classification review recently suggested assumption light follows footstep naor governing principle relying hardness assumption independent cryptographic construction
2015,delegating computation interactive proof muggles,work study interactive proof tractable language  prover efficient run polynomial time word muggle verifier super-efficient run nearly linear time proof system used delegating computation server run computation client interactively prove correctness result client verify  correctness nearly linear time previously related question considered holographic proof setting babai et al  argument setting computational assumption kilian random oracle model micali  focus however original interactive proof model assumption made computational power adaptiveness dishonest proversour main technical theorem give public coin interactive proof language computable log-space uniform boolean circuit depth input length n verifier run time n  poly space communication complexity poly prover run time poly particular language computable log-space uniform nc  depth prover efficient verifier run time n  polylog space communication complexity polylog using theorem make progress several questions--- show construct -round computationally sound argument polylog communication log-space uniform nc computation verifier run quasi-linear time result us recent transformation kalai raz public coin interactive proof -round argument soundness argument system based existence pir scheme polylog communication--- construct interactive proof public coin log-space poly-time verifier p given settle open question regarding expressive power proof system verifiers--- construct zero-knowledge interactive proof given communication complexity quasi-linear witness length np language verifiable nc based existence -way functions--- construct probabilistically checkable argument  size polynomial witness length  np language verifiable nc computational assumption provided
2015,compute presence leakage,address following problem execute algorithm $p$ unbounded number execution presence adversary observes partial information internal state computation execution security guarantee adversary learns nothing beyond $p$s input-output behavior main result compiler take input algorithm $p$ security parameter $$ produce functionally equivalent algorithm $p$ running time $p$ factor ${ poly}$ slower $p$ $p$ composed series call ${ poly}$-time computable subalgorithms execution $p$ adversary algorithm ${ a}$ choose input $p$ learn  adaptively chosen leakage functions---each bounded output size ${}$---on subalgorithms $p$ randomness use prove computationally unbounded ${ a}$ observing  computationally unbounded leakage function learn observation could given black-box access input-output behavior $p$ unlike prior work question result rely secure hardware component unconditional namely hold even $p=np$
2015,adaptively secure coin-flipping revisited,question much bias coalition faulty player introduce distributed sampling protocol full information model first studied ben-or linial  focused problem collective coin-flipping set n player wish use private randomness generate common random bit b presence faulty player probability thatb=b leastεεfor constantε>ε showed majority function toleratet=θn−−√tcorruptions even presence adaptive adversary conjectured optimal adaptive setting shortly thereafter lichtenstein linial saks proved conjecture hold protocol player sends single bit result main progress conjecture last  yearsin work revisit question ask protocol player send longer message increased communication enable tolerance larger fraction corrupt playerswe introduce model strong adaptive corruption adversary see message sent honest party given round based message content decides whether corrupt party  contrast  adaptive adversary corrupts party based prior communication history cannot alter message already sent strongly adaptive corruption seem realistic concern setting malicious party alter  honest message depending content yet existing adversarial model take accountwe shed light connection adaptive strongly adaptive adversary proving symmetric one-round coin-flipping protocol secure adaptive corruption symmetric one-round coin-flipping protocol secure strongly adaptive corruption going back standard adaptive model prove symmetric one-round protocol arbitrarily long message tolerate mosto˜n−−√oadaptive corruptionsat heart  new technique converting one-round secure protocol arbitrarily long message secure one player sends onlypolylogpbits technique may independent interest
2015,hidden graph model communication locality optimal resiliency adaptive fault,vast majority work secure multi-party computation  assume full communication pattern every party exchange message network participant complete network point-to-point channel problematic modern large scale network number party order million example computing large distributed datamotivated observation boyle goldwasser tessaro  recently put forward notion communication locality namely total number point-to-point channel party us protocol quality metric mpc protocol proved assuming public-key infrastructure  common reference string  mpc protocol constructed computing n-party function communication locality round complexity appropriate constant c  protocol tolerates static  adversary corrupting t<n party given constant  <  < /  leave open following questionscan achieve low communication locality round complexity tolerating adaptive adversariescan achieve low communication locality optimal resiliencyt<n/in work answer question affirmatively consider boyle et al model replace cr symmetric-key infrastructure  model give protocol communication locality round complexity polylog  tolerates t<n/ adaptive corruption standard intractability assumption adaptively secure protocol namely existence trapdoor permutation whose domain invertible sampling done using ski derive sequence random hidden communication graph among player central new technique show use graph emulate complete network polylog round preserving polylog locality also show remove ski setup assumption cost however increasing communication locality  factor n
2015,computational benefit correlated instance,starting point paper instance computational problem often exist isolation rather multiple correlated instance problem arise naturally real world challenge gain computationally instance correlation exist interested setting significant computational gain made solving single primary instance access additional auxiliary instance correlated primary instance via solution spacewe focus constraint satisfaction problem  expressive class computational problem well-studied term approximation algorithm np-hardness term average case hardness usage cryptography eg feiges random -sat hypothesis goldreichs one way function proposal learning-parity-with-noise othersto model correlation instance consider generating process search problem primary instance first selected according distribution  auxiliary instance i_i_t generated underlying solution s_s_t perturbation primary solution example st may obtained probabilistic process flipping bit small constant probabilitywe consider variety naturally occurring worst case average case csps show availability small number auxiliary instance generated natural generating process radically change complexity solving primary instance intractable expected polynomial time indeed high-level knowing {logarithmic} number auxiliary instance enables close polynomial time approximation primary solution addition difference vector primary auxiliary solution known primary solution exactly found furthermore knowing even single auxiliary instance already enables finding exact primary solution large class csps
2015,machine learning classification encrypted data,machine learning classification used numerous setting nowadays medical genomics prediction spam detection face recognition financial prediction due privacy concern application important data classifier remain confidential work construct three major classification protocol satisfy privacy constraint hyperplane decision naive bayes decision tree also enable protocol combined adaboost basis construction new library building block constructing classifier securely demonstrate library used construct classifier well multiplexer face detection classifier implemented evaluated library classifier protocol efficient taking millisecond second perform classification running real medical datasets
2015,aggregate pseudorandom function connection learning,first part work introduce new type pseudo-random function “aggregate queries” exponential-sized set efficiently answered show use algebraic property underlying classical pseudo random function construct “aggregate pseudo-random functions” number class aggregation query cryptographic hardness assumption example one aggregate query achieve product function value accepted polynomial-sized read-once boolean formula flip side show certain aggregate query impossible support aggregate pseudo-random function fall within framework work goldreich goldwasser nussboim  “implementation huge random objects” providing truthful implementation pseudo-random function aggregate query answeredin second part work show various extension pseudo-random function considered recently cryptographic literature yield impossibility  various extension machine learning model continuing line investigation originated valiant kearns extended pseudo-random function address include constrained pseudo random function aggregatable pseudo random function pseudo random function secure related-key attack
2015,adaptively secure two-party computation indistinguishability obfuscation,present first two-round two-party general function evaluation protocol secure honest-but-curious adaptive corruption party addition protocol incoercible one party fully leakage tolerant requires global  reference string based one way function general-purpose indistinguishability obfuscation sub-exponential security well augmented non-committing encryptiona byzantine version protocol obtained applying canetti et al  compiler achieves uc security comparable efficiency parameter longer incoercible
2014,leakage-resilient coin tossing,ability collectively toss common coin among  n party presence fault important primitive arsenal randomized distributed protocol case dishonest majority shown impossible achieve le  {}{r} bias  round  case honest majority contrast unconditionally secure  o-round protocol generating common perfectly unbiased coin follow general completeness theorem multi-party secure protocol perfectly secure channel model  however multi-party protocol honest majority party must generate hold local secret value assumed perfectly hidden malicious party assumption crucial proving resulting common coin unbiased assumption unfortunately seem hold practice attacker launch side-channel attack local state honest party leak information secret work present  o-round protocol collectively generating unbiased common coin presence leakage local state honest party tolerate    n computationally unbounded statically scheduled byzantine fault addition   -fraction leakage  party secret state  hold memory leakage model  adapted distributed setting another contribution work tool use achieve collective coin flippingleakage-resilient verifiable secret sharing  informally variant ordinary v secrecy guarantee maintained even information leaked individual share secret
2014,best-possible obfuscation,obfuscator compiler transforms program  obfuscated program  input-output functionality original program unintelligible obfuscation application cryptography software protection barak et al  initiated theoretical study obfuscation focused black-box obfuscation obfuscated circuit leak information except  input-output functionality family functionality cannot obfuscated demonstrated subsequent research showed negative  well positive  obfuscating specific family circuit respect black box obfuscation work study new notion obfuscation call best-possible obfuscation best possible obfuscation make relaxed requirement obfuscated program leak little information program functionality  particular definition allows program leak information cannot obtained black box best-possible obfuscation guarantee information hidden obfuscated program also hidden similar-size program computing functionality thus obfuscation  best possible work study best-possible obfuscation relationship previously studied definition main   separation black-box best-possible obfuscation show natural obfuscation task achieved best-possible definition cannot achieved black-box definition  hardness result best-possible obfuscation showing strong  best-possible obfuscation implies collapse polynomial-time hierarchy  impossibility result efficient best-possible  obfuscation presence random oracle impossibility result us random oracle construct hard-to-obfuscate circuit thus imply impossibility standard model
2014,introduction special issue innovation theoretical computer science 2012 - part ii,n/a
2014,impossibility obfuscation auxiliary input universal simulator,paper show indistinguishability obfuscation general circuit implies somewhat counterintuitively strong impossibility  virtual black box obfuscation particular impliesthe impossibility average-case virtual black box obfuscation auxiliary input circuit family super-polynomial pseudo-entropy  impossibility hold even auxiliary input depends public circuit family circuit family obfuscatedthe impossibility average-case virtual black box obfuscation universal simulator  circuit family super-polynomial pseudo-entropythese bound significantly strengthen impossibility  goldwasser kalai 
2014,multi-input functional encryption,introduce problem multi-input functional encryption secret key sk f correspond n-ary function f take multiple ciphertexts input formulate indistinguishability-based simulation-based definition security notion show close connection indistinguishability virtual black-box definition obfuscationassuming indistinguishability obfuscation circuit present construction achieving indistinguishability security large class setting show modify construction achieve simulation-based security well setting simulation security possible
2014,functional signature pseudorandom function,introduce two new cryptographic primitive functional digital signature functional pseudorandom functionsin functional signature scheme addition master signing key used sign message signing key function f allow one sign message range f special case implies ability generate key predicate p allow one sign message p = we show application functional signature constructing succinct non-interactive argument delegation scheme give several general construction primitive based different computational hardness assumption describe trade-off term assumption require size signaturesin functional pseudorandom function addition master secret key used evaluate pseudorandom function f point domain additional secret key function f allow one evaluate f exists x f = y special case implies pseudorandom function selective access one delegate ability evaluate pseudorandom function input predicate p =  hold define provide sample construction functional pseudorandom function family prefix-fixing function construction yield particular punctured pseudorandom function proven invaluable tool recent advance obfuscation 
2013,introduction special issue innovation theoretical computer science 2012,n/a
2013,run turing machine encrypted data,cryptographic scheme computing encrypted data promise fundamental building block cryptography way one model algorithm crucial effect efficiency usefulness resulting cryptographic scheme today almost known scheme fully homomorphic encryption functional encryption garbling scheme work modeling algorithm circuit rather turing machinesas consequence thismodeling evaluating algorithmover encrypted data slow worst-case running time algorithm dire fact many task addition setting evaluator need description algorithm “encoded” form cost computing communicating encoding large worst-case running time algorithmin work construct cryptographic scheme computing turing machine encrypted data avoid worst-case problem specifically showan attribute-based encryption scheme polynomial-time turing machine random access machine  functional encryption scheme polynomialtime turing machinea reusable garbling scheme polynomial-time turing machine three scheme property size key garbling turing machine short depends description turing machine running time previously existing construction scheme depthd circuit parameter grow construction remove depth restriction short key moreover avoid worst-case running timea variant fully homomorphic encryption scheme turing machine one evaluate turing machine encrypted input x time dependent running time input x opposed worstcase runtime previously result known restricted class turing machine required expensive preprocessing phase  construction remove restrictionsour  obtained via reduction snarks  “extractable” variant witness encryption scheme introduced garg et al prove new assumption secure generic group model also point connection  witness encryption obfuscation point filter function defined goldwasser kalai 
2013,possibility limitation pseudodeterministic algorithm,paper show indistinguishability obfuscation general circuit implies somewhat counterintuitively strong impossibility  virtual black box obfuscation particular impliesthe impossibility average-case virtual black box obfuscation auxiliary input circuit family super-polynomial pseudo-entropy  impossibility hold even auxiliary input depends public circuit family circuit family obfuscatedthe impossibility average-case virtual black box obfuscation universal simulator  circuit family super-polynomial pseudo-entropythese bound significantly strengthen impossibility  goldwasser kalai 
2013,reusable garbled circuit succinct functional encryption,garbled circuit introduced yao mid allow computing function f input x without leaking anything f x besides f garbled circuit found numerous application every known construction suffers one limitation offer security used multiple input x paper construct first time reusable garbled circuit key building block new succinct single-key functional encryption schemefunctional encryption ambitious primitive given encryption enc value x secret key sk_f function f anyone compute f without learning information x construct first time succinct functional encryption scheme { any} polynomial-time function f succinctness mean ciphertext size grow size circuit f depth security construction based intractability learning error  problem hold long adversary access single key sk_f building succinct single-key functional encryption scheme show several new application addition reusable garbled circuit paradigm general function obfuscation call token-based obfuscation homomorphic encryption class turing machine evaluation run input-specific time rather worst-case time scheme delegating computation publicly verifiable maintains privacy computation
2013,communication locality secure multi-party computation - run sublinear algorithm distributed setting,devise multi-party computation protocol general secure function evaluation property party required communicate small number dynamically chosen party explicitly starting n party connected via complete synchronous network protocol requires party send message  polylog party using polylog round achieves secure computation polynomial-time computable randomized function f cryptographic assumption tolerates to−ϵ⋅nstatically scheduled byzantine faultswe focus particularly interesting setting function computed sublinear algorithm evaluation f depends input q = o party identity party chosen randomly possibly adaptively typically q = polylog sublinear query complexity f make possible principle dramatically reduce communication complexity general protocol challenge achieve maintaining security particular keeping identity selected input completely hidden solve challenge provide protocol securely computing sublinear f run polylog + o round party communicating q ·polylog party support message size polylog · ℓ parties’ input sizeour optimized protocol rely multi-signature scheme fully homomorphic encryption  simulation-sound adaptive nizk argument however remark multi-signatures fhe used obtain bound message size round complexity assuming standard digital signature public-key encryption one still obtain property party communicates polylog party emphasize scheduling fault depend initial pki setup digital signature nizk parameter
2012,distributed public key scheme secure continual leakage,work study distributed public key scheme secure continual memory leakage secret key shared among two computing device communicating public channel decryption operation computed simple -party protocol device similarly secret key share periodically refreshed simple -party protocol executed discrete time period throughout lifetime system leakage adversary choose pair one per device polynomial time computable length shrinking  function receive value respective function internal state respective device present distributed public key encryption  distributed identity based encryption  scheme secure continual memory leakage bilinear decisional diffie-hellman $$-linear assumption scheme following property dpke dibe scheme tolerate leakage time including refresh refresh tolerated leakage -fraction secret memory p p respectively time  tolerated leakage -fraction secret memory p p respectivelyour dibe scheme tolerates leakage master secret key identity based secret keysour dpke scheme cca-secure continual memory leakageour dpke scheme also implies secure storage system leaky device value secretely stored device continually leak information internal state external attacker device go periodic refresh protocolthese property improve bound property known construction designed secure continual memory leakage single processor model
2012,multiparty computation secure continual memory leakage,construct multiparty computation  protocol secure even malicious adversary addition corrupting - fraction party arbitrarily small constant  > leak information secret state honest party leakage continuous unbounded number execution mpc protocol computing different function different set input assume  leak-free preprocessing stage emphasize achieve leakage resilience without weakening security guarantee classical mpc namely adversary given leakage honest party state guaranteed learn nothing beyond input output value corrupted party contrast previous work leakage multi-party protocol setting weaken security notion guarantee protocol leak l bit party secret state yield l bit leakage party private input function voting leakage detrimentalour result relies standard cryptographic assumption security parameter polynomially related number party
2012,bounded-collusion ibe key homomorphism,work show construct ibe scheme secure bounded number collusion starting underlying pke scheme posse linear homomorphism key particular enables u exhibit new  ibe construction based quadratic residuosity assumption without need assume existence random oracle new ibe’s public parameter size total number identity supported system number collusion system secure λ security parameter number collusion bounded note exponential number total identity supportedmore generally give transformation take pke satisfying linear key homomorphism identity map compatibility linear hash proof property translates ibe secure bounded collusion demonstrate property general quadratic residuosity-based scheme showing simple pke based ddh assumption also satisfies property
2011,program obfuscation leaky hardware,consider general program obfuscation mechanism using “somewhat trusted” hardware device goal minimizing usage hardware complexity required trust specifically solution following property obfuscation remains secure even hardware device use leaky adversary obtain result evaluating function local state device long function short output addition adversary also control communication device number hardware device used obfuscation amount work perform polynomial security parameter independently obfuscated function’s complexity  set hardware component owned user initialized point used multiple “software-based” obfuscation sent different vendor
2011,black-box circular-secure encryption beyond affine function,show achieve public-key encryption scheme securely encrypt nonlinear function secret key specifically show constant d ∈ ℕ exists public-key encryption scheme securely encrypt function f secret key assuming f expressed polynomial total degree scheme said key-dependent message  secure wrt degree-d polynomial also show constant ce exists public-key encryption scheme kdm secure wrt turing machine description size clogλ running time λ e  λ security parameter security public-key scheme based either standard decision diffie-hellman  assumption learning error  assumption case function expressed degree-d polynomial show resulting scheme also secure respect key cycle length specifically polynomial number n key pair scheme securely encrypt degree-d polynomial whose variable collection coordinate n secret key prior work known achieve nonlinear functionsour key idea general transformation amplifies kdm security transformation take encryption scheme kdm secure wrt function even secret key weak  output scheme kdm secure wrt richer class function resulting scheme may longer secure weak key thus sense transformation convert security weak key amplified kdm security
2010,implementation huge random object,initiate general study feasibility implementing  random object demonstrate applicability number area random object occur naturally highlight two type measure quality implementation  first type corresponds various standard notion indistinguishability  whereas second type novel notion call truthfulness intuitively truthful implementation random object type must  object type merely indistinguishable random object type formalism allows consideration random object satisfy fixed property  well consideration object supporting complex query example consider truthful implementation random hamiltonian graph well supporting complex query regarding graph 
2010,circular leakage resilient public-key encryption subgroup indistinguishability - quadratic residuosity strike back,main  work new public-key encryption scheme quadratic residuosity  assumption  assumption achieve key-dependent message security well high resilience secret key leakage high resilience presence auxiliary input informationin particular call subgroup indistinguishability assumption qr dcr special case construct scheme haskey-dependent message  security achieves security even encrypting affine function secret key  scheme also meet requirement extending key-dependent message security broader class function beyond affine function using previous technique brakerski et al barak et alleakage resiliency remains secure even adversarial low-entropy  function secret key given adversary proper selection parameter allows “leakage rate”  length secret keyauxiliary-input security remains secure even sufficiently hard invert  function secret key given adversaryour scheme first achieve key-dependent security auxiliary-input security based dcr qr assumption previous scheme achieved property relied either ddh lwe assumption proposed scheme also first achieve leakage resiliency leakage rate  secret key length qr assumption note leakage resilient scheme dcr qr assumption restricted case composite modulus product safe prime implied work naor segev using hash proof system however qr assumption known construction hash proof system yield leakage rate secret key length
2010,securing computation continuous leakage,present general method compile cryptographic algorithm one resists side channel attack computation leak information variety unbounded number execution method us building block semantically secure subsidiary bit encryption scheme following additional operation key refreshing oblivious generation cipher text leakage resilience re-generation blinded homomorphic evaluation one single complete gate  furthermore security property subsidiary encryption scheme withstand bounded leakage incurred performing operationswe show implement subsidiary encryption scheme ddh intractability assumption existence simple secure hardware component hardware component independent encryption scheme secret key subsidiary encryption scheme resists leakage attack leakage computable polynomial time length bounded constant fraction security parameter
2010,robustness learning error assumption,starting work ishai-sahai-wagner micali-reyzin new goal set within theory cryptography community design cryptographic primitive secure large class side-channel attack recently many work focused designing various cryptographic primitive robust  even secret key leaky various intractability assumption work propose take step back ask basic question cryptographic assumption  robust presence leakage underlying secretsour main result hardness learning error  problem implies hardness leaky secret generally show standard lwe assumption implies lwe secure even secret taken arbitrary distribution sufficient entropy even presence hard-to-invert auxiliary input exhibit various application result standard lwe assumption construct symmetric-key encryption scheme robust secret key leakage generally maintains security even secret key taken arbitrary distribution sufficient entropy  standard lwe assumption construct  obfuscator class point function multi-bit output note scheme known robust leakage parameter scheme depend maximum leakage system tolerate hence efficiency degrades maximum anticipated leakage even leakage occurs all! contrast fact rely robust assumption allows u construct single symmetric-key encryption scheme parameter independent anticipated leakage robust leakage  namely k < n  secret key entropy k security relies lwe assumption secret size roughly k
2010,public-key encryption scheme auxiliary input,construct public-key cryptosystems remain secure even adversary given computationally uninvertible function secret key auxiliary input  scheme based decisional diffie-hellman  learning error  problemsas independent technical contribution extend goldreich-levin theorem provide hard-core  value large field
2009,cryptography without hardly secret ,absolute privacy secret-keys associated cryptographic algorithm corner-stone modern cryptography still practice key get compromised time variety reason particularly disturbing loss secrecy result side channel attack attack exploit fact every cryptographic algorithm ultimately implemented physical device implementation enable ‘observations’ made measured secret data secret key indeed side channel observation lead information leakage secret key turn lead complete break system proved mathematically secure without violating underlying mathematical principle assumption traditionally attack followed ad-hoc ‘fixes’ make particular implementation invulnerable particular attack potentially broken anew new example side-channel attacksin recent year starting work physically observable cryptography  micali reyzin new goal set build general theory physical security large class family side channel attack one may call computational side-channel attack include side channel attack leakage information secret occurs result performing computation secret well-known example attack include kocher’s timing attack  power attack  basic defining feature computational side-channel attack put forth  computation computation leak information namely portion memory involved computation leak information growing number work  proposed cryptographic algorithm provably robust computational side-channel attack limiting various way portion secret key involved step computationin work one time program taken extreme   goldwasser tauman-kalai rothblum show using new proposed type secure-memory never touch secret data ultimately fully revealed possible perform secure computation provably secure computational side channel attacksmemory-attacks proposed akavia goldwasser vaikuntanathan  entirely different family side-channel attack included computational side-channel attack family violate basic premise  computation leak information class attack inspired  memory-freezing attack introduced recently halderman et al   shown measure significant fraction bit secret key key ever stored part memory  could accessed adversary even power machine turned thus information leak portion secret key may never involved computation memory-attack leak bounded number bit computed result applying arbitrary function bounded length  content secret key cryptographic algorithm naturally family attack inherently parameterized quantitative nature attack would uncover entire secret key outset would hope cryptography work  exhibit public-key encryption algorithm especially robust memory-attacks security based computationally intractability learning error  problem related intractability approximating length shortest vector integer lattice finally new interesting variant idea memory attack proposed tauman-kalai etal  work security auximlary-inputs propose replace restriction revealing length shrinking function secret revealing function secret exponentially hard invertin talk survery development special emphasis work 
2009,simultaneous hardcore bit cryptography memory attack,paper considers two question cryptographycryptography secure memory attack particularly devastating side-channel attack cryptosystems termed “memory attack” proposed recently attack significant fraction bit secret key cryptographic algorithm measured adversary secret key ever stored part memory accessed even power turned short amount time attack shown completely compromise security various cryptosystems use including rsa cryptosystem aeswe show public-key encryption scheme regev  identity-based encryption scheme gentry peikert vaikuntanathan  remarkably robust memory attack adversary measure large fraction bit secret-key generally compute arbitrary function secret-key bounded output length done without increasing size secret-key without introducing complication natural encryption decryption routinessimultaneous hardcore bit say block bit x simultaneously hard-core one-way function f given f cannot distinguished random string length although candidate one-way function shown hide one hardcore bit even logarithmic number simultaneously hardcore bit example one-way trapdoor function linear number input bit proved simultaneously hardcore one known relate simultaneous security difficulty factoring integerswe show lattice-based  trapdoor function variant function proposed earlier gentry peikert vaikuntanathan n − o number input bit simultaneously hardcore n total length inputthese two  rely similar proof technique
2009,weak verifiable random function,verifiable random function  introduced micali rabin vadhan pseudorandom function owner seed produce public-key constitutes commitment value function produce input x proof function evaluated correctly x preserving pseudorandomness input public-key  allow proving one value per inputvrfs natural useful primitive previous work suggested variety construction application still many open question study vrfs especially relation widely studied cryptographic primitive constructing wide variety cryptographic assumptionsin work define natural relaxation vrfs call weak verifiable random function pseudorandomness required hold randomly selected input conduct study weak vrfs focusing application construction relationship cryptographic primitive showconstructions present construction weak vrfs based variety assumption including general assumption  trapdoor permutation well construction based specific number-theoretic assumption diffie-hellman assumption bilinear groupsseparations verifiable random function  cannot constructed one-way permutation black-box manner constitutes first result separating  vrfs cryptographic primitiveapplications weak vrfs capture essence constructing non-interactive zero-knowledge proof np language
2008,one-time program,work introduce one-time program new computational paradigm geared towards security application one-time program executed single input whose value specified run time result computation input nothing else program leaked hence one-time program like black box function may evaluated “self destructs” also extends k-time program like black box function evaluated k time self destructone-time program serve many purpose program obfuscation obvious one software protection also including application temporary transfer cryptographic ability moreover application one-time program go well beyond obfuscation since one-time program executed  obfuscated program bound example one-time program lead naturally electronic cash token scheme coin generated program run thus cannot double spentmost significantly new paradigm one-time computing open new avenue conceptual research work explore one avenue presenting new concept “one-time proofs” proof verified become useless unconvincingall task clearly impossible using software alone piece software copied run enabling user execute program one input solution employ secure memory device inspired cryptographic notion interactive oblivious transfer protocol store two secret key  device take input single bit b ∈ {} output k b  self destructs using device demonstrate every input length standard program  efficiently compiled functionally equivalent one-time program also show memory device used construct one-time proof specifically show use device efficiently convert classical witness np statement “one-time proof” statement
2008,program obfuscation one-time program,program obfuscation process taking program input modifying resulting program i/o behavior input program otherwise look ‘garbled’ entity run even entity adversarial full access program intuitively looking garbled adversarial entity mean impossible understand internal working program generally compute anything cannot computed seeing legitimate output program input choicetraditionally program obfuscation regarded software-based technique curb use program commercial context preventing illegal re-distribution copyrighted information obfuscation process aimed preventing ‘reverse engineering’ would subvert curb restriction embedded original program another domain program obfuscation considered imperative within on-line gaming industry order maintain fair consistent gaming environment keep gamers coming one must ensure hacker cannot modify game gain unfair advantage also web site deliver javascript source code run locally browser programmer naturally interested obfuscating source code order make hard competitor learn worksthe design program obfuscators  standard fare practice however spite large effort dedicated develop program obfuscators effort successful short run indeed general belief industry remained skeptic regarding viability obfuscation method expressed following recent quotethis feeling seems supported theoretical impossibility  assert several strong  formulation obfuscation impossible generic mechanism successfully obfuscate large class programsyet even recent theoretical  pointed way spite generic impossibility  basic concept program obfuscation obtainable many setting one setting elaborate one-time program program executed restricted pre-specified number time naturally program cannot achieved using software alone show build using ‘simple’ ‘universal’ secure hardware componentsone-time program serve many purpose program obfuscation obvious one software protection however application one-time program go well beyond obfuscation since one-time program executed  obfuscated program bound example one-time program lead naturally electronic cash token scheme “one-time proofs” proof verified become useless unconvincing show use classical witness simple secure hardware efficiently construct “one-time proofs” np statementin talk survey exciting development
2008,protect without perfect shredding,erasing old data key important tool cryptographic protocol design useful many setting including proactive security adaptive security forward security intrusion resilience protocol setting typically assume ability perfectly erase information unfortunately amply demonstrated system literature perfect erasure hard implement practicewe propose model partial erasure erasure instruction leave almost data erased intact thus giving honest player limited capability disposing old data nonetheless provide general compiler transforms secure protocol using perfect erasure one maintains security property partial erasure available key idea new redundant representation secret data still computed yet rendered useless partially erased prove compiler must incur cost additional storage compiler near optimal term storage overhead
2008,deconstructive approach program checking,program checking program self-correcting program self-testing pioneered   mid eighty new way gain confidence software considering program correctness input input basis rather full program verification work field program checking focused designing specific function checker tester correctors efficient best program known function designed utilizing specific algebraic combinatorial completeness property function hand work introduce novel composition methodology improving efficiency program checker use approach design variety program checker provably efficient term circuit depth optimal program computing function checked extension methodology case program tester correctors also presented particular show   every language rnci  program checker rnci- addition   every language rnci  program corrector tester checker raci- first time checker designed wide class function characterized complexity rather algebraic combinatorial property characterization immediately yield new efficient checker language graph connectivity perfect matching bounded-degree graph isomorphism constant-depth checker tester correctors matrix multiplication inversion determinant rank previous program checker tester correctors problem run nearly logarithmic depth moreover except matrix multiplication require use library notion  checker access library program various matrix function rather access program function checked furthermore provide condition program library eliminated important ingredient  new efficient checker complete language low complexity class  construction based technique developed field cryptography
2007,secure computation random error correcting code,secure computation consists protocol secure arithmetic secret value added multiplied securely networked processor striking feature secure computation security maintained even presence adversary corrupts quorum processor exercise full malicious control one fundamental primitive heart secure computation secret-sharing typically required secret-sharing technique build shamir’s scheme viewed cryptographic twist reed-solomon error correcting code work connection secure computation error correcting code demonstrate threshold secure computation secure channel model based arbitrary code network size n show reduction communication secure computation amounting multiplicative logarithmic factor  compared classical method small eg constant size field toleratingt<−ϵntplayers corrupted ε>  arbitrarily small large network implies considerable saving communication  hold broadcast/negligible error model rabin ben-or complement  crypto  zero-error model ben-or goldwasser wigderson  general theory extended encompass  crypto  well also present new method constructing high information rate ramp scheme based arbitrary code particular give new construction based algebraic geometry code
2007,verifying decoding constant depth,develop general approach improving efficiency computationally bounded receiver interacting powerful possibly malicious sender key idea use delegating receiver computation  sender idea recently introduced goldwasser et al  area program checking classic example sender-receiver setting interactive proof system taking sender  prover receiver verifier show  interactive proof k round interaction equivalent  interactive proof k+o round verifier nc round verifier computation implemented constant parallel time corollary obtain interactive proof system  constant soundness language nexp verifier run constant parallel-timeanother le immediate sender-receiver setting arises considering error correcting code taking sender  codeword receiver decoder obtain explicit family code locally decodable constant-depth circuit size polylogarithmic length codeword using tight connection locally list-decodable code average-case complexity obtain new efficient worst-case average-case reduction language exp
2006,fault-tolerant distributed computing full-information network,paper use random-selection protocol full-information model solve classical problem distributed computing main  following o-round randomized byzantine agreement  protocol synchronous full-information network tolerating < n/ faulty player  protocol asymptotically optimal term fault-tolerance o-round randomized ba protocol synchronous full-information network tolerating =   faulty player compiler convert randomized protocol pi designed tolerate fail-stop fault source randomness pi sv-source protocol pi tolerates min byzantine fault round-complexity pi r pi central  development new tool audited protocol informally auditing transformation convert protocol assumes built-in broadcast channel one achieves slightly weaker guarantee without assuming broadcast channel regard tool independent interest could potentially find application design simple modular randomized distributed algorithm
2006,basing one-way function np-hardness,consider possibility basing one-way function np-hardness study possible reduction worst-case decision problem task average-case inverting polynomial-time computable function f main finding following two negative given one efficiently compute |f-| existence  reduction np task inverting f implies conp  thus follows reduction cannot exist unless conp  amfor function f existence  non-adaptive reduction np task average-case inverting f implies conp  amour work build upon improves previous work feigenbaum fortnow  bogdanov trevisan  capitalizing additional computational structure search problem associated task inverting polynomial-time computable function believe  illustrate gain directly studying context one-way function rather inferring  general study worst-case average-case reduction
2005,secure multi-party computation without agreement,recently shown authenticated byzantine agreement third party corrupted cannot securely realized concurrent parallel  composition result put question usage authenticated byzantine agreement setting many execution take place particular true whole body work secure multi-party protocol case third party corrupted protocol strongly rely extensive use broadcast channel turn realized using authenticated byzantine agreement remark accepted folklore use broadcast channel  actually essential achieving meaningful secure multi-party computation whenever third party corrupted paper show folklore false present mild relaxation definition secure computation allowing abort new definition capture central security issue secure computation including privacy correctness independence input however novelty definition decoupling issue agreement issue show relaxation suffices achieving secure computation point-to-point network show secure multi-party computation definition achieved number corrupted party without broadcast channel  furthermore achieved replacing broadcast channel known protocol simple efficient echo-broadcast protocol important corollary result ability obtain multi-party protocol remain secure composition without assuming broadcast channel
2005,impossibility obfuscation auxiliary input,barak et al formalized notion obfuscation showed exist  class function cannot obfuscated contrast canetti wee showed obfuscate point function various complexity assumption thus would seem possible program interest obfuscated even though principle general purpose obfuscators exist show unlikely case particular consider notion obfuscation wrt auxiliary input corresponds setting adversary given obfuscated circuit may additional priori information essentially case interest usage obfuscation imagine prove exist many natural class function cannot obfuscated wrt auxiliary input auxiliary input dependent function obfuscated even auxiliary input independent function obfuscated also give positive result particular show obfuscator class point function also obfuscator independent auxiliary input
2005,proof plaintext knowledge ajtai-dwork cryptosystem,ajtai dwork proposed public-key encryption scheme  proved secure assumption unique shortest vector problem hard worst case cryptosystem extension regev one known security proved worst case assumption present particularly interesting case studyin paper show statistical zero-knowledge protocol statement form “plaintext corresponds ciphertext c” “ciphertext c c’ decrypt value” ajtai-dwork cryptosystem show interactive zero-knowledge proof plaintext knowledge  ajtai-dwork cryptosystem based directly security cryptosystem rather resorting general interactive zero-knowledge construction witness proof randomness used encryption
2005,distributed computing imperfect randomness,randomness critical resource many computational scenario enabling solution deterministic one elusive even provably impossible however randomized solution task assume access source unbiased independent coin physical source randomness hand rarely unbiased independent although seem exhibit somewhat imperfect randomness gap modeling question relevance current randomized solution computational task indeed substantial investigation issue complexity theory context application efficient algorithm cryptographyin paper seek determine whether imperfect randomness modeled appropriately “good enough” distributed algorithm namely imperfect randomness perfect randomness comparable efficiency  answer question affirmative problem byzantine agreement construct protocol byzantine agreement variety scenario  player imperfect randomness solution essentially efficient best known randomized agreement protocol despite defect randomness
2004,transformation digital signature scheme designated confirmer signature scheme,since designated confirmer signature scheme introduced chaum formalized okamoto number attempt made design designated confirmer signature scheme efficient time provably secure standard cryptographic assumption yet consistent gap security claim analysis generic theoretical proposal concrete implementation proposal one envision using practice paper propose modification okamoto’s definition security still capture security chosen message attack yet enables design concrete reasonably efficient designated confirmer signature scheme proved secure without resorting random oracle assumption previously done particular present simple transformation digital signature scheme cramer-shoup goldwasser-micali-rivest gennaro-halevi-rabin secure designated confirmer signature scheme prove security scheme obtained security assumption made digital signature scheme transformed encryption scheme use tool
2003,insecurity fiat-shamir paradigm, fiat shamir proposed general method transforming secure -round public-coin identification scheme digital signature scheme idea transformation replace random message verifier identification scheme value deterministic hash function evaluated various quantity protocol message signed fiat-shamir methodology producing digital signature scheme quickly gained popularity yield efficient easy implement digital signature scheme important question however remained open digital signature produced fiat-shamir methodology secure answer question negatively show exist secure -round public-coin identification scheme fiat-shamir transformation yield insecure digital signature scheme hash function used transformation contrast work pointcheval stern proved fiat-shamir methodology always produce digital signature secure chosen message attack random oracle model - hash function modeled random oracle among thing make new usage baraks technique taking advantage nonblack-box access program time context digital signature
2003,proving hard-core predicate using list decoding,introduce unifying framework proving predicate p hard-core one-way function f apply broad family function predicate reproving old  entirely different way well showing new hard-core predicate well known one-way function candidate framework extends list-coding method goldreich levin showing hard-core predicate namely predicate correspond error correcting code predicting predicate correspond access corrupted codeword task inverting one-way function correspond task list decoding corrupted codeword characteristic error correcting code emerge addressed framework codewords approximated small number heavy coefficient fourier representation moreover long corrupted word close enough legal codewords share heavy fourier coefficient list decodes devising learning algorithm applied corrupted codewords learning heavy fourier coefficient code defined { }/sup n/ domain learning algorithm kushilevitz mansour already exists code defined z/sub n/ code emerge predicate based number theoretic one-way function rsa exponentiation modulo prime develop new learning algorithm latter algorithm may independent interest outside realm hard-core predicate
2002,secure computation without agreement,recently shown execution authenticated byzantine agreement protocol third party corrupted cannot composed concurrently parallel even sequentially  result put question usage authenticated byzantine agreement setting many execution take place particular true whole body work secure multi-party protocol case / party corrupted protocol strongly rely extensive use broadcast channel turn realized using authenticated byzantine agreement essentially use byzantine agreement cannot eliminated since standard definition secure computation  actually implies byzantine agreement moreover accepted folklore use broadcast channel essential achieving secure multiparty computation / party corruptedin paper show folklore false mildly relax definition secure computation allowing abort show definition reached difference definition previous one follows previously one honest party aborted required honest party also abort thus party agree whether protocol execution terminated successfully new definition possible party abort others receive output thus agreement regarding success protocol execution stress aspect definition remains particular output received guaranteed computed correctly novelty new definition decoupling issue agreement central security issue privacy correctness secure computation result lower bound byzantine agreement longer apply secure computation indeed prove secure multi-party computation achieved number corrupted party without broadcast channel  important corollary result ability obtain multi-party protocol compose
2001,identification protocol secure reset attack,provide identification protocol secure even adversary reset internal state and/or randomization source user identifying executed asynchronous environment like internet give adversary concurrent access instance user protocol suitable use device  adversary control may able reliably maintain internal state invocation
2001,resettably-sound zero-knowledge application,resettably-sound proof argument maintain soundness even prover reset verifier use random coin repeated execution protocol show resettably-sound zero-knowledge argument np exist collision-free hash function exist contrast resettably-sound zero-knowledge proof possible language p/poly present two application resettably-sound zero-knowledge argument first construct resettable zero-knowledge argument knowledge np using natural relaxation definition argument  knowledge note standard definition proof knowledge impossible obtain resettable zero-knowledge argument knowledge language outside bpp second construct constant-round resettable zero-knowledge argument np public-key model assumption collision-free hash function exist improves upon sub-exponential hardness assumption required previous construction emphasize  use non-black-box zero-knowledge simulation indeed show  impossible achieve using black-box simulation particular language bpp resettably-sound argument zero-knowledge respect black-box simulation
2000,testing monotonicity,n/a
2000,limit nonapproximability lattice problem,show simple constant-round interactive proof system problem capturing approximability within factor optimization problem integer lattice specifically closest vector problem  shortest vector problem  interactive proof conp direction give interactive protocol showing vector far lattice  interactive protocol showing shortest-lattice-vector long  furthermore interactive proof system honest-verifier perfect zero-knowledge conclude approximating cvp  within factor ofis in∩co thus seems unlikely approximating problem within afactor np-hard previously cvp  problem lagarias et al  håstad  banaszczyk  showed gap problem corresponding approximating cvp  within n in∩co hand arora et al  showed gap problem corresponding approximating cvp within logn quasi-np-hard
2000,resettable zero-knowledge extended abstract,introduce notion resettable zero-knowledge  new security measure cryptographic protocol strengthens classical notion zero-knowledge essence rzk protocol one remains zero knowledge even adversary interact prover many time time resetting prover initial state forcing use random tape known example zero-knowledge proof argument trivially breakable setting moreover definition zero-knowledge proof knowledge breakable setting general complexity assumption hold example discrete logarithm problem hard construct  resettable zero-knowledge proof-systems np non-constant number round * five-round resettable witness-indistinguishable proofsystems np e four-round resettabie zero-knowledge argument np public key model verifier fixed public key associated addition shedding new light make zero knowledge possible  rzk great relevance application firstly rzk protocol closed parallel concurrent execution thus guaranteed secure implemented fully asynchronous network even adversary schedule arrival every message sent foil security secondly rzk protocol enlarge range physical way provers zk protocol securely implemented including device cannot reliably toss coin line keep state
1999,primality testing using elliptic curve,present primality proving algorithma probablistic primality test produce short certificate primality prime input prove test run expected polynomial time vanishingly small fraction prime corollary obtain algorithm generating large certified prime distribution statistically close uniform conjecture gap consecutive prime bounded polynomial size test shown run expected polynomial time prime yielding la vega primality testour test based new methodology applying group theory problem prime certification application methodology using group generated elliptic curve finite fieldswe note methodology method subsequently used improved upon notably primality proving algorithm adleman huang using hyperelliptic curve practical primality provers using elliptic curve
1999,efficient threshold public key cryptosystem secure adaptive chosen ciphertext attack,paper proposes simple threshold public-key cryptosystem  secure adaptive chosen ciphertext attack decisional diffie-hellman  intractability assumptionpreviously shown design non-interactive threshold pkc secure chosen ciphertext attack random-oracle model ddh intractability assumption  random-oracle used proof security eliminate interaction general completeness  multi-party computation  enable principle converting single server pkc secure cca  threshold one conversion inefficient require much interaction among server ciphertext decrypted recent work cramer shoup  single server pkc secure adaptive cca starting point new proposal
1998,property testing connection learning approximation,paper consider question determining whether function f property p -far function property p property testing algorithm given sample value f instance drawn according distribution case also allowed query f instance choice study question different property establish connection problem learning theory approximationin particular focus attention testing graph property given access graph g form able query whether edge exists pair vertex devise algorithm test whether underlying graph property bipartite k-colorable p-clique  graph property testing algorithm probabilistic make assertion correct high probability making number query independent size graph moreover property testing algorithm used efficiently  construct partition graph correspond property tested hold input graph
1998,fault-tolerant computation full information model,initiate investigation general fault-tolerant distributed computation full-information model full information model restriction made computational power faulty party information available previous work model concentrated particular problem simulating single bounded-bias global coin flip  alon naor  pp -- widen scope investigation general question well arbitrary fault-tolerant computation performed model  obtain considered first step directionwe present efficient two-party protocol fault-tolerant computation bivariate function prove advantage dishonest player protocol minimum one possible also present efficient m-party fault-tolerant protocol sampling general distribution  algorithm seems important building block towards design efficient multiparty protocol fault-tolerant computation multivariate function
1998,introduction special section probabilistic proof system,n/a
1998,random server model private information retrieval achieve information theoretic pir avoiding database replication,private information retrieval  scheme enable user obtain information database keeping query secret database managerswe propose new model pir utilizing auxiliary random server provide privacy service database access model prior on-line communicationwhere user request query database engages initial preprocessing setup stage random server using model achieve first pir information theoretic solution inwhich database need give away data replicated minimal on-line computation cost databasethis solves privacy efficiency problem inherent previous solutionsin particular previous information theoretic pir scheme required multiple replication database separate entitieswhich allowed communicate previous scheme  amount computation performed database on-line every query least linear size database contrast solution database give away content entity initial setup stage cost computation database need perform amount computation answer question user on-line extra on-line computation done auxiliary random server
1998,limit non-approximability lattice problem,show simple constant-round interactive proof system problemscapturing approximability within factor - n optimizationproblems integer lattice specifically closest vector problem shortest vector problem  interactive proof theconp direction give interactive protocol showing vectoris far lattice  interactive protocol showing theshortest-lattice-vector long  furthermore interactive proofsystems honest-verifier perfect zero-knowledge conclude approximating cvp  within factor - n np & coam thusit seems unlikely approximating problem within - n factor isnp-hard previously cvp  problem lagarias et al ha#stad banaszczyk  showed gapproblem corresponding approximating cvp  within n innp & conp hand arora et al  j comput system sci  showed gap problem corresponding approximatingcvp within log n quasi-np-hard
1997,verifiable partial key escrow,one main objection existing proposal key escrow individual privacy relies high level trust law enforcement agency particular even government trustworthy today may replaced un-trustworthy government tomorrow could immediately suddenly recover secret key user partial key escrow suggested address concern context de key part user key escrowed authority must make computational effort find rest extend idea provide scheme perform partial key escrow verifiable manner public-key encryption setting uncover subtle issue must addressed partial key escrow scheme secure important danger early recovery show proposal verifiable partial key escrow suffer early recovery problem thus fact offer advantage standard key-escrow scheme verifiable partial key escrow scheme diffie-hellman cryptosystem suffer early recovery political debate make user versus law-enforcement conflict privacy vanish today seeing corporation pushed business need ready accept form key escrow realistic urgent question find form guarantee privacy scheme candidate
1997,eliminating decryption error ajtai-dwork cryptosystem,following ajtais lead ajtai dwork recently introduced public-key encryption scheme secure assumption certain computational problem lattice hard worst-case encryption method may cause decryption error though small probability  paper modify encryption method ajtai dwork legitimate receiver always recovers message sent make ajtai-dwork cryptosystem error-free
1997,public-key cryptosystems lattice reduction problem,present new proposal trapdoor one-way function derive public-key encryption digital signature security new construction based conjectured computational difficulty lattice-reduction problem providing possible alternative existing public-key encryption algorithm digital signature rsa ds
1997,pseudo-random number generation within cryptographic algorithm dd case,ds signature algorithm requires signer generate new random number every signature show random number ds generated using linear congruential pseudorandom number generator  secret key quickly recovered seeing signature illustrates high vulnerability ds weakness underlying random number generation process also confirms sequence produced lcg predictable known used extreme caution even within cryptographic application would appear protect sequence attack present applies truncated linear congruential generator well extended pseudo random generator described via modular linear equation
1997,new direction cryptography twenty year later,diffie hellman  published fundamental paper new direction cryptography announced stand brink revolution cryptography twenty year later survey progress made cryptography time especially focus successful interplay complexity theory cryptography witnessed perhaps vividly development interactive probabilistic proof system pseudo random number generation
1997,multi-party computation past present,n/a
1996,interactive proof hardness approximating clique,contribution paper two-fold first connection established approximating size largest clique graph multi-prover interactive proof second efficient multi-prover interactive proof np language constructed verifier us random bit communication bit last connection clique efficient multi-prover interaction proof shown yield hardness  complexity approximating size largest clique graphof independent interest proof correctness multilinearity test function
1995,probabilistically checkable proof application,question efficiently verified versus efficiently computed played central role complexity theory originating definition  class np discovery fast randomized primality test ’s  definition efficient computation largely extended include randomized algorithm ’s introduction interactive proof  much effort devoted understanding randomness enhances efficiently verified
1995,incremental cryptography application virus protection,goal incremental cryptography design cryptographic algorithm property applied algorithm document possible quickly update result algorithm modifled document rather re-compute scratch setting cryptographic algorithm encryption signature frequently applied changing document dramatic eciency improvement achieved one setting use authentication tag virus protection consider document modifled powerful  document modiflcation operation insertion deletion character-strings  provide ecient incremental signature message authentication scheme supporting document modiflcation operation meet strong notion tamper-proof security appropriate virus protection setting initiate study incremental encryption providing deflnitions well solution finally raise novel issue  incremental authentication scheme
1994,complexity decision versus search,basic question np whether search reduces polynomial time decision paper indicates answer negative complexity assumption  language np search reduce decision constructedthese idea extend natural way interactive proof program checking similar assumption author present language np harder prove membership interactively decide membership language np checkable
1994,incremental cryptography case hashing signing,initiate investigation new kind efficiency cryptographic transformation idea applied transformation document time update result upon modification “proportional” “amount modification” done thereby one obtains much faster cryptographic primitive environment closely related document undergoing cryptographic transformationswe provide basic definition enabling treatment new notion exemplify approach suggesting incremental scheme hashing signing efficient according new measure
1994,efficient probabilistic checkable proof application approximation,n/a
1993,randomness interactive proof,paper initiate study quantitative aspect randomness interactive proof main result applies equivalent form ip known arthur-merlin  game randomness-efficient technique decreasing error probability given proof system forl achieves error probability / cost arthur sendingl random bit per round given polynomialk=k show construct proof system forl number round original proof system achieves error  −k cost arthur sending onlyo random bit per roundunderlying transformation novel sampling method approximating average value arbitrary functionf{} l →  method evaluates function ono sample point generated using onlyo coin toss get estimate probability least -δ within ∈ average value function
1993,efficient interactive proof application approximation,n/a
1993,efficient probabilistically checkable proof application approximation,n/a
1992,invariant signature non-interactive zero-knowledge proof equivalent extended abstract,standard definition digital signature allows document many valid signature paper consider subclass digital signature called invariant signature legal signature document must identical according polynomial-time computable function  hard predict given unsigned document formalize notion show equivalence non-interactive zero-knowledge proof
1991,approximating clique almost np-complete preliminary version,computational complexity approximating omega  size largest clique graph g within given factor considered shown certain approximation procedure exist exptime=nexptime np=p< >
1991,language easier proof,language np presented harder prove membership interactively decide membership similarly language checking harder computing membership presented assumption triple-exponential time incoherent set np constructed without assumption incoherent set constructed dspace  yielding first uncheckable non-random-self-reducible set space< >
1991,fault-tolerant computation full information model extended abstract,efficient two-party protocol fault-tolerant computation two-argument function presented proved influence dishonest player protocol minimum one possible  also presented efficient m-party fault-tolerant protocol sampling general distribution  efficient m-party protocol computation m-argument function given proved protocol function influence dishonest player outcome protocol minimum one possible < >
1990,power interaction,letip class language recognized interactive proof withf interaction babai  showed language recognized interactive proof bounded number interaction recognized interactive proof two interaction ie every constantk ip collapse toipin paper give evidence interactive proof unbounded number interaction may powerful interactive proof bounded number interaction show polynomially bounded polynomial time computable functionf anyg=o exists oracleb thatip b  = ⊄ ip b technique employed extension technique proving lower bound small depth circuit used   
1990,fair computation general function presence immoral majority,paper describes method n player majority may faulty compute correctly privately fairly computable function f xi input i-th player method us building block oblivious transfer primitiveprevious method achieved property boolean function particular precluded composition protocolswe also propose simpler definition security multi-player protocol still implies previous definition privacy correctness
1989,private coin versus public coin interactive proof system,interactive proof system method one party unlimited resource called prover convince party limited resource call verifier truth proposition verifier may toss coin ask repeated question prover run efficient test upon provers response deciding whether convinced extends familiar proof system implicit notion np verifier may toss coin speak listen verify interactive proof system may yield proof strict mathematical sense proof probabilistic exponentially small though non-zero chance error consider two notion interactive proof system one defined goldwasser micali rackoff  permit verifier coin tossed private ie secret source randomness 
1989,knowledge complexity interactive proof system,usually proof theorem contains knowledge mere fact theorem true instance prove graph hamiltonian suffices exhibit hamiltonian tour however seems contain knowledge single bit hamiltonian/non-hamiltonianin paper computational complexity theory knowledge contained proof developed zero-knowledge proof defined proof convey additional knowledge correctness proposition question example zero-knowledge proof system given language quadratic residuosity quadratic nonresiduosity first example zero-knowledge proof language known efficiently recognizable
1989,new paradigm digital signature message authentication based non-interative zero knowledge proof,using non-interactive zero knowledge proof provide simple new para- digm diǵital signing message authentication secure adaptive chosen message attackfor digital signature require non-interactive zero knowledge proof publicly verifiable checkable anyone rather directed particular verifier accordingly show implement non- interactive zero knowledge proof network property anyone network individually check correctness proof zero knowledge sufficiently small coalition enables u implement signature history independent
1989,efficient identification scheme using two prover interactive proof,present two efficient identification scheme based difficulty solving subset sum problem circuit satisfiability problem scheme use two prover model introduced  verifier  interacts two untrusted provers  jointly agreed strategy convince verifier identity believe validity identity proving procedure verifier must make sure two provers communicate dur- ing course proof process addition simplicity efficiency scheme resulting two prover interactive proof shown perfect zero knowledge making intractability assumption
1989,multiparty computation faulty majority,address problem performing multiparty computation half processor cooperating byzantine fault show compute boolean function n input distributively preserving privacy input held nonfaulty processor ensuring faulty processor obtain function value “if if” nonfaulty processor nonfaulty processor obtain correct function value detect cheating high probability solution based new type verifiable secret sharing secret revealed small increment slow-revealing process ensures processor discover secret roughly time solution assumes existence oblivious transfer protocol us broadcast channel require processor equal computing power
1989,structure secret key exchange protocol,modern cryptography fundamentally concerned problem secure private communication suppose two party alice bob wish communicate privately public channel  alice bob able meet privately beforehand agree common secret key becomes easy achieve private communication alice bob might able first meet private agree key case ask assumption still agree common secret key conversation conducted entirely public
1989,multiparty computation faulty majority extended announcement,problem performing multiparty computation half processor cooperating byzantine fault addressed shown compute boolean function n input distributively preserving privacy input held nonfaulty processor ensuring faulty processor obtain function value nonfaulty processor nonfaulty processor obtain correct function value detect cheating high probability solution based new type verifiable secret sharing secret revealed small increment process ensures processor discover secret roughly time solution assumes existence oblivious transfer protocol us broadcast channel processor required equal computing power< >
1988,digital signature scheme secure adaptive chosen-message attack,present digital signature scheme based computational difficulty integer factorizationthe scheme posse novel property robust adaptive chosen-message attack adversary receives signature message choice  cannot later forge signature even single additional message may somewhat surprising since folklore property forgery equivalent factoring invulnerable adaptive chosen-message attack considered contradictorymore generally show construct signature scheme property based existence claw-free pair permutationsa potentially weaker assumption intractibility integer factorizationthe new scheme potentially practical signing verifying signature reasonably fast signature compact
1988,everything provable provable zero-knowledge,assuming existence secure probabilistic encryption scheme show every language admits interactive proof admits  zero-knowledge interactive proof result extends result goldreich micali wigderson assumption np admits zero-knowledge interactive proof assuming envelope bit commitment show tht every language admits interactive proof admits perfect zero-knowledge interactive proof
1988,completeness theorem non-cryptographic fault-tolerant distributed computation extended abstract,every function n input efficiently computed complete network n processor way thatif fault occur set size < n/ player get additional information even byzantine fault allowed set size < n/ either disrupt computation get additional informationfurthermore bound tight!
1988,multi-prover interactive proof remove intractability assumption,quite complex cryptographic machinery developed based assumption one-way function exist yet know possible candidate important time find alternative foundation design secure cryptography introduce new model generalized interactive proof step direction prove np language perfect zero-knowledge proof-systems model without making intractability assumptionsthe generalized interactive-proof model consists two computationally unbounded untrusted provers rather one jointly agree strategy convince verifier truth assertion engage polynomial number message exchange verifier attempt believe validity assertion verifier must make sure two provers communicate course proof process thus complexity assumption made previous work traded physical separation two proverswe call new model multi-prover interactive-proof model examine property applicability cryptography
1986,construct random function,constructive theory randomness function based computational complexity developed pseudorandom function generator presented generator deterministic polynomial-time algorithm transforms pair  g one-way function r random k-bit string polynomial-time computable function r {   k}  {   k} r cannot distinguished random function probabilistic polynomial-time algorithm asks receives value function argument choice result application cryptography random construction complexity theory
1986,almost prime quickly certified,paper present new probabilistic primality test upon termination test output composite prime along short proof correctness verified deterministic polynomial time test different test miller solovay-strassen rabin assertion primality certain rather correct high probability dependent unproven assumption test terminates expected polynomial time exponentially vanishing fraction input length k every k result implies exist infinite set prime recognized expected polynomial time large certified prime generated expected polynomial time plausible condition distribution prime small interval proposed algorithm shown run expected polynomial time every input condition implied cramers conjecture method employed theory elliptic curve finite field
1985,bit security modular squaring given partial factorization modulos,known given composite integer n = p  p   q quadratic residue modulo n guessing least significant bit square root q non-negligible advantage hard factoring nin paper extend result multi-prime number n = p  p p l  show given n q  quadratic residue mod n guessing least significant bit square root q hard completely factoring n furthermore difficulty guessing least significant bit square root q remains unchanged even two prime factor n p p l  known result useful designing multi-party cryptographic protocol
1985,verifiable secret sharing achieving simultaneity presence fault extended abstract,verifiable secret sharing cryptographic protocol allows one break secret  pieccs publicly distribute thcln  people tile secret reconstructible given sufficiently many piece rhe novelty everyone verify received valid piece secret without idea secret one application tool simulation simultaneous-broadcast network semi-synchronous broadcast network 
1985,knowledge complexity interactive proof-systems extended abstract,n/a
1984,probabilistic encryption,new probabilistic model data encryption introduced model suitable complexity assumption proved extracting information cleartext cyphertext hard average adversary polynomially bounded computational resource proof hold message space probability distribution first implementation model presented security implementation proved interactability assumptin deciding quadratic residuosity modulo composite number whose factorization unknown
1984,cryptographic application random function,“random functions” efficiently constructed discus possible application cryptographydistributing unforgable id number locally verified station contain small amount storage dynamic hashing even adversary change key-distribution depending value hashing function assigned previous key still force collision constructing deterministic memoryless authentication scheme provably secure chosen message attack construction identity friend foe system 
1984,efficient probabilistic public-key encryption scheme hide partial information,paper introduces first probabilistic public-key encryption scheme combine following two propertiesperfect secrecy respect polynomial time eavesdropper message space polynomial time bounded passive adversary tapping line compute partial information message encoding unless factoring composite integer probabilistic polynomial time efficiecy compare favorably deterministic rsa public-key cryptosystem encoding decoding time bandwidth expansion  security system propose also based assumption rsa function intractable maintaining cost encoding decoding data expansion implementation may advantage practice
1984,paradoxicalsolution signature problem abstract,present general signature scheme us pair trap-door permutation  infeasible find x f = f scheme posse novel property robust adaptive chosen message attack adversary first asks receives sgnatures message choice  later forge signature even singl additional messagefor specific instance general scheme prove thatforging signature provably equivalent factoring  forging additional signature adaptive chosen message attack still equivalent factoring  scheme “paradoxical” since two property believed  contradictorythe new scheme potentially practical signing verifying signature reasonably fast signature long
1984,paradoxical solution signature problem extended abstract,present general signature scheme us pair trap-door permutation  infeasible find x f = f scheme posse novel property robust adaptive chosen message attack adversary first asks receives sgnatures message choice  later forge signature even singl additional messagefor specific instance general scheme prove thatforging signature provably equivalent factoring  forging additional signature adaptive chosen message attack still equivalent factoring scheme paradoxical since two property believed  contradictorythe new scheme potentially practical signing verifying signature reasonably fast signature long
1984,construct random function extended abstract,paper develops constructive theory randomness function based computational complexity present deterministic polynomial-time algorithm transforms pair  g one-way  function r random k-bit string polynomial-time computable function f/sub r/{ /sup k} /spl ioarr/ {  /sup k/} f/sub r/s cannot distinguished random function probabilistic polynomial time algorithm asks receives value function argument choice result application cryptography random construction complexity theory
1983,strong signature scheme,notion digital signature based trapdoor function introduced diffie hellman rivest shamir adleman gave first number theoretic implementation signature scheme based trapdoor function f trapdoor function message f signature signature verified computing f = approach present following problem even f hard invert may special message space  easy sign without knowing trapdoor information possible forge signature random number violates requirement many protocol given polynomial number signed message may possible sign new one without knowing trapdoor informationwe solve problem exhibiting two signature scheme strategy adversary seen previously signed message moderate success forging even single additional signature transformable fast algorithm factoring inverting rsa function provably hold message space possible probability distribution thus particular given signature forging signature m+ sm hard factoring two signature scheme
1982,signature authentication,design cryptographic protocol using trapdoor one-way function received considerable attention past year  recently attention paid provide rigorous correctness proof based simple mathematical assumption example coin flipping  mental poker  perhaps reasonable speculate time cryptographic protocol eventually designed provably secure simple assumption factoring large number inverting rsa function computationally intractable appropriate sense
1982,establish private code public network extended abstract,diffie hellman model public key cryptosystem received much attention way provide secure network communication paper show original diffie hellman model guarantee security user system shown user powerful adversary traditionally considered passive eavesdropper decrypt user message implementation public key cryptosystem using rsa function rabin function goldwasser&micali scheme weakness depends bit security encryption function rsa  function show computing cyphertext specific bit cleartext polynomially equivalent inverting function  many message space bit easily found communicating system insecure present modification diffie hellman model public-key cryptosystem one concrete implementation modified model implementation difficulty extracting partial information clear text message encoding eavesdropper user chosen cyphertext attack proved equivalent computational difficulty factoring equivalence proof hold strong probabilistic sense message space additional assumption existence perfect signature scheme trusted authentication center made
1982,probabilistic encryption play mental poker keeping secret partial information,paper proposes encryption scheme posse following property  adversary know encryption algorithm given cyphertext cannot obtain information clear-textany implementation public key cryptosystem proposed diffie hellman  posse propertyour encryption scheme follows idea number theoretic implementation public key cryptosystem due rivest shamir adleman  rabin 
