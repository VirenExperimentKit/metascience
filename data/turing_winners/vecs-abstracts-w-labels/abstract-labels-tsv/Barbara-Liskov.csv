Year	Title
2019	cross-chain deal adversarial commerce
2019	keynote multicore programming
2016	type-aware transaction faster concurrent code
2016	accepting blame safe tunneled exception
2015	lightweight flexible object-oriented generic
2015	perspective system language abstraction
2014	fast database fast durability recovery multicore parallelism
2014	modular efficient past state system berkeley db
2013	ifdb decentralized information flow control database
2013	speedy transaction multicore in-memory database
2012	automatic reconfiguration large-scale reliable storage system
2012	programming language - past achievement future challenge
2012	keynote presentation programming turing machine
2012	abstraction usable information flow control aeolus
2012	granola low-overhead distributed transaction coordination
2010	mps mobile proactive secret sharing
2010	transactional consistency automatic management application data cache
2010	viewstamped replication byzantine fault tolerance
2009	full-information lookup peer-to-peer overlay
2009	tolerating latency replicated state machine client speculation
2007	greedy virtual coordinate geographic routing
2007	tolerating byzantine fault transaction processing system using commit barrier scheduling
2007	mapjax data structure abstraction asynchronous web application
2006	epichord parallelizing chord lookup algorithm reactive routing state management
2006	modular software upgrade distributed system
2006	tolerating byzantine faulty client quorum system
2006	geographic routing without planarization
2006	hq replication hybrid quorum protocol byzantine fault tolerance
2005	path vector face routing geographic routing local face information
2005	high availability dhts erasure coding v replication
2005	byzantine client rendered harmless
2004	efficient routing peer-to-peer overlay
2004	timeline high performance archive distributed object store
2004	brief announcement reconfigurable byzantine-fault-tolerant atomic memory
2004	transactional file system fast
2003	base using abstraction improve fault tolerance
2003	one hop lookup peer-to-peer overlay
2003	lazy modular upgrade persistent object store
2003	ownership type object encapsulation
2002	practical byzantine fault tolerance proactive recovery
2002	design robust peer-to-peer system
2001	byzantine fault tolerance fast
2001	using abstraction improve fault tolerance
2000	protecting privacy using decentralized label model
2000	generalized isolation level definition
2000	proactive recovery byzantine-fault-tolerant system
1999	providing persistent object distributed system
1999	practical byzantine fault tolerance
1998	complete safe information flow decentralized label
1997	collecting cyclic distributed garbage controlled migration
1997	fragment reconstruction providing global cache coherence transactional storage system
1997	lazy consistency using loosely synchronized clock
1997	collecting distributed garbage cycle back tracing
1997	parameterized type java
1997	partitioned garbage collection large object store
1997	hac hybrid adaptive caching distributed storage system
1997	decentralized model information flow control
1996	type-safe heterogeneous sharing fast
1996	fragment reconstruction new cache coherence scheme split caching storage system
1996	safe efficient sharing persistent object thor
1996	scale transactional storage system
1995	subtypes v clause constraining parametric polymorphism
1995	efficient optimistic concurrency control using loosely synchronized clock
1995	specification use defining subtypes
1994	behavioral notion subtyping
1994	reducing cross domain call overhead using batched future
1994	fault-tolerant distributed garbage collection client-server object-oriented database
1994	disconnected operation thor object-oriented database system
1993	practical us synchronized clock distributed system
1993	reference remote mobile object thor
1993	history clu
1992	providing high availability using lazy replication
1992	garbage collection distributed heap
1992	distributed object management thor
1992	efficient recovery harp
1991	efficient at-most-once message based synchronized clock
1990	lazy replication exploiting semantics distributed service
1990	replicated unix file system
1989	design fault-tolerant distributed implementation linda
1989	atomic garbage collection managing stable heap
1988	distributed programming argus
1988	promise linguistic support efficient asynchronous procedure call distributed system
1988	viewstamped replication general primary copy
1987	implementation argus
1986	specification distributed program
1986	highly-available distributed service fault-tolerant distributed garbage collection
1986	limitation synchronous communication static process structure language distributed computing
1985	reliable object storage support atomic action
1983	issue process communication structure distributed program
1982	value transmission method abstract data type
1982	linguistic support distributed program
1981	report workshop fundamental issue distributed computing fallbrook california december 1980
1979	exception handling clu
1979	modular program construction using abstraction
1979	primitive distributed computing
1978	language extension expressing constraint data access
1978	crossfertilization dbms research discipline computer science panel discussion
1977	abstraction mechanism clu
1976	language extension controlling access shared data
1975	specification technique data abstraction
1975	data type program correctness
1974	programming abstract data type
1972	design venus operating system
1972	design methodology reliable software system
